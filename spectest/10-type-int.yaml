# Generated by spectest/gen-type-spectest v0.9.11 on Thu Oct 18 19:46:42 2012

tests: 
  - 
    input: -1
    name: "type check: must accept -1"
    schema: int
    valid: 1
  - 
    input: 0
    name: "type check: must accept 0"
    schema: int
    valid: 1
  - 
    input: 1
    name: "type check: must accept 1"
    schema: int
    valid: 1
  - 
    input: '1.1'
    name: "type check: must reject 1.1"
    schema: int
    valid: 0
  - 
    input: a
    name: "type check: must reject a"
    schema: int
    valid: 0
  - 
    input: []

    name: "type check: must reject []"
    schema: int
    valid: 0
  - 
    input: {}

    name: "type check: must reject {}"
    schema: int
    valid: 0
  - 
    input: ~
    name: must accept undefined value
    schema: int
    valid: 1
  - 
    input: ~
    name: req=0 must accept undefined value
    schema: 
      - int
      - req
      - 0
    valid: 1
  - 
    input: ~
    name: req=1 must reject undefined value
    schema: 
      - int
      - req
      - 1
    valid: 0
  - 
    input: 2
    name: forbidden=0 must accept defined value
    schema: 
      - int
      - forbidden
      - 0
    valid: 1
  - 
    input: 2
    name: forbidden=1 must reject defined value
    schema: 
      - int
      - forbidden
      - 1
    valid: 0
  - 
    input: ~
    name: "default: must accept valid default 1"
    schema: 
      - int*
      - default
      - 1
    valid: 1
  - 
    input: ~
    name: "default: must reject invalid default []"
    schema: 
      - int*
      - default
      - []

    valid: 0
  - 
    input: 1
    name: "is: must accept same value"
    schema: 
      - int
      - is
      - 1
    valid: 1
  - 
    input: 1
    name: "is: must reject different value"
    schema: 
      - int
      - is
      - 2
    valid: 0
  - 
    input: 1
    name: "!is: (1)"
    schema: 
      - int
      - "!is"
      - 1
    valid: 0
  - 
    input: 1
    name: "!is: (2)"
    schema: 
      - int
      - "!is"
      - 2
    valid: 1
  - 
    input: 1
    name: "is&: (0)"
    schema: 
      - int
      - is&
      - []

    valid: 1
  - 
    input: 1
    name: "is&: (1)"
    schema: 
      - int
      - is&
      - 
        - 1
    valid: 1
  - 
    input: 1
    name: "is&: (2)"
    schema: 
      - int
      - is&
      - 
        - 2
        - 1
    valid: 0
  - 
    input: 1
    name: "is&: (3)"
    schema: 
      - int
      - is&
      - 
        - 1
        - 2
    valid: 0
  - 
    input: 1
    name: "is&: (4)"
    schema: 
      - int
      - is&
      - 
        - 2
        - ~
    valid: 0
  - 
    input: 1
    name: "in: must accept valid choices"
    schema: 
      - int
      - in
      - &1 
        - 1
        - 2
    valid: 1
  - 
    input: 1
    name: "in: must reject empty choices"
    schema: 
      - int
      - in
      - []

    valid: 0
  - 
    input: 1
    name: "!in: (1)"
    schema: 
      - int
      - "!in"
      - *1
    valid: 0
  - 
    input: 1
    name: "!in: (2)"
    schema: 
      - int
      - "!in"
      - &2 []

    valid: 1
  - 
    input: 1
    name: "in&: (0)"
    schema: 
      - int
      - in&
      - []

    valid: 1
  - 
    input: 1
    name: "in&: (1)"
    schema: 
      - int
      - in&
      - 
        - *1
        - *1
    valid: 1
  - 
    input: 1
    name: "in&: (2)"
    schema: 
      - int
      - in&
      - 
        - *2
        - *1
    valid: 0
  - 
    input: 1
    name: "in&: (3)"
    schema: 
      - int
      - in&
      - 
        - *1
        - *2
    valid: 0
  - 
    input: 1
    name: "in&: (4)"
    schema: 
      - int
      - in&
      - 
        - *2
        - []

    valid: 0
  - 
    input: 2
    name: "min: 2 -3"
    schema: 
      - int
      - min
      - -3
    valid: 1
  - 
    input: 2
    name: "min: 2 2"
    schema: 
      - int
      - min
      - 2
    valid: 1
  - 
    input: 2
    name: "min: 2 4 -> fail"
    schema: 
      - int
      - min
      - 4
    valid: 0
  - 
    input: 2
    name: "xmin: 2 -3"
    schema: 
      - int
      - xmin
      - -3
    valid: 1
  - 
    input: 2
    name: "xmin: 2 2 -> fail"
    schema: 
      - int
      - xmin
      - 2
    valid: 0
  - 
    input: 2
    name: "xmin: 2 4 -> fail"
    schema: 
      - int
      - xmin
      - 4
    valid: 0
  - 
    input: 2
    name: "max: 2 -3 -> fail"
    schema: 
      - int
      - max
      - -3
    valid: 0
  - 
    input: 2
    name: "max: 2 2"
    schema: 
      - int
      - max
      - 2
    valid: 1
  - 
    input: 2
    name: "max: 2 4"
    schema: 
      - int
      - max
      - 4
    valid: 1
  - 
    input: 2
    name: "xmax: 2 -3 -> fail"
    schema: 
      - int
      - xmax
      - 4
    valid: 1
  - 
    input: 2
    name: "xmax: 2 2 -> fail"
    schema: 
      - int
      - xmax
      - 2
    valid: 0
  - 
    input: 2
    name: "xmax: 2 4"
    schema: 
      - int
      - xmax
      - 4
    valid: 1
  - 
    input: 2
    name: "between: 2 -3 & 4"
    schema: 
      - int
      - between
      - 
        - -3
        - 4
    valid: 1
  - 
    input: 2
    name: "between: 2 -3 & 2"
    schema: 
      - int
      - between
      - 
        - -3
        - 2
    valid: 1
  - 
    input: 2
    name: "between: 2 2 & 2"
    schema: 
      - int
      - between
      - 
        - 2
        - 2
    valid: 1
  - 
    input: 4
    name: "between: 4 -3 & 2 -> fail"
    schema: 
      - int
      - between
      - 
        - -3
        - 2
    valid: 0
  - 
    input: 2
    name: "xbetween: 2 -3 & 4"
    schema: 
      - int
      - xbetween
      - 
        - -3
        - 4
    valid: 1
  - 
    input: 2
    name: "xbetween: 2 -3 & 2 -> fail"
    schema: 
      - int
      - xbetween
      - 
        - -3
        - 2
    valid: 0
  - 
    input: 2
    name: "xbetween: 2 2 & 2 -> fail"
    schema: 
      - int
      - xbetween
      - 
        - 2
        - 2
    valid: 0
  - 
    input: 4
    name: "xbetween: 4 -3 & 2 -> fail"
    schema: 
      - int
      - xbetween
      - 
        - -3
        - 2
    valid: 0
  - 
    input: 2
    name: "!between: (1)"
    schema: 
      - int
      - "!between"
      - &3 
        - -3
        - 2
    valid: 0
  - 
    input: 2
    name: "!between: (2)"
    schema: 
      - int
      - "!between"
      - &4 
        - -3
        - -3
    valid: 1
  - 
    input: 2
    name: "between&: (0)"
    schema: 
      - int
      - between&
      - []

    valid: 1
  - 
    input: 2
    name: "between&: (1)"
    schema: 
      - int
      - between&
      - 
        - *3
        - 
          - 2
          - 4
    valid: 1
  - 
    input: 2
    name: "between&: (2)"
    schema: 
      - int
      - between&
      - 
        - *4
        - *3
    valid: 0
  - 
    input: 2
    name: "between&: (3)"
    schema: 
      - int
      - between&
      - 
        - *3
        - *4
    valid: 0
  - 
    input: 2
    name: "between&: (4)"
    schema: 
      - int
      - between&
      - 
        - *4
        - 
          - 4
          - 4
    valid: 0
  - 
    input: 10
    name: "mod: (1)"
    schema: 
      - int
      - mod
      - 
        - 3
        - 2
    valid: 0
  - 
    input: 11
    name: "mod: (2)"
    schema: 
      - int
      - mod
      - 
        - 3
        - 2
    valid: 1
  - 
    input: 7
    name: "div_by: (1)"
    schema: 
      - int
      - div_by
      - 3
    valid: 0
  - 
    input: 6
    name: "div_by: (2)"
    schema: 
      - int
      - div_by
      - 3
    valid: 1
