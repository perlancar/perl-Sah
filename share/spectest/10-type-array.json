{
   "tests" : [
      {
         "schema" : "array",
         "tags" : [
            "type",
            "type:array"
         ],
         "valid" : 1,
         "input" : [],
         "name" : "type check: must accept []"
      },
      {
         "name" : "type check: must accept [1,\"a\"]",
         "input" : [
            1,
            "a"
         ],
         "valid" : 1,
         "schema" : "array",
         "tags" : [
            "type",
            "type:array"
         ]
      },
      {
         "schema" : "array",
         "tags" : [
            "type",
            "type:array"
         ],
         "input" : [
            []
         ],
         "valid" : 1,
         "name" : "type check: must accept [[]]"
      },
      {
         "valid" : 0,
         "input" : 1,
         "name" : "type check: must reject 1",
         "tags" : [
            "type",
            "type:array"
         ],
         "schema" : "array"
      },
      {
         "tags" : [
            "type",
            "type:array"
         ],
         "schema" : "array",
         "input" : "a",
         "valid" : 0,
         "name" : "type check: must reject a"
      },
      {
         "name" : "type check: must reject {}",
         "valid" : 0,
         "input" : {},
         "schema" : "array",
         "tags" : [
            "type",
            "type:array"
         ]
      },
      {
         "name" : "must accept undefined value",
         "input" : null,
         "valid" : 1,
         "schema" : "array",
         "tags" : [
            "type",
            "type:array"
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:defhash_v"
         ],
         "schema" : [
            "array",
            "defhash_v",
            1
         ],
         "valid" : 1,
         "input" : null,
         "name" : "defhash_v"
      },
      {
         "valid" : 1,
         "input" : null,
         "name" : "v",
         "tags" : [
            "type",
            "type:array",
            "clause:v"
         ],
         "schema" : [
            "array",
            "v",
            1
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:c"
         ],
         "schema" : [
            "array",
            "c.foo.bar",
            1
         ],
         "name" : "c",
         "valid" : 1,
         "input" : null
      },
      {
         "valid" : 1,
         "input" : null,
         "name" : "default_lang",
         "schema" : [
            "array",
            "default_lang",
            "id_ID"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:default_lang"
         ]
      },
      {
         "input" : null,
         "valid" : 1,
         "name" : "name",
         "tags" : [
            "type",
            "type:array",
            "clause:name"
         ],
         "schema" : [
            "array",
            "name",
            "some name"
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:summary"
         ],
         "schema" : [
            "array",
            "summary",
            "some summary"
         ],
         "name" : "summary",
         "input" : null,
         "valid" : 1
      },
      {
         "schema" : [
            "array",
            "description",
            "some description and `markdown`"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:description"
         ],
         "input" : null,
         "valid" : 1,
         "name" : "description"
      },
      {
         "name" : "tags",
         "valid" : 1,
         "input" : null,
         "tags" : [
            "type",
            "type:array",
            "clause:tags"
         ],
         "schema" : [
            "array",
            "tags",
            [
               "some",
               "tags"
            ]
         ]
      },
      {
         "name" : "req=0 must accept undefined value",
         "input" : null,
         "valid" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:req"
         ],
         "schema" : [
            "array",
            "req",
            0
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:req"
         ],
         "schema" : [
            "array",
            "req",
            1
         ],
         "name" : "req=1 must reject undefined value",
         "valid" : 0,
         "input" : null
      },
      {
         "name" : "forbidden=0 must accept defined value",
         "valid" : 1,
         "input" : [
            1
         ],
         "schema" : [
            "array",
            "forbidden",
            0
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:forbidden"
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:forbidden"
         ],
         "schema" : [
            "array",
            "forbidden",
            1
         ],
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "forbidden=1 must reject defined value"
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:default"
         ],
         "schema" : [
            "array*",
            "default",
            []
         ],
         "name" : "default: must accept valid default []",
         "input" : null,
         "valid" : 1
      },
      {
         "schema" : [
            "array*",
            "default",
            "a"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:default"
         ],
         "input" : null,
         "valid" : 0,
         "name" : "default: must reject invalid default a"
      },
      {
         "dies" : 1,
         "input" : [
            1
         ],
         "name" : "clause (dies, unknown clause)",
         "tags" : [
            "type",
            "type:array",
            "clause:clause"
         ],
         "schema" : [
            "array*",
            "clause",
            [
               "foo",
               1
            ]
         ]
      },
      {
         "valid" : 1,
         "input" : [
            1
         ],
         "name" : "clause (ok)",
         "schema" : [
            "array*",
            "clause",
            [
               "min_len",
               0
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:clause"
         ]
      },
      {
         "schema" : [
            "array*",
            "clause",
            [
               "min_len",
               0
            ],
            "max_len",
            0
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:clause"
         ],
         "input" : [
            1
         ],
         "valid" : 0,
         "name" : "clause (ok) + clause nok = nok"
      },
      {
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:clause"
         ],
         "schema" : [
            "array*",
            "clause",
            [
               "min_len",
               2
            ]
         ],
         "name" : "clause (nok)",
         "valid" : 0,
         "input" : [
            1
         ]
      },
      {
         "dies" : 1,
         "name" : "clset (dies, unknown clause)",
         "input" : [
            1
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:clset"
         ],
         "schema" : [
            "array*",
            "clset",
            {
               "foo" : 1
            }
         ]
      },
      {
         "schema" : [
            "array*",
            "clset",
            {
               "min_len" : 1,
               "min_len.foo" : 1
            }
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:clset"
         ],
         "input" : [
            1
         ],
         "name" : "clset (dies, unknown attr)",
         "dies" : 1
      },
      {
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "clset (empty = ok)",
         "schema" : [
            "array*",
            "clset",
            {}
         ],
         "tags" : [
            "type",
            "type:array"
         ]
      },
      {
         "name" : "clset (ignored clause/attr = ok)",
         "input" : [
            1
         ],
         "valid" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:clset"
         ],
         "schema" : [
            "array*",
            "clset",
            {
               "_foo" : 1,
               "foo._bar" : 2
            }
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:clset"
         ],
         "schema" : [
            "array*",
            "clset",
            {
               "max_len" : 1,
               "min_len" : 0
            }
         ],
         "name" : "clset (ok + ok = ok)",
         "input" : [
            1
         ],
         "valid" : 1
      },
      {
         "schema" : [
            "array*",
            "clset",
            {
               "min_len" : 0
            },
            "max_len",
            0
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:clset"
         ],
         "name" : "clset (ok) + clause nok = nok",
         "valid" : 0,
         "input" : [
            1
         ]
      },
      {
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "clset (ok + nok = nok)",
         "schema" : [
            "array*",
            "clset",
            {
               "min_len" : 0,
               "max_len" : 0
            }
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:clset"
         ]
      },
      {
         "schema" : [
            "array*",
            "clset",
            {
               "min_len" : 2,
               "max_len" : 1
            }
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:clset"
         ],
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "clset (nok + ok = nok)"
      },
      {
         "name" : "clset (nok + nok = nok)",
         "valid" : 0,
         "input" : [
            1
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:clset"
         ],
         "schema" : [
            "array*",
            "clset",
            {
               "min_len" : 2,
               "max_len" : 0
            }
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:ok"
         ],
         "schema" : [
            "array",
            {
               "ok" : 1
            }
         ],
         "name" : "ok",
         "input" : null,
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:ok",
            "op",
            "op:not"
         ],
         "schema" : [
            "array",
            {
               "!ok" : 1
            }
         ],
         "valid" : 0,
         "input" : null,
         "name" : "ok + op not (nok)"
      },
      {
         "name" : ".err_level=error (clause=is, ok)",
         "input" : [],
         "valid" : 1,
         "schema" : [
            "array",
            "is",
            []
         ],
         "tags" : [
            "type",
            "type:array",
            "attr",
            "attr:err_level"
         ]
      },
      {
         "schema" : [
            "array",
            "is",
            []
         ],
         "tags" : [
            "type",
            "type:array",
            "attr",
            "attr:err_level"
         ],
         "input" : [
            0
         ],
         "valid" : 0,
         "name" : ".err_level=error (clause=is, nok)"
      },
      {
         "name" : ".err_level=warn (clause=is, ok)",
         "valid" : 1,
         "input" : [],
         "tags" : [
            "type",
            "type:array",
            "attr",
            "attr:err_level"
         ],
         "schema" : [
            "array",
            "is",
            [],
            "is.err_level",
            "warn"
         ]
      },
      {
         "input" : [
            0
         ],
         "valid" : 1,
         "warnings" : 1,
         "name" : ".err_level=warn (clause=is, nok)",
         "schema" : [
            "array*",
            "is",
            [],
            "is.err_level",
            "warn"
         ],
         "tags" : [
            "type",
            "type:array",
            "attr",
            "attr:err_level"
         ]
      },
      {
         "name" : "is: must accept same value",
         "input" : [
            1
         ],
         "valid" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:is"
         ],
         "schema" : [
            "array",
            "is",
            [
               1
            ]
         ]
      },
      {
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "is: must reject different value",
         "tags" : [
            "type",
            "type:array",
            "clause:is"
         ],
         "schema" : [
            "array",
            "is",
            [
               2
            ]
         ]
      },
      {
         "name" : "!is (nok)",
         "valid" : 0,
         "input" : [
            1
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "!is",
            [
               1
            ]
         ]
      },
      {
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "!is (ok)",
         "schema" : [
            "array",
            "!is",
            [
               2
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ]
      },
      {
         "name" : "is.op=not (nok)",
         "input" : [
            1
         ],
         "valid" : 0,
         "schema" : [
            "array",
            "is",
            [
               1
            ],
            "is.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:not"
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:not"
         ],
         "schema" : [
            "array",
            "is",
            [
               2
            ],
            "is.op",
            "not"
         ],
         "valid" : 1,
         "input" : [
            1
         ],
         "name" : "is.op=not (ok)"
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "is&",
            []
         ],
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "is& (no items)"
      },
      {
         "name" : "is& (ok)",
         "input" : [
            1
         ],
         "valid" : 1,
         "schema" : [
            "array",
            "is&",
            [
               [
                  1
               ],
               [
                  1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "is& (nok + ok)",
         "schema" : [
            "array",
            "is&",
            [
               [
                  2
               ],
               [
                  1
               ]
            ]
         ],
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "schema" : [
            "array",
            "is&",
            [
               [
                  1
               ],
               [
                  2
               ]
            ]
         ],
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "name" : "is& (ok + nok)",
         "input" : [
            1
         ],
         "valid" : 0
      },
      {
         "name" : "is& (nok + nok)",
         "valid" : 0,
         "input" : [
            1
         ],
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "is&",
            [
               [
                  2
               ],
               [
                  2
               ]
            ]
         ]
      },
      {
         "tags" : [
            "type",
            "type:array"
         ],
         "schema" : [
            "array",
            "is",
            [],
            "is.op",
            "and"
         ],
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "is.op=and (no items)"
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:and"
         ],
         "schema" : [
            "array",
            "is",
            [
               [
                  1
               ],
               [
                  1
               ]
            ],
            "is.op",
            "and"
         ],
         "valid" : 1,
         "input" : [
            1
         ],
         "name" : "is.op=and (ok)"
      },
      {
         "name" : "is.op=and (nok + ok)",
         "input" : [
            1
         ],
         "valid" : 0,
         "schema" : [
            "array",
            "is",
            [
               [
                  2
               ],
               [
                  1
               ]
            ],
            "is.op",
            "and"
         ],
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:and"
         ]
      },
      {
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "is.op=and (ok + nok)",
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:and"
         ],
         "errors" : 1,
         "schema" : [
            "array",
            "is",
            [
               [
                  1
               ],
               [
                  2
               ]
            ],
            "is.op",
            "and"
         ]
      },
      {
         "schema" : [
            "array",
            "is",
            [
               [
                  2
               ],
               [
                  2
               ]
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:and"
         ],
         "errors" : 1,
         "input" : [
            1
         ],
         "valid" : 0,
         "name" : "is.op=and (nok + nok)"
      },
      {
         "schema" : [
            "array",
            "is|",
            []
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "name" : "is| (no items)",
         "valid" : 1,
         "input" : [
            1
         ]
      },
      {
         "schema" : [
            "array",
            "is|",
            [
               [
                  1
               ],
               [
                  1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "is| (ok)"
      },
      {
         "name" : "is| (nok + ok)",
         "valid" : 1,
         "input" : [
            1
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "is|",
            [
               [
                  2
               ],
               [
                  1
               ]
            ]
         ]
      },
      {
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "is| (ok + nok)",
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "is|",
            [
               [
                  1
               ],
               [
                  2
               ]
            ]
         ]
      },
      {
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "is| (nok + nok)",
         "schema" : [
            "array",
            "is|",
            [
               [
                  2
               ],
               [
                  2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "errors" : 1
      },
      {
         "name" : "is.op=or (no items)",
         "valid" : 1,
         "input" : [
            1
         ],
         "schema" : [
            "array",
            "is",
            [],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:or"
         ]
      },
      {
         "schema" : [
            "array",
            "is",
            [
               [
                  1
               ],
               [
                  1
               ]
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:or"
         ],
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "is.op=or (ok)"
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:or"
         ],
         "schema" : [
            "array",
            "is",
            [
               [
                  2
               ],
               [
                  1
               ]
            ],
            "is.op",
            "or"
         ],
         "name" : "is.op=or (nok + ok)",
         "valid" : 1,
         "input" : [
            1
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:or"
         ],
         "schema" : [
            "array",
            "is",
            [
               [
                  1
               ],
               [
                  2
               ]
            ],
            "is.op",
            "or"
         ],
         "name" : "is.op=or (ok + nok)",
         "valid" : 1,
         "input" : [
            1
         ]
      },
      {
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "is.op=or (nok + nok)",
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:or"
         ],
         "errors" : 1,
         "schema" : [
            "array",
            "is",
            [
               [
                  2
               ],
               [
                  2
               ]
            ],
            "is.op",
            "or"
         ]
      },
      {
         "name" : "is.op=none (empty items)",
         "input" : [
            1
         ],
         "valid" : 1,
         "schema" : [
            "array",
            "is",
            [],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:none"
         ]
      },
      {
         "schema" : [
            "array",
            "is",
            [
               [
                  2
               ],
               [
                  2
               ]
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:none"
         ],
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "is.op=none (nok + nok)"
      },
      {
         "name" : "is.op=none (nok + ok)",
         "input" : [
            1
         ],
         "valid" : 0,
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:none"
         ],
         "errors" : 1,
         "schema" : [
            "array",
            "is",
            [
               [
                  2
               ],
               [
                  1
               ]
            ],
            "is.op",
            "none"
         ]
      },
      {
         "name" : "is.op=none (ok + nok)",
         "input" : [
            1
         ],
         "valid" : 0,
         "schema" : [
            "array",
            "is",
            [
               [
                  1
               ],
               [
                  2
               ]
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:none"
         ],
         "errors" : 1
      },
      {
         "schema" : [
            "array",
            "is",
            [
               [
                  1
               ],
               [
                  1
               ]
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:is",
            "op",
            "op:none"
         ],
         "errors" : 1,
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "is.op=none (ok + ok)"
      },
      {
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "in: must accept valid choices",
         "tags" : [
            "type",
            "type:array",
            "clause:in"
         ],
         "schema" : [
            "array",
            "in",
            [
               [
                  1
               ],
               [
                  2
               ]
            ]
         ]
      },
      {
         "input" : [
            1
         ],
         "valid" : 0,
         "name" : "in: must reject empty choices",
         "tags" : [
            "type",
            "type:array",
            "clause:in"
         ],
         "schema" : [
            "array",
            "in",
            []
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "!in",
            [
               [
                  1
               ],
               [
                  2
               ]
            ]
         ],
         "name" : "!in (nok)",
         "valid" : 0,
         "input" : [
            1
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "!in",
            []
         ],
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "!in (ok)"
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:not"
         ],
         "schema" : [
            "array",
            "in",
            [
               [
                  1
               ],
               [
                  2
               ]
            ],
            "in.op",
            "not"
         ],
         "input" : [
            1
         ],
         "valid" : 0,
         "name" : "in.op=not (nok)"
      },
      {
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "in.op=not (ok)",
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:not"
         ],
         "schema" : [
            "array",
            "in",
            [],
            "in.op",
            "not"
         ]
      },
      {
         "name" : "in& (no items)",
         "input" : [
            1
         ],
         "valid" : 1,
         "schema" : [
            "array",
            "in&",
            []
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "valid" : 1,
         "input" : [
            1
         ],
         "name" : "in& (ok)",
         "schema" : [
            "array",
            "in&",
            [
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ],
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "name" : "in& (nok + ok)",
         "valid" : 0,
         "input" : [
            1
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "errors" : 1,
         "schema" : [
            "array",
            "in&",
            [
               [],
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ]
            ]
         ]
      },
      {
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "in&",
            [
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ],
               []
            ]
         ],
         "name" : "in& (ok + nok)",
         "valid" : 0,
         "input" : [
            1
         ]
      },
      {
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "in& (nok + nok)",
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "errors" : 1,
         "schema" : [
            "array",
            "in&",
            [
               [],
               []
            ]
         ]
      },
      {
         "tags" : [
            "type",
            "type:array"
         ],
         "schema" : [
            "array",
            "in",
            [],
            "in.op",
            "and"
         ],
         "name" : "in.op=and (no items)",
         "input" : [
            1
         ],
         "valid" : 1
      },
      {
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "in.op=and (ok)",
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:and"
         ],
         "schema" : [
            "array",
            "in",
            [
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ],
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ]
            ],
            "in.op",
            "and"
         ]
      },
      {
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "in.op=and (nok + ok)",
         "schema" : [
            "array",
            "in",
            [
               [],
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ]
            ],
            "in.op",
            "and"
         ],
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:and"
         ]
      },
      {
         "schema" : [
            "array",
            "in",
            [
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ],
               []
            ],
            "in.op",
            "and"
         ],
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "in.op=and (ok + nok)"
      },
      {
         "name" : "in.op=and (nok + nok)",
         "valid" : 0,
         "input" : [
            1
         ],
         "schema" : [
            "array",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "and"
         ],
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:and"
         ]
      },
      {
         "schema" : [
            "array",
            "in|",
            []
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1,
         "input" : [
            1
         ],
         "name" : "in| (no items)"
      },
      {
         "name" : "in| (ok)",
         "input" : [
            1
         ],
         "valid" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "in|",
            [
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ],
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ]
            ]
         ]
      },
      {
         "name" : "in| (nok + ok)",
         "input" : [
            1
         ],
         "valid" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "in|",
            [
               [],
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ]
            ]
         ]
      },
      {
         "schema" : [
            "array",
            "in|",
            [
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1,
         "input" : [
            1
         ],
         "name" : "in| (ok + nok)"
      },
      {
         "schema" : [
            "array",
            "in|",
            [
               [],
               []
            ]
         ],
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "input" : [
            1
         ],
         "valid" : 0,
         "name" : "in| (nok + nok)"
      },
      {
         "name" : "in.op=or (no items)",
         "valid" : 1,
         "input" : [
            1
         ],
         "schema" : [
            "array",
            "in",
            [],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:or"
         ]
      },
      {
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "in.op=or (ok)",
         "schema" : [
            "array",
            "in",
            [
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ],
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ]
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:or"
         ]
      },
      {
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "in.op=or (nok + ok)",
         "schema" : [
            "array",
            "in",
            [
               [],
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ]
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:or"
         ]
      },
      {
         "name" : "in.op=or (ok + nok)",
         "input" : [
            1
         ],
         "valid" : 1,
         "schema" : [
            "array",
            "in",
            [
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ],
               []
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:or"
         ]
      },
      {
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:or"
         ],
         "schema" : [
            "array",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "or"
         ],
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "in.op=or (nok + nok)"
      },
      {
         "name" : "in.op=none (empty items)",
         "input" : [
            1
         ],
         "valid" : 1,
         "schema" : [
            "array",
            "in",
            [],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:none"
         ]
      },
      {
         "valid" : 1,
         "input" : [
            1
         ],
         "name" : "in.op=none (nok + nok)",
         "schema" : [
            "array",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:none"
         ]
      },
      {
         "name" : "in.op=none (nok + ok)",
         "input" : [
            1
         ],
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:none"
         ],
         "schema" : [
            "array",
            "in",
            [
               [],
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ]
            ],
            "in.op",
            "none"
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:none"
         ],
         "errors" : 1,
         "schema" : [
            "array",
            "in",
            [
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ],
               []
            ],
            "in.op",
            "none"
         ],
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "in.op=none (ok + nok)"
      },
      {
         "name" : "in.op=none (ok + ok)",
         "input" : [
            1
         ],
         "valid" : 0,
         "tags" : [
            "type",
            "type:array",
            "clause:in",
            "op",
            "op:none"
         ],
         "errors" : 1,
         "schema" : [
            "array",
            "in",
            [
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ],
               [
                  [
                     1
                  ],
                  [
                     2
                  ]
               ]
            ],
            "in.op",
            "none"
         ]
      },
      {
         "schema" : [
            "array",
            "len",
            1
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:len"
         ],
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "len (ok)"
      },
      {
         "valid" : 0,
         "input" : [
            1
         ],
         "name" : "len (nok)",
         "schema" : [
            "array",
            "len",
            2
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:len"
         ]
      },
      {
         "input" : [
            1
         ],
         "valid" : 1,
         "name" : "min_len (ok)",
         "tags" : [
            "type",
            "type:array",
            "clause:min_len"
         ],
         "schema" : [
            "array",
            "min_len",
            1
         ]
      },
      {
         "name" : "min_len (nok)",
         "valid" : 0,
         "input" : [
            1
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:min_len"
         ],
         "schema" : [
            "array",
            "min_len",
            2
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:max_len"
         ],
         "schema" : [
            "array",
            "min_len",
            1
         ],
         "name" : "max_len (ok)",
         "valid" : 1,
         "input" : [
            1
         ]
      },
      {
         "name" : "max_len (nok)",
         "valid" : 0,
         "input" : [
            1,
            1.2
         ],
         "schema" : [
            "array",
            "max_len",
            1
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:max_len"
         ]
      },
      {
         "schema" : [
            "array",
            "len_between",
            [
               1,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:len_between"
         ],
         "name" : "len_between (ok)",
         "input" : [
            1
         ],
         "valid" : 1
      },
      {
         "input" : [
            1,
            1.2
         ],
         "valid" : 0,
         "name" : "len_between (nok)",
         "schema" : [
            "array",
            "len_between",
            [
               1,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:len_between"
         ]
      },
      {
         "schema" : [
            "array",
            "each_index",
            [
               "int",
               "max",
               1
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:each_index"
         ],
         "name" : "each_index (ok)",
         "valid" : 1,
         "input" : [
            1,
            1.2
         ]
      },
      {
         "input" : [
            1,
            1.2
         ],
         "valid" : 0,
         "name" : "each_index (nok)",
         "schema" : [
            "array",
            "each_index",
            [
               "int",
               "xmax",
               1
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:each_index"
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:each_elem"
         ],
         "schema" : [
            "array",
            "each_elem",
            "float"
         ],
         "name" : "each_elem (ok)",
         "input" : [
            1,
            1.2
         ],
         "valid" : 1
      },
      {
         "name" : "each_elem (nok)",
         "input" : [
            1,
            1.2
         ],
         "valid" : 0,
         "schema" : [
            "array",
            "each_elem",
            "int"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:each_elem"
         ]
      },
      {
         "valid_inputs" : [
            [],
            [
               1
            ],
            [
               1,
               1
            ],
            [
               1,
               1,
               1
            ]
         ],
         "name" : "check_each_index",
         "invalid_inputs" : [
            [
               1,
               1,
               1,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:check_each_index"
         ],
         "schema" : [
            "array",
            "check_each_index",
            "$_ <= 2"
         ]
      },
      {
         "name" : "check_each_elem",
         "valid_inputs" : [
            [],
            [
               3
            ],
            [
               3,
               2
            ]
         ],
         "invalid_inputs" : [
            [
               1
            ],
            [
               2,
               1
            ]
         ],
         "schema" : [
            "array",
            "check_each_elem",
            "$_ >= 2"
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:check_each_elem"
         ]
      },
      {
         "schema" : [
            "array",
            "uniq",
            1
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:uniq"
         ],
         "name" : "uniq=1",
         "valid_inputs" : [
            [],
            [
               1
            ],
            [
               1,
               2
            ]
         ],
         "invalid_inputs" : [
            [
               1,
               1
            ]
         ]
      },
      {
         "name" : "uniq=0",
         "valid_inputs" : [
            [
               1,
               1
            ]
         ],
         "invalid_inputs" : [
            [],
            [
               1
            ],
            [
               1,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:uniq"
         ],
         "schema" : [
            "array",
            "uniq",
            0
         ]
      },
      {
         "valid_inputs" : [
            [
               1,
               1
            ]
         ],
         "name" : "!uniq=1",
         "invalid_inputs" : [
            [],
            [
               1
            ],
            [
               1,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:uniq",
            "op",
            "op:not",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "!uniq",
            1
         ]
      },
      {
         "name" : "exists",
         "valid_inputs" : [
            [
               1
            ],
            [
               3,
               1
            ]
         ],
         "invalid_inputs" : [
            [],
            [
               3
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:exists"
         ],
         "schema" : [
            "int",
            "max",
            2
         ]
      },
      {
         "name" : "elems (ok)",
         "input" : [
            1,
            1.2
         ],
         "valid" : 1,
         "schema" : [
            "array",
            "elems",
            [
               "int",
               "float"
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:elems"
         ]
      },
      {
         "input" : [
            1,
            1.2
         ],
         "valid" : 0,
         "name" : "elems (nok)",
         "schema" : [
            "array",
            "elems",
            [
               "int",
               "int"
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:elems"
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:has"
         ],
         "schema" : [
            "array",
            "has",
            1
         ],
         "name" : "has",
         "valid_inputs" : [
            [
               1,
               2,
               3
            ],
            [
               1,
               3
            ]
         ],
         "invalid_inputs" : [
            [],
            [
               3
            ]
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:has",
            "op",
            "op:not",
            "opshortcut"
         ],
         "schema" : [
            "array",
            "!has",
            1
         ],
         "invalid_inputs" : [
            [
               1,
               2,
               3
            ],
            [
               1,
               3
            ]
         ],
         "name" : "has + op.not",
         "valid_inputs" : [
            [],
            [
               3
            ]
         ]
      },
      {
         "name" : "has + op.or",
         "valid_inputs" : [
            [
               1,
               2,
               3
            ],
            [
               1,
               3
            ]
         ],
         "invalid_inputs" : [
            [],
            [
               3
            ]
         ],
         "schema" : [
            "array",
            "has|",
            [
               1,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:has",
            "op",
            "op:or",
            "opshortcut"
         ]
      },
      {
         "schema" : [
            "array",
            "has&",
            [
               1,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:has",
            "op",
            "op:and",
            "opshortcut"
         ],
         "invalid_inputs" : [
            [
               1,
               3
            ],
            [],
            [
               3
            ]
         ],
         "name" : "has + op.and",
         "valid_inputs" : [
            [
               1,
               2,
               3
            ]
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "prop:len"
         ],
         "schema" : [
            "array",
            "prop",
            [
               "len",
               [
                  "int",
                  "is",
                  2
               ]
            ]
         ],
         "invalid_inputs" : [
            [],
            [
               1
            ]
         ],
         "name" : "prop:len",
         "valid_inputs" : [
            [
               1,
               1
            ],
            [
               1,
               2
            ]
         ]
      },
      {
         "schema" : [
            "array",
            "prop",
            [
               "indices",
               [
                  "array",
                  "has",
                  2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:array",
            "prop:indices"
         ],
         "valid_inputs" : [
            [
               1,
               1,
               1
            ]
         ],
         "name" : "prop:indices",
         "invalid_inputs" : [
            [],
            [
               1
            ],
            [
               1,
               1
            ]
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "prop:elems"
         ],
         "schema" : [
            "array",
            "prop",
            [
               "elems",
               [
                  "array",
                  "has",
                  "a"
               ]
            ]
         ],
         "invalid_inputs" : [
            [],
            [
               "b"
            ]
         ],
         "name" : "prop:elems",
         "valid_inputs" : [
            [
               "a",
               "b"
            ]
         ]
      },
      {
         "name" : "elems (nok, first elem required)",
         "input" : [
            null,
            1
         ],
         "valid" : 0,
         "tags" : [
            "type",
            "type:array",
            "clause:elems"
         ],
         "schema" : [
            "array",
            {
               "elems" : [
                  "int*",
                  [
                     "float",
                     "default",
                     2
                  ]
               ]
            }
         ]
      },
      {
         "tags" : [
            "type",
            "type:array",
            "clause:elems"
         ],
         "schema" : [
            "array",
            {
               "elems" : [
                  "int*",
                  [
                     "float",
                     "default",
                     2
                  ]
               ]
            }
         ],
         "valid" : 1,
         "input" : [
            1
         ],
         "name" : "elems (ok, missing elem set to undef)"
      },
      {
         "name" : "elems (ok, second elem optional)",
         "input" : [
            1,
            null
         ],
         "valid" : 1,
         "schema" : [
            "array",
            {
               "elems" : [
                  "int*",
                  [
                     "float",
                     "default",
                     2
                  ]
               ]
            }
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:elems"
         ]
      },
      {
         "input" : [
            1,
            1.1
         ],
         "valid" : 1,
         "name" : "elems (ok 2)",
         "tags" : [
            "type",
            "type:array",
            "clause:elems"
         ],
         "schema" : [
            "array",
            {
               "elems" : [
                  "int*",
                  [
                     "float",
                     "default",
                     2
                  ]
               ]
            }
         ]
      },
      {
         "schema" : [
            "array",
            {
               "elems" : [
                  "int*",
                  [
                     "float",
                     "default",
                     2
                  ]
               ]
            }
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:elems"
         ],
         "valid" : 1,
         "input" : [
            1,
            1.1,
            null
         ],
         "name" : "elems (ok, extra elems ignored)"
      },
      {
         "name" : "elems (ok, extra elems ignored 2)",
         "input" : [
            1,
            1.1,
            "foo"
         ],
         "valid" : 1,
         "tags" : [
            "type",
            "type:array",
            "clause:elems"
         ],
         "schema" : [
            "array",
            {
               "elems" : [
                  "int*",
                  [
                     "float",
                     "default",
                     2
                  ]
               ]
            }
         ]
      },
      {
         "schema" : [
            "array",
            {
               "elems" : [
                  "int",
                  [
                     "int",
                     "default",
                     2
                  ]
               ],
               "elems.create_default" : 0
            }
         ],
         "output" : [
            1
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:elems"
         ],
         "name" : "elems (ok, create_default=0)",
         "valid" : 1,
         "input" : [
            1
         ]
      },
      {
         "name" : "elems (ok 2, create_default=0)",
         "valid" : 1,
         "input" : [
            1,
            null
         ],
         "output" : [
            1,
            2
         ],
         "tags" : [
            "type",
            "type:array",
            "clause:elems"
         ],
         "schema" : [
            "array",
            {
               "elems" : [
                  "int",
                  [
                     "int",
                     "default",
                     2
                  ]
               ],
               "elems.create_default" : 0
            }
         ]
      }
   ],
   "version" : "v0.9.35 (generated by devscripts/gen-type-spectest on Tue May  5 12:31:19 2015)"
}
