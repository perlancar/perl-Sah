{
   "tests" : [
      {
         "input" : -1,
         "name" : "int0001: type check: must accept -1",
         "schema" : "int",
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "int0002: type check: must accept 0",
         "schema" : "int",
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0003: type check: must accept 1",
         "schema" : "int",
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "int0004: type check: must reject 1.1",
         "schema" : "int",
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "int0005: type check: must reject a",
         "schema" : "int",
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 0
      },
      {
         "input" : [],
         "name" : "int0006: type check: must reject []",
         "schema" : "int",
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 0
      },
      {
         "input" : {},
         "name" : "int0007: type check: must reject {}",
         "schema" : "int",
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "int0008: must accept undefined value",
         "schema" : "int",
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0009: defhash_v",
         "schema" : [
            "int",
            "defhash_v",
            1
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:defhash_v"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0010: v",
         "schema" : [
            "int",
            "v",
            1
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:v"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0011: c",
         "schema" : [
            "int",
            "c.foo.bar",
            1
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:c"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0012: default_lang",
         "schema" : [
            "int",
            "default_lang",
            "id_ID"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:default_lang"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0013: name",
         "schema" : [
            "int",
            "name",
            "some name"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:name"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0014: summary",
         "schema" : [
            "int",
            "summary",
            "some summary"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:summary"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0015: description",
         "schema" : [
            "int",
            "description",
            "some description and `markdown`"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:description"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0016: tags",
         "schema" : [
            "int",
            "tags",
            [
               "some",
               "tags"
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:tags"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0017: req=0 must accept undefined value",
         "schema" : [
            "int",
            "req",
            0
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:req"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0018: req=1 must reject undefined value",
         "schema" : [
            "int",
            "req",
            1
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:req"
         ],
         "valid" : 0
      },
      {
         "input" : 2,
         "name" : "int0019: forbidden=0 must accept defined value",
         "schema" : [
            "int",
            "forbidden",
            0
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:forbidden"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0020: forbidden=1 must reject defined value",
         "schema" : [
            "int",
            "forbidden",
            1
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:forbidden"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "int0021: default: must accept valid default 1",
         "schema" : [
            "int*",
            "default",
            1
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:default"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0022: default: must reject invalid default []",
         "schema" : [
            "int*",
            "default",
            []
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:default"
         ],
         "valid" : 0
      },
      {
         "dies" : 1,
         "input" : 2,
         "name" : "int0023: clause (dies, unknown clause)",
         "schema" : [
            "int*",
            "clause",
            [
               "foo",
               1
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clause"
         ]
      },
      {
         "input" : 2,
         "name" : "int0024: clause (ok)",
         "schema" : [
            "int*",
            "clause",
            [
               "min",
               1
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clause"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0025: clause (ok) + clause nok = nok",
         "schema" : [
            "int*",
            "clause",
            [
               "min",
               1
            ],
            "xmax",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clause"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 2,
         "name" : "int0026: clause (nok)",
         "schema" : [
            "int*",
            "clause",
            [
               "min",
               3
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clause"
         ],
         "valid" : 0
      },
      {
         "dies" : 1,
         "input" : 2,
         "name" : "int0027: clset (dies, unknown clause)",
         "schema" : [
            "int*",
            "clset",
            {
               "foo" : 1
            }
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clset"
         ]
      },
      {
         "dies" : 1,
         "input" : 2,
         "name" : "int0028: clset (dies, unknown attr)",
         "schema" : [
            "int*",
            "clset",
            {
               "min_len" : 1,
               "min_len.foo" : 1
            }
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clset"
         ]
      },
      {
         "input" : 2,
         "name" : "int0029: clset (empty = ok)",
         "schema" : [
            "int*",
            "clset",
            {}
         ],
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0030: clset (ignored clause/attr = ok)",
         "schema" : [
            "int*",
            "clset",
            {
               "_foo" : 1,
               "foo._bar" : 2
            }
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clset"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0031: clset (ok + ok = ok)",
         "schema" : [
            "int*",
            "clset",
            {
               "max" : 2,
               "min" : 1
            }
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clset"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0032: clset (ok) + clause nok = nok",
         "schema" : [
            "int*",
            "clset",
            {
               "min" : 1
            },
            "xmax",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : 2,
         "name" : "int0033: clset (ok + nok = nok)",
         "schema" : [
            "int*",
            "clset",
            {
               "min" : 1,
               "xmax" : 2
            }
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : 2,
         "name" : "int0034: clset (nok + ok = nok)",
         "schema" : [
            "int*",
            "clset",
            {
               "max" : 2,
               "min" : 3
            }
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : 2,
         "name" : "int0035: clset (nok + nok = nok)",
         "schema" : [
            "int*",
            "clset",
            {
               "min" : 3,
               "xmax" : 2
            }
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "int0036: ok",
         "schema" : [
            "int",
            {
               "ok" : 1
            }
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:ok"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "int0037: ok + op not (nok)",
         "schema" : [
            "int",
            {
               "!ok" : 1
            }
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:ok",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 9,
         "name" : "int0038: .err_level=error (clause=div_by, ok)",
         "schema" : [
            "int",
            "div_by",
            3
         ],
         "tags" : [
            "type",
            "type:int",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1
      },
      {
         "input" : 8,
         "name" : "int0039: .err_level=error (clause=div_by, nok)",
         "schema" : [
            "int",
            "div_by",
            3
         ],
         "tags" : [
            "type",
            "type:int",
            "attr",
            "attr:err_level"
         ],
         "valid" : 0
      },
      {
         "input" : 9,
         "name" : "int0040: .err_level=warn (clause=div_by, ok)",
         "schema" : [
            "int",
            "div_by",
            3,
            "div_by.err_level",
            "warn"
         ],
         "tags" : [
            "type",
            "type:int",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1
      },
      {
         "input" : 8,
         "name" : "int0041: .err_level=warn (clause=div_by, nok)",
         "schema" : [
            "int*",
            "div_by",
            3,
            "div_by.err_level",
            "warn"
         ],
         "tags" : [
            "type",
            "type:int",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1,
         "warnings" : 1
      },
      {
         "input" : 1,
         "name" : "int0042: is: must accept same value",
         "schema" : [
            "int",
            "is",
            1
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0043: is: must reject different value",
         "schema" : [
            "int",
            "is",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0044: !is (nok)",
         "schema" : [
            "int",
            "!is",
            1
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0045: !is (ok)",
         "schema" : [
            "int",
            "!is",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0046: is.op=not (nok)",
         "schema" : [
            "int",
            "is",
            1,
            "is.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0047: is.op=not (ok)",
         "schema" : [
            "int",
            "is",
            2,
            "is.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0048: is& (no items)",
         "schema" : [
            "int",
            "is&",
            []
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0049: is& (ok)",
         "schema" : [
            "int",
            "is&",
            [
               1,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0050: is& (nok + ok)",
         "schema" : [
            "int",
            "is&",
            [
               2,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0051: is& (ok + nok)",
         "schema" : [
            "int",
            "is&",
            [
               1,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0052: is& (nok + nok)",
         "schema" : [
            "int",
            "is&",
            [
               2,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0053: is.op=and (no items)",
         "schema" : [
            "int",
            "is",
            [],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0054: is.op=and (ok)",
         "schema" : [
            "int",
            "is",
            [
               1,
               1
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0055: is.op=and (nok + ok)",
         "schema" : [
            "int",
            "is",
            [
               2,
               1
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0056: is.op=and (ok + nok)",
         "schema" : [
            "int",
            "is",
            [
               1,
               2
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0057: is.op=and (nok + nok)",
         "schema" : [
            "int",
            "is",
            [
               2,
               2
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0058: is| (no items)",
         "schema" : [
            "int",
            "is|",
            []
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0059: is| (ok)",
         "schema" : [
            "int",
            "is|",
            [
               1,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0060: is| (nok + ok)",
         "schema" : [
            "int",
            "is|",
            [
               2,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0061: is| (ok + nok)",
         "schema" : [
            "int",
            "is|",
            [
               1,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0062: is| (nok + nok)",
         "schema" : [
            "int",
            "is|",
            [
               2,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0063: is.op=or (no items)",
         "schema" : [
            "int",
            "is",
            [],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0064: is.op=or (ok)",
         "schema" : [
            "int",
            "is",
            [
               1,
               1
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0065: is.op=or (nok + ok)",
         "schema" : [
            "int",
            "is",
            [
               2,
               1
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0066: is.op=or (ok + nok)",
         "schema" : [
            "int",
            "is",
            [
               1,
               2
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0067: is.op=or (nok + nok)",
         "schema" : [
            "int",
            "is",
            [
               2,
               2
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0068: is.op=none (empty items)",
         "schema" : [
            "int",
            "is",
            [],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0069: is.op=none (nok + nok)",
         "schema" : [
            "int",
            "is",
            [
               2,
               2
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0070: is.op=none (nok + ok)",
         "schema" : [
            "int",
            "is",
            [
               2,
               1
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0071: is.op=none (ok + nok)",
         "schema" : [
            "int",
            "is",
            [
               1,
               2
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0072: is.op=none (ok + ok)",
         "schema" : [
            "int",
            "is",
            [
               1,
               1
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0073: in: must accept valid choices",
         "schema" : [
            "int",
            "in",
            [
               1,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0074: in: must reject empty choices",
         "schema" : [
            "int",
            "in",
            []
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0075: !in (nok)",
         "schema" : [
            "int",
            "!in",
            [
               1,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0076: !in (ok)",
         "schema" : [
            "int",
            "!in",
            []
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0077: in.op=not (nok)",
         "schema" : [
            "int",
            "in",
            [
               1,
               2
            ],
            "in.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0078: in.op=not (ok)",
         "schema" : [
            "int",
            "in",
            [],
            "in.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0079: in& (no items)",
         "schema" : [
            "int",
            "in&",
            []
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0080: in& (ok)",
         "schema" : [
            "int",
            "in&",
            [
               [
                  1,
                  2
               ],
               [
                  1,
                  2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0081: in& (nok + ok)",
         "schema" : [
            "int",
            "in&",
            [
               [],
               [
                  1,
                  2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0082: in& (ok + nok)",
         "schema" : [
            "int",
            "in&",
            [
               [
                  1,
                  2
               ],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0083: in& (nok + nok)",
         "schema" : [
            "int",
            "in&",
            [
               [],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0084: in.op=and (no items)",
         "schema" : [
            "int",
            "in",
            [],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0085: in.op=and (ok)",
         "schema" : [
            "int",
            "in",
            [
               [
                  1,
                  2
               ],
               [
                  1,
                  2
               ]
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0086: in.op=and (nok + ok)",
         "schema" : [
            "int",
            "in",
            [
               [],
               [
                  1,
                  2
               ]
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0087: in.op=and (ok + nok)",
         "schema" : [
            "int",
            "in",
            [
               [
                  1,
                  2
               ],
               []
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0088: in.op=and (nok + nok)",
         "schema" : [
            "int",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0089: in| (no items)",
         "schema" : [
            "int",
            "in|",
            []
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0090: in| (ok)",
         "schema" : [
            "int",
            "in|",
            [
               [
                  1,
                  2
               ],
               [
                  1,
                  2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0091: in| (nok + ok)",
         "schema" : [
            "int",
            "in|",
            [
               [],
               [
                  1,
                  2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0092: in| (ok + nok)",
         "schema" : [
            "int",
            "in|",
            [
               [
                  1,
                  2
               ],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0093: in| (nok + nok)",
         "schema" : [
            "int",
            "in|",
            [
               [],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0094: in.op=or (no items)",
         "schema" : [
            "int",
            "in",
            [],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0095: in.op=or (ok)",
         "schema" : [
            "int",
            "in",
            [
               [
                  1,
                  2
               ],
               [
                  1,
                  2
               ]
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0096: in.op=or (nok + ok)",
         "schema" : [
            "int",
            "in",
            [
               [],
               [
                  1,
                  2
               ]
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0097: in.op=or (ok + nok)",
         "schema" : [
            "int",
            "in",
            [
               [
                  1,
                  2
               ],
               []
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0098: in.op=or (nok + nok)",
         "schema" : [
            "int",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "int0099: in.op=none (empty items)",
         "schema" : [
            "int",
            "in",
            [],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "int0100: in.op=none (nok + nok)",
         "schema" : [
            "int",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0101: in.op=none (nok + ok)",
         "schema" : [
            "int",
            "in",
            [
               [],
               [
                  1,
                  2
               ]
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0102: in.op=none (ok + nok)",
         "schema" : [
            "int",
            "in",
            [
               [
                  1,
                  2
               ],
               []
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1,
         "name" : "int0103: in.op=none (ok + ok)",
         "schema" : [
            "int",
            "in",
            [
               [
                  1,
                  2
               ],
               [
                  1,
                  2
               ]
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : 2,
         "name" : "int0104: min: 2 -3",
         "schema" : [
            "int",
            "min",
            -3
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:min"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0105: min: 2 2",
         "schema" : [
            "int",
            "min",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:min"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0106: min: -3 2 -> fail",
         "schema" : [
            "int",
            "min",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:min"
         ],
         "valid" : 0
      },
      {
         "input" : 2,
         "name" : "int0107: xmin: 2 -3",
         "schema" : [
            "int",
            "xmin",
            -3
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:xmin"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0108: xmin: 2 2 -> fail",
         "schema" : [
            "int",
            "xmin",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:xmin"
         ],
         "valid" : 0
      },
      {
         "input" : -3,
         "name" : "int0109: xmin: -3 2 -> fail",
         "schema" : [
            "int",
            "xmin",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:xmin"
         ],
         "valid" : 0
      },
      {
         "input" : 2,
         "name" : "int0110: max: 2 -3 -> fail",
         "schema" : [
            "int",
            "max",
            -3
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:max"
         ],
         "valid" : 0
      },
      {
         "input" : 2,
         "name" : "int0111: max: 2 2",
         "schema" : [
            "int",
            "max",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:max"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0112: max: -3 2",
         "schema" : [
            "int",
            "max",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:max"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0113: xmax: 2 -3 -> fail",
         "schema" : [
            "int",
            "xmax",
            -3
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:xmax"
         ],
         "valid" : 0
      },
      {
         "input" : 2,
         "name" : "int0114: xmax: 2 2 -> fail",
         "schema" : [
            "int",
            "xmax",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:xmax"
         ],
         "valid" : 0
      },
      {
         "input" : -3,
         "name" : "int0115: xmax: -3 2",
         "schema" : [
            "int",
            "xmax",
            2
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:xmax"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0116: between: 2 -3 & 4",
         "schema" : [
            "int",
            "between",
            [
               -3,
               4
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0117: between: 2 -3 & 2",
         "schema" : [
            "int",
            "between",
            [
               -3,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : 2,
         "name" : "int0118: between: 2 2 & 2",
         "schema" : [
            "int",
            "between",
            [
               2,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0119: between: -3 2 & 4 -> fail",
         "schema" : [
            "int",
            "between",
            [
               2,
               4
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between"
         ],
         "valid" : 0
      },
      {
         "input" : "2",
         "name" : "int0120: xbetween: 2 -3 & 4",
         "schema" : [
            "int",
            "xbetween",
            [
               -3,
               4
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:xbetween"
         ],
         "valid" : 1
      },
      {
         "input" : "2",
         "name" : "int0121: xbetween: 2 -3 & 2 -> fail",
         "schema" : [
            "int",
            "xbetween",
            [
               -3,
               "2"
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : "2",
         "name" : "int0122: xbetween: 2 2 & 2 -> fail",
         "schema" : [
            "int",
            "xbetween",
            [
               "2",
               "2"
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : -3,
         "name" : "int0123: xbetween: -3 2 & 4 -> fail",
         "schema" : [
            "int",
            "xbetween",
            [
               "2",
               "4"
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : -3,
         "name" : "int0124: !between (nok)",
         "schema" : [
            "int",
            "!between",
            [
               -3,
               -3
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : -3,
         "name" : "int0125: !between (ok)",
         "schema" : [
            "int",
            "!between",
            [
               "2",
               "2"
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0126: between.op=not (nok)",
         "schema" : [
            "int",
            "between",
            [
               -3,
               -3
            ],
            "between.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : -3,
         "name" : "int0127: between.op=not (ok)",
         "schema" : [
            "int",
            "between",
            [
               "2",
               "2"
            ],
            "between.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0128: between& (no items)",
         "schema" : [
            "int",
            "between&",
            []
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0129: between& (ok)",
         "schema" : [
            "int",
            "between&",
            [
               [
                  -3,
                  -3
               ],
               [
                  -3,
                  -3
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0130: between& (nok + ok)",
         "schema" : [
            "int",
            "between&",
            [
               [
                  "2",
                  "2"
               ],
               [
                  -3,
                  -3
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0131: between& (ok + nok)",
         "schema" : [
            "int",
            "between&",
            [
               [
                  -3,
                  -3
               ],
               [
                  "2",
                  "2"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0132: between& (nok + nok)",
         "schema" : [
            "int",
            "between&",
            [
               [
                  "2",
                  "2"
               ],
               [
                  "2",
                  "2"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : -3,
         "name" : "int0133: between.op=and (no items)",
         "schema" : [
            "int",
            "between",
            [],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0134: between.op=and (ok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  -3,
                  -3
               ],
               [
                  -3,
                  -3
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0135: between.op=and (nok + ok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  "2",
                  "2"
               ],
               [
                  -3,
                  -3
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0136: between.op=and (ok + nok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  -3,
                  -3
               ],
               [
                  "2",
                  "2"
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0137: between.op=and (nok + nok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  "2",
                  "2"
               ],
               [
                  "2",
                  "2"
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : -3,
         "name" : "int0138: between| (no items)",
         "schema" : [
            "int",
            "between|",
            []
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0139: between| (ok)",
         "schema" : [
            "int",
            "between|",
            [
               [
                  -3,
                  -3
               ],
               [
                  -3,
                  -3
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0140: between| (nok + ok)",
         "schema" : [
            "int",
            "between|",
            [
               [
                  "2",
                  "2"
               ],
               [
                  -3,
                  -3
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0141: between| (ok + nok)",
         "schema" : [
            "int",
            "between|",
            [
               [
                  -3,
                  -3
               ],
               [
                  "2",
                  "2"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0142: between| (nok + nok)",
         "schema" : [
            "int",
            "between|",
            [
               [
                  "2",
                  "2"
               ],
               [
                  "2",
                  "2"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : -3,
         "name" : "int0143: between.op=or (no items)",
         "schema" : [
            "int",
            "between",
            [],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0144: between.op=or (ok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  -3,
                  -3
               ],
               [
                  -3,
                  -3
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0145: between.op=or (nok + ok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  "2",
                  "2"
               ],
               [
                  -3,
                  -3
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0146: between.op=or (ok + nok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  -3,
                  -3
               ],
               [
                  "2",
                  "2"
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0147: between.op=or (nok + nok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  "2",
                  "2"
               ],
               [
                  "2",
                  "2"
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : -3,
         "name" : "int0148: between.op=none (empty items)",
         "schema" : [
            "int",
            "between",
            [],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : -3,
         "name" : "int0149: between.op=none (nok + nok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  "2",
                  "2"
               ],
               [
                  "2",
                  "2"
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0150: between.op=none (nok + ok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  "2",
                  "2"
               ],
               [
                  -3,
                  -3
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0151: between.op=none (ok + nok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  -3,
                  -3
               ],
               [
                  "2",
                  "2"
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3,
         "name" : "int0152: between.op=none (ok + ok)",
         "schema" : [
            "int",
            "between",
            [
               [
                  -3,
                  -3
               ],
               [
                  -3,
                  -3
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : 10,
         "name" : "int0153: mod: (nok)",
         "schema" : [
            "int",
            "mod",
            [
               3,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:mod"
         ],
         "valid" : 0
      },
      {
         "input" : 11,
         "name" : "int0154: mod: (ok)",
         "schema" : [
            "int",
            "mod",
            [
               3,
               2
            ]
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:mod"
         ],
         "valid" : 1
      },
      {
         "input" : 7,
         "name" : "int0155: div_by: (nok)",
         "schema" : [
            "int",
            "div_by",
            3
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:div_by"
         ],
         "valid" : 0
      },
      {
         "input" : 6,
         "name" : "int0156: div_by: (ok)",
         "schema" : [
            "int",
            "div_by",
            3
         ],
         "tags" : [
            "type",
            "type:int",
            "clause:div_by"
         ],
         "valid" : 1
      }
   ],
   "version" : "v0.9.41 (generated by devscripts/gen-type-spectest on Sat Jun 11 09:13:46 2016)"
}
