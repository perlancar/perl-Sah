{
   "tests" : [
      {
         "input" : 0,
         "name" : "bool0001: type check: must accept 0",
         "schema" : "bool",
         "tags" : [
            "type",
            "type:bool"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0002: type check: must accept 1",
         "schema" : "bool",
         "tags" : [
            "type",
            "type:bool"
         ],
         "valid" : 1
      },
      {
         "input" : [],
         "name" : "bool0003: type check: must reject []",
         "schema" : "bool",
         "tags" : [
            "type",
            "type:bool"
         ],
         "valid" : 0
      },
      {
         "input" : {},
         "name" : "bool0004: type check: must reject {}",
         "schema" : "bool",
         "tags" : [
            "type",
            "type:bool"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "bool0005: must accept undefined value",
         "schema" : "bool",
         "tags" : [
            "type",
            "type:bool"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0006: defhash_v",
         "schema" : [
            "bool",
            "defhash_v",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:defhash_v"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0007: v",
         "schema" : [
            "bool",
            "v",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:v"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0008: c",
         "schema" : [
            "bool",
            "c.foo.bar",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:c"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0009: default_lang",
         "schema" : [
            "bool",
            "default_lang",
            "id_ID"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:default_lang"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0010: name",
         "schema" : [
            "bool",
            "name",
            "some name"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:name"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0011: summary",
         "schema" : [
            "bool",
            "summary",
            "some summary"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:summary"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0012: description",
         "schema" : [
            "bool",
            "description",
            "some description and `markdown`"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:description"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0013: tags",
         "schema" : [
            "bool",
            "tags",
            [
               "some",
               "tags"
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:tags"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0014: req=0 must accept undefined value",
         "schema" : [
            "bool",
            "req",
            0
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:req"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0015: req=1 must reject undefined value",
         "schema" : [
            "bool",
            "req",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:req"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "bool0016: forbidden=0 must accept defined value",
         "schema" : [
            "bool",
            "forbidden",
            0
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:forbidden"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0017: forbidden=1 must reject defined value",
         "schema" : [
            "bool",
            "forbidden",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:forbidden"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "bool0018: default: must accept valid default 1",
         "schema" : [
            "bool*",
            "default",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:default"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0019: default: must reject invalid default []",
         "schema" : [
            "bool*",
            "default",
            []
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:default"
         ],
         "valid" : 0
      },
      {
         "dies" : 1,
         "input" : 1,
         "name" : "bool0020: clause (dies, unknown clause)",
         "schema" : [
            "bool*",
            "clause",
            [
               "foo",
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:clause"
         ]
      },
      {
         "dies" : 1,
         "input" : 1,
         "name" : "bool0021: clset (dies, unknown clause)",
         "schema" : [
            "bool*",
            "clset",
            {
               "foo" : 1
            }
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:clset"
         ]
      },
      {
         "dies" : 1,
         "input" : 1,
         "name" : "bool0022: clset (dies, unknown attr)",
         "schema" : [
            "bool*",
            "clset",
            {
               "min_len" : 1,
               "min_len.foo" : 1
            }
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:clset"
         ]
      },
      {
         "input" : 1,
         "name" : "bool0023: clset (empty = ok)",
         "schema" : [
            "bool*",
            "clset",
            {}
         ],
         "tags" : [
            "type",
            "type:bool"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0024: clset (ignored clause/attr = ok)",
         "schema" : [
            "bool*",
            "clset",
            {
               "_foo" : 1,
               "foo._bar" : 2
            }
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:clset"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0025: ok",
         "schema" : [
            "bool",
            {
               "ok" : 1
            }
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:ok"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "bool0026: ok + op not (nok)",
         "schema" : [
            "bool",
            {
               "!ok" : 1
            }
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:ok",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "bool0027: .err_level=error (clause=is, ok)",
         "schema" : [
            "bool",
            "is",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0028: .err_level=error (clause=is, nok)",
         "schema" : [
            "bool",
            "is",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "attr",
            "attr:err_level"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "bool0029: .err_level=warn (clause=is, ok)",
         "schema" : [
            "bool",
            "is",
            1,
            "is.err_level",
            "warn"
         ],
         "tags" : [
            "type",
            "type:bool",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0030: .err_level=warn (clause=is, nok)",
         "schema" : [
            "bool*",
            "is",
            1,
            "is.err_level",
            "warn"
         ],
         "tags" : [
            "type",
            "type:bool",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1,
         "warnings" : 1
      },
      {
         "input" : 0,
         "name" : "bool0031: is: must accept same value",
         "schema" : [
            "bool",
            "is",
            0
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0032: is: must reject different value",
         "schema" : [
            "bool",
            "is",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0033: !is (nok)",
         "schema" : [
            "bool",
            "!is",
            0
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0034: !is (ok)",
         "schema" : [
            "bool",
            "!is",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0035: is.op=not (nok)",
         "schema" : [
            "bool",
            "is",
            0,
            "is.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0036: is.op=not (ok)",
         "schema" : [
            "bool",
            "is",
            1,
            "is.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0037: is& (no items)",
         "schema" : [
            "bool",
            "is&",
            []
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0038: is& (ok)",
         "schema" : [
            "bool",
            "is&",
            [
               0,
               0
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0039: is& (nok + ok)",
         "schema" : [
            "bool",
            "is&",
            [
               1,
               0
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0040: is& (ok + nok)",
         "schema" : [
            "bool",
            "is&",
            [
               0,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0041: is& (nok + nok)",
         "schema" : [
            "bool",
            "is&",
            [
               1,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0042: is.op=and (no items)",
         "schema" : [
            "bool",
            "is",
            [],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0043: is.op=and (ok)",
         "schema" : [
            "bool",
            "is",
            [
               0,
               0
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0044: is.op=and (nok + ok)",
         "schema" : [
            "bool",
            "is",
            [
               1,
               0
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0045: is.op=and (ok + nok)",
         "schema" : [
            "bool",
            "is",
            [
               0,
               1
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0046: is.op=and (nok + nok)",
         "schema" : [
            "bool",
            "is",
            [
               1,
               1
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0047: is| (no items)",
         "schema" : [
            "bool",
            "is|",
            []
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0048: is| (ok)",
         "schema" : [
            "bool",
            "is|",
            [
               0,
               0
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0049: is| (nok + ok)",
         "schema" : [
            "bool",
            "is|",
            [
               1,
               0
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0050: is| (ok + nok)",
         "schema" : [
            "bool",
            "is|",
            [
               0,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0051: is| (nok + nok)",
         "schema" : [
            "bool",
            "is|",
            [
               1,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0052: is.op=or (no items)",
         "schema" : [
            "bool",
            "is",
            [],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0053: is.op=or (ok)",
         "schema" : [
            "bool",
            "is",
            [
               0,
               0
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0054: is.op=or (nok + ok)",
         "schema" : [
            "bool",
            "is",
            [
               1,
               0
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0055: is.op=or (ok + nok)",
         "schema" : [
            "bool",
            "is",
            [
               0,
               1
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0056: is.op=or (nok + nok)",
         "schema" : [
            "bool",
            "is",
            [
               1,
               1
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0057: is.op=none (empty items)",
         "schema" : [
            "bool",
            "is",
            [],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0058: is.op=none (nok + nok)",
         "schema" : [
            "bool",
            "is",
            [
               1,
               1
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0059: is.op=none (nok + ok)",
         "schema" : [
            "bool",
            "is",
            [
               1,
               0
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0060: is.op=none (ok + nok)",
         "schema" : [
            "bool",
            "is",
            [
               0,
               1
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0061: is.op=none (ok + ok)",
         "schema" : [
            "bool",
            "is",
            [
               0,
               0
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0062: in: must accept valid choices",
         "schema" : [
            "bool",
            "in",
            [
               0,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0063: in: must reject empty choices",
         "schema" : [
            "bool",
            "in",
            []
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0064: !in (nok)",
         "schema" : [
            "bool",
            "!in",
            [
               0,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0065: !in (ok)",
         "schema" : [
            "bool",
            "!in",
            []
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0066: in.op=not (nok)",
         "schema" : [
            "bool",
            "in",
            [
               0,
               1
            ],
            "in.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0067: in.op=not (ok)",
         "schema" : [
            "bool",
            "in",
            [],
            "in.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0068: in& (no items)",
         "schema" : [
            "bool",
            "in&",
            []
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0069: in& (ok)",
         "schema" : [
            "bool",
            "in&",
            [
               [
                  0,
                  1
               ],
               [
                  0,
                  1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0070: in& (nok + ok)",
         "schema" : [
            "bool",
            "in&",
            [
               [],
               [
                  0,
                  1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0071: in& (ok + nok)",
         "schema" : [
            "bool",
            "in&",
            [
               [
                  0,
                  1
               ],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0072: in& (nok + nok)",
         "schema" : [
            "bool",
            "in&",
            [
               [],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0073: in.op=and (no items)",
         "schema" : [
            "bool",
            "in",
            [],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0074: in.op=and (ok)",
         "schema" : [
            "bool",
            "in",
            [
               [
                  0,
                  1
               ],
               [
                  0,
                  1
               ]
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0075: in.op=and (nok + ok)",
         "schema" : [
            "bool",
            "in",
            [
               [],
               [
                  0,
                  1
               ]
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0076: in.op=and (ok + nok)",
         "schema" : [
            "bool",
            "in",
            [
               [
                  0,
                  1
               ],
               []
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0077: in.op=and (nok + nok)",
         "schema" : [
            "bool",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0078: in| (no items)",
         "schema" : [
            "bool",
            "in|",
            []
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0079: in| (ok)",
         "schema" : [
            "bool",
            "in|",
            [
               [
                  0,
                  1
               ],
               [
                  0,
                  1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0080: in| (nok + ok)",
         "schema" : [
            "bool",
            "in|",
            [
               [],
               [
                  0,
                  1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0081: in| (ok + nok)",
         "schema" : [
            "bool",
            "in|",
            [
               [
                  0,
                  1
               ],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0082: in| (nok + nok)",
         "schema" : [
            "bool",
            "in|",
            [
               [],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0083: in.op=or (no items)",
         "schema" : [
            "bool",
            "in",
            [],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0084: in.op=or (ok)",
         "schema" : [
            "bool",
            "in",
            [
               [
                  0,
                  1
               ],
               [
                  0,
                  1
               ]
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0085: in.op=or (nok + ok)",
         "schema" : [
            "bool",
            "in",
            [
               [],
               [
                  0,
                  1
               ]
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0086: in.op=or (ok + nok)",
         "schema" : [
            "bool",
            "in",
            [
               [
                  0,
                  1
               ],
               []
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0087: in.op=or (nok + nok)",
         "schema" : [
            "bool",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0088: in.op=none (empty items)",
         "schema" : [
            "bool",
            "in",
            [],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0089: in.op=none (nok + nok)",
         "schema" : [
            "bool",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0090: in.op=none (nok + ok)",
         "schema" : [
            "bool",
            "in",
            [
               [],
               [
                  0,
                  1
               ]
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0091: in.op=none (ok + nok)",
         "schema" : [
            "bool",
            "in",
            [
               [
                  0,
                  1
               ],
               []
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0092: in.op=none (ok + ok)",
         "schema" : [
            "bool",
            "in",
            [
               [
                  0,
                  1
               ],
               [
                  0,
                  1
               ]
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "bool0093: min: 1 0",
         "schema" : [
            "bool",
            "min",
            0
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:min"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0094: min: 1 1",
         "schema" : [
            "bool",
            "min",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:min"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0095: min: 0 1 -> fail",
         "schema" : [
            "bool",
            "min",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:min"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "bool0096: xmin: 1 0",
         "schema" : [
            "bool",
            "xmin",
            0
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:xmin"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0097: xmin: 1 1 -> fail",
         "schema" : [
            "bool",
            "xmin",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:xmin"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0098: xmin: 0 1 -> fail",
         "schema" : [
            "bool",
            "xmin",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:xmin"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "bool0099: max: 1 0 -> fail",
         "schema" : [
            "bool",
            "max",
            0
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:max"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "bool0100: max: 1 1",
         "schema" : [
            "bool",
            "max",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:max"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0101: max: 0 1",
         "schema" : [
            "bool",
            "max",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:max"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0102: xmax: 1 0 -> fail",
         "schema" : [
            "bool",
            "xmax",
            0
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:xmax"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "bool0103: xmax: 1 1 -> fail",
         "schema" : [
            "bool",
            "xmax",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:xmax"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0104: xmax: 0 1",
         "schema" : [
            "bool",
            "xmax",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:xmax"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0105: between: 1 0 & 1",
         "schema" : [
            "bool",
            "between",
            [
               0,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0106: between: 1 0 & 1",
         "schema" : [
            "bool",
            "between",
            [
               0,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0107: between: 1 1 & 1",
         "schema" : [
            "bool",
            "between",
            [
               1,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0108: between: 0 1 & 1 -> fail",
         "schema" : [
            "bool",
            "between",
            [
               1,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between"
         ],
         "valid" : 0
      },
      {
         "input" : "1",
         "name" : "bool0109: xbetween: 1 0 & 1",
         "schema" : [
            "bool",
            "xbetween",
            [
               0,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : "1",
         "name" : "bool0110: xbetween: 1 0 & 1 -> fail",
         "schema" : [
            "bool",
            "xbetween",
            [
               0,
               "1"
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : "1",
         "name" : "bool0111: xbetween: 1 1 & 1 -> fail",
         "schema" : [
            "bool",
            "xbetween",
            [
               "1",
               "1"
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0112: xbetween: 0 1 & 1 -> fail",
         "schema" : [
            "bool",
            "xbetween",
            [
               "1",
               "1"
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0113: !between (nok)",
         "schema" : [
            "bool",
            "!between",
            [
               0,
               0
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0114: !between (ok)",
         "schema" : [
            "bool",
            "!between",
            [
               "1",
               "1"
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0115: between.op=not (nok)",
         "schema" : [
            "bool",
            "between",
            [
               0,
               0
            ],
            "between.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0116: between.op=not (ok)",
         "schema" : [
            "bool",
            "between",
            [
               "1",
               "1"
            ],
            "between.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0117: between& (no items)",
         "schema" : [
            "bool",
            "between&",
            []
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0118: between& (ok)",
         "schema" : [
            "bool",
            "between&",
            [
               [
                  0,
                  0
               ],
               [
                  0,
                  0
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0119: between& (nok + ok)",
         "schema" : [
            "bool",
            "between&",
            [
               [
                  "1",
                  "1"
               ],
               [
                  0,
                  0
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0120: between& (ok + nok)",
         "schema" : [
            "bool",
            "between&",
            [
               [
                  0,
                  0
               ],
               [
                  "1",
                  "1"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0121: between& (nok + nok)",
         "schema" : [
            "bool",
            "between&",
            [
               [
                  "1",
                  "1"
               ],
               [
                  "1",
                  "1"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0122: between.op=and (no items)",
         "schema" : [
            "bool",
            "between",
            [],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0123: between.op=and (ok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  0,
                  0
               ],
               [
                  0,
                  0
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0124: between.op=and (nok + ok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  "1",
                  "1"
               ],
               [
                  0,
                  0
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0125: between.op=and (ok + nok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  0,
                  0
               ],
               [
                  "1",
                  "1"
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0126: between.op=and (nok + nok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  "1",
                  "1"
               ],
               [
                  "1",
                  "1"
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0127: between| (no items)",
         "schema" : [
            "bool",
            "between|",
            []
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0128: between| (ok)",
         "schema" : [
            "bool",
            "between|",
            [
               [
                  0,
                  0
               ],
               [
                  0,
                  0
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0129: between| (nok + ok)",
         "schema" : [
            "bool",
            "between|",
            [
               [
                  "1",
                  "1"
               ],
               [
                  0,
                  0
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0130: between| (ok + nok)",
         "schema" : [
            "bool",
            "between|",
            [
               [
                  0,
                  0
               ],
               [
                  "1",
                  "1"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0131: between| (nok + nok)",
         "schema" : [
            "bool",
            "between|",
            [
               [
                  "1",
                  "1"
               ],
               [
                  "1",
                  "1"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0132: between.op=or (no items)",
         "schema" : [
            "bool",
            "between",
            [],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0133: between.op=or (ok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  0,
                  0
               ],
               [
                  0,
                  0
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0134: between.op=or (nok + ok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  "1",
                  "1"
               ],
               [
                  0,
                  0
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0135: between.op=or (ok + nok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  0,
                  0
               ],
               [
                  "1",
                  "1"
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0136: between.op=or (nok + nok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  "1",
                  "1"
               ],
               [
                  "1",
                  "1"
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0137: between.op=none (empty items)",
         "schema" : [
            "bool",
            "between",
            [],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0138: between.op=none (nok + nok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  "1",
                  "1"
               ],
               [
                  "1",
                  "1"
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0139: between.op=none (nok + ok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  "1",
                  "1"
               ],
               [
                  0,
                  0
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0140: between.op=none (ok + nok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  0,
                  0
               ],
               [
                  "1",
                  "1"
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 0,
         "name" : "bool0141: between.op=none (ok + ok)",
         "schema" : [
            "bool",
            "between",
            [
               [
                  0,
                  0
               ],
               [
                  0,
                  0
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : 1,
         "name" : "bool0142: is_true: 1 (ok)",
         "schema" : [
            "bool",
            "is_true",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is_true"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "bool0143: is_true: 1 (nok)",
         "schema" : [
            "bool",
            "is_true",
            1
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is_true"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0144: is_true: 0 (ok)",
         "schema" : [
            "bool",
            "is_true",
            0
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is_true"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0145: is_true: 0 (nok)",
         "schema" : [
            "bool",
            "is_true",
            0
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is_true"
         ],
         "valid" : 0
      },
      {
         "input" : 0,
         "name" : "bool0146: is_true: undef (ok 1)",
         "schema" : [
            "bool",
            "is_true",
            null
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is_true"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "bool0147: is_true: undef (ok 2)",
         "schema" : [
            "bool",
            "is_true",
            null
         ],
         "tags" : [
            "type",
            "type:bool",
            "clause:is_true"
         ],
         "valid" : 1
      }
   ],
   "version" : "v0.9.41 (generated by devscripts/gen-type-spectest on Fri Jul 22 01:37:29 2016)"
}
