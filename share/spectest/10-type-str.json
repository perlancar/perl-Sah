{
   "tests" : [
      {
         "input" : 0,
         "name" : "str0001: type check: must accept 0",
         "schema" : "str",
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "str0002: type check: must accept 1.1",
         "schema" : "str",
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0003: type check: must accept ",
         "schema" : "str",
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 1
      },
      {
         "input" : "str\n",
         "name" : "str0004: type check: must accept str\n",
         "schema" : "str",
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 1
      },
      {
         "input" : [],
         "name" : "str0005: type check: must reject []",
         "schema" : "str",
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 0
      },
      {
         "input" : {},
         "name" : "str0006: type check: must reject {}",
         "schema" : "str",
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "str0007: must accept undefined value",
         "schema" : "str",
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0008: defhash_v",
         "schema" : [
            "str",
            "defhash_v",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:defhash_v"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0009: v",
         "schema" : [
            "str",
            "v",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:v"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0010: c",
         "schema" : [
            "str",
            "c.foo.bar",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:c"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0011: default_lang",
         "schema" : [
            "str",
            "default_lang",
            "id_ID"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:default_lang"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0012: name",
         "schema" : [
            "str",
            "name",
            "some name"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:name"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0013: summary",
         "schema" : [
            "str",
            "summary",
            "some summary"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:summary"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0014: description",
         "schema" : [
            "str",
            "description",
            "some description and `markdown`"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:description"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0015: tags",
         "schema" : [
            "str",
            "tags",
            [
               "some",
               "tags"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:tags"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0016: req=0 must accept undefined value",
         "schema" : [
            "str",
            "req",
            0
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:req"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0017: req=1 must reject undefined value",
         "schema" : [
            "str",
            "req",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:req"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0018: forbidden=0 must accept defined value",
         "schema" : [
            "str",
            "forbidden",
            0
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:forbidden"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0019: forbidden=1 must reject defined value",
         "schema" : [
            "str",
            "forbidden",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:forbidden"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "str0020: default: must accept valid default a",
         "schema" : [
            "str*",
            "default",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:default"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0021: default: must reject invalid default []",
         "schema" : [
            "str*",
            "default",
            []
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:default"
         ],
         "valid" : 0
      },
      {
         "dies" : 1,
         "input" : "a",
         "name" : "str0022: clause (dies, unknown clause)",
         "schema" : [
            "str*",
            "clause",
            [
               "foo",
               1
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clause"
         ]
      },
      {
         "input" : "a",
         "name" : "str0023: clause (ok)",
         "schema" : [
            "str*",
            "clause",
            [
               "match",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clause"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0024: clause (ok) + clause nok = nok",
         "schema" : [
            "str*",
            "clause",
            [
               "match",
               "a"
            ],
            "len",
            2
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clause"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0025: clause (nok)",
         "schema" : [
            "str*",
            "clause",
            [
               "match",
               "b"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clause"
         ],
         "valid" : 0
      },
      {
         "dies" : 1,
         "input" : "a",
         "name" : "str0026: clset (dies, unknown clause)",
         "schema" : [
            "str*",
            "clset",
            {
               "foo" : 1
            }
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clset"
         ]
      },
      {
         "dies" : 1,
         "input" : "a",
         "name" : "str0027: clset (dies, unknown attr)",
         "schema" : [
            "str*",
            "clset",
            {
               "min_len" : 1,
               "min_len.foo" : 1
            }
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clset"
         ]
      },
      {
         "input" : "a",
         "name" : "str0028: clset (empty = ok)",
         "schema" : [
            "str*",
            "clset",
            {}
         ],
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0029: clset (ignored clause/attr = ok)",
         "schema" : [
            "str*",
            "clset",
            {
               "_foo" : 1,
               "foo._bar" : 2
            }
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clset"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0030: clset (ok + ok = ok)",
         "schema" : [
            "str*",
            "clset",
            {
               "len" : 1,
               "match" : "a"
            }
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clset"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0031: clset (ok) + clause nok = nok",
         "schema" : [
            "str*",
            "clset",
            {
               "match" : "a"
            },
            "len",
            2
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0032: clset (ok + nok = nok)",
         "schema" : [
            "str*",
            "clset",
            {
               "len" : 2,
               "match" : "a"
            }
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0033: clset (nok + ok = nok)",
         "schema" : [
            "str*",
            "clset",
            {
               "len" : 1,
               "match" : "b"
            }
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0034: clset (nok + nok = nok)",
         "schema" : [
            "str*",
            "clset",
            {
               "len" : 2,
               "match" : "b"
            }
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "str0035: ok",
         "schema" : [
            "str",
            {
               "ok" : 1
            }
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:ok"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "str0036: ok + op not (nok)",
         "schema" : [
            "str",
            {
               "!ok" : 1
            }
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:ok",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0037: .err_level=error (clause=is, ok)",
         "schema" : [
            "str",
            "is",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1
      },
      {
         "input" : "a\n",
         "name" : "str0038: .err_level=error (clause=is, nok)",
         "schema" : [
            "str",
            "is",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "attr",
            "attr:err_level"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0039: .err_level=warn (clause=is, ok)",
         "schema" : [
            "str",
            "is",
            "a",
            "is.err_level",
            "warn"
         ],
         "tags" : [
            "type",
            "type:str",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1
      },
      {
         "input" : "a\n",
         "name" : "str0040: .err_level=warn (clause=is, nok)",
         "schema" : [
            "str*",
            "is",
            "a",
            "is.err_level",
            "warn"
         ],
         "tags" : [
            "type",
            "type:str",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1,
         "warnings" : 1
      },
      {
         "input" : "a",
         "name" : "str0041: is: must accept same value",
         "schema" : [
            "str",
            "is",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0042: is: must reject different value",
         "schema" : [
            "str",
            "is",
            "b"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0043: !is (nok)",
         "schema" : [
            "str",
            "!is",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0044: !is (ok)",
         "schema" : [
            "str",
            "!is",
            "b"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0045: is.op=not (nok)",
         "schema" : [
            "str",
            "is",
            "a",
            "is.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0046: is.op=not (ok)",
         "schema" : [
            "str",
            "is",
            "b",
            "is.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0047: is& (no items)",
         "schema" : [
            "str",
            "is&",
            []
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0048: is& (ok)",
         "schema" : [
            "str",
            "is&",
            [
               "a",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0049: is& (nok + ok)",
         "schema" : [
            "str",
            "is&",
            [
               "b",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0050: is& (ok + nok)",
         "schema" : [
            "str",
            "is&",
            [
               "a",
               "b"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0051: is& (nok + nok)",
         "schema" : [
            "str",
            "is&",
            [
               "b",
               "b"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0052: is.op=and (no items)",
         "schema" : [
            "str",
            "is",
            [],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0053: is.op=and (ok)",
         "schema" : [
            "str",
            "is",
            [
               "a",
               "a"
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0054: is.op=and (nok + ok)",
         "schema" : [
            "str",
            "is",
            [
               "b",
               "a"
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0055: is.op=and (ok + nok)",
         "schema" : [
            "str",
            "is",
            [
               "a",
               "b"
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0056: is.op=and (nok + nok)",
         "schema" : [
            "str",
            "is",
            [
               "b",
               "b"
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0057: is| (no items)",
         "schema" : [
            "str",
            "is|",
            []
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0058: is| (ok)",
         "schema" : [
            "str",
            "is|",
            [
               "a",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0059: is| (nok + ok)",
         "schema" : [
            "str",
            "is|",
            [
               "b",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0060: is| (ok + nok)",
         "schema" : [
            "str",
            "is|",
            [
               "a",
               "b"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0061: is| (nok + nok)",
         "schema" : [
            "str",
            "is|",
            [
               "b",
               "b"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0062: is.op=or (no items)",
         "schema" : [
            "str",
            "is",
            [],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0063: is.op=or (ok)",
         "schema" : [
            "str",
            "is",
            [
               "a",
               "a"
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0064: is.op=or (nok + ok)",
         "schema" : [
            "str",
            "is",
            [
               "b",
               "a"
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0065: is.op=or (ok + nok)",
         "schema" : [
            "str",
            "is",
            [
               "a",
               "b"
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0066: is.op=or (nok + nok)",
         "schema" : [
            "str",
            "is",
            [
               "b",
               "b"
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0067: is.op=none (empty items)",
         "schema" : [
            "str",
            "is",
            [],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0068: is.op=none (nok + nok)",
         "schema" : [
            "str",
            "is",
            [
               "b",
               "b"
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0069: is.op=none (nok + ok)",
         "schema" : [
            "str",
            "is",
            [
               "b",
               "a"
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0070: is.op=none (ok + nok)",
         "schema" : [
            "str",
            "is",
            [
               "a",
               "b"
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0071: is.op=none (ok + ok)",
         "schema" : [
            "str",
            "is",
            [
               "a",
               "a"
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0072: in: must accept valid choices",
         "schema" : [
            "str",
            "in",
            [
               "a",
               "b"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0073: in: must reject empty choices",
         "schema" : [
            "str",
            "in",
            []
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0074: !in (nok)",
         "schema" : [
            "str",
            "!in",
            [
               "a",
               "b"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0075: !in (ok)",
         "schema" : [
            "str",
            "!in",
            []
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0076: in.op=not (nok)",
         "schema" : [
            "str",
            "in",
            [
               "a",
               "b"
            ],
            "in.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0077: in.op=not (ok)",
         "schema" : [
            "str",
            "in",
            [],
            "in.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0078: in& (no items)",
         "schema" : [
            "str",
            "in&",
            []
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0079: in& (ok)",
         "schema" : [
            "str",
            "in&",
            [
               [
                  "a",
                  "b"
               ],
               [
                  "a",
                  "b"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0080: in& (nok + ok)",
         "schema" : [
            "str",
            "in&",
            [
               [],
               [
                  "a",
                  "b"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0081: in& (ok + nok)",
         "schema" : [
            "str",
            "in&",
            [
               [
                  "a",
                  "b"
               ],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0082: in& (nok + nok)",
         "schema" : [
            "str",
            "in&",
            [
               [],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0083: in.op=and (no items)",
         "schema" : [
            "str",
            "in",
            [],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0084: in.op=and (ok)",
         "schema" : [
            "str",
            "in",
            [
               [
                  "a",
                  "b"
               ],
               [
                  "a",
                  "b"
               ]
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0085: in.op=and (nok + ok)",
         "schema" : [
            "str",
            "in",
            [
               [],
               [
                  "a",
                  "b"
               ]
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0086: in.op=and (ok + nok)",
         "schema" : [
            "str",
            "in",
            [
               [
                  "a",
                  "b"
               ],
               []
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0087: in.op=and (nok + nok)",
         "schema" : [
            "str",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0088: in| (no items)",
         "schema" : [
            "str",
            "in|",
            []
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0089: in| (ok)",
         "schema" : [
            "str",
            "in|",
            [
               [
                  "a",
                  "b"
               ],
               [
                  "a",
                  "b"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0090: in| (nok + ok)",
         "schema" : [
            "str",
            "in|",
            [
               [],
               [
                  "a",
                  "b"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0091: in| (ok + nok)",
         "schema" : [
            "str",
            "in|",
            [
               [
                  "a",
                  "b"
               ],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0092: in| (nok + nok)",
         "schema" : [
            "str",
            "in|",
            [
               [],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0093: in.op=or (no items)",
         "schema" : [
            "str",
            "in",
            [],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0094: in.op=or (ok)",
         "schema" : [
            "str",
            "in",
            [
               [
                  "a",
                  "b"
               ],
               [
                  "a",
                  "b"
               ]
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0095: in.op=or (nok + ok)",
         "schema" : [
            "str",
            "in",
            [
               [],
               [
                  "a",
                  "b"
               ]
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0096: in.op=or (ok + nok)",
         "schema" : [
            "str",
            "in",
            [
               [
                  "a",
                  "b"
               ],
               []
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0097: in.op=or (nok + nok)",
         "schema" : [
            "str",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0098: in.op=none (empty items)",
         "schema" : [
            "str",
            "in",
            [],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0099: in.op=none (nok + nok)",
         "schema" : [
            "str",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0100: in.op=none (nok + ok)",
         "schema" : [
            "str",
            "in",
            [
               [],
               [
                  "a",
                  "b"
               ]
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0101: in.op=none (ok + nok)",
         "schema" : [
            "str",
            "in",
            [
               [
                  "a",
                  "b"
               ],
               []
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "a",
         "name" : "str0102: in.op=none (ok + ok)",
         "schema" : [
            "str",
            "in",
            [
               [
                  "a",
                  "b"
               ],
               [
                  "a",
                  "b"
               ]
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0103: min: a ",
         "schema" : [
            "str",
            "min",
            ""
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:min"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0104: min: a a",
         "schema" : [
            "str",
            "min",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:min"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0105: min:  a -> fail",
         "schema" : [
            "str",
            "min",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:min"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0106: xmin: a ",
         "schema" : [
            "str",
            "xmin",
            ""
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:xmin"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0107: xmin: a a -> fail",
         "schema" : [
            "str",
            "xmin",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:xmin"
         ],
         "valid" : 0
      },
      {
         "input" : "",
         "name" : "str0108: xmin:  a -> fail",
         "schema" : [
            "str",
            "xmin",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:xmin"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0109: max: a  -> fail",
         "schema" : [
            "str",
            "max",
            ""
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:max"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0110: max: a a",
         "schema" : [
            "str",
            "max",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:max"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0111: max:  a",
         "schema" : [
            "str",
            "max",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:max"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0112: xmax: a  -> fail",
         "schema" : [
            "str",
            "xmax",
            ""
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:xmax"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0113: xmax: a a -> fail",
         "schema" : [
            "str",
            "xmax",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:xmax"
         ],
         "valid" : 0
      },
      {
         "input" : "",
         "name" : "str0114: xmax:  a",
         "schema" : [
            "str",
            "xmax",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:xmax"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0115: between: a  & ab",
         "schema" : [
            "str",
            "between",
            [
               "",
               "ab"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0116: between: a  & a",
         "schema" : [
            "str",
            "between",
            [
               "",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0117: between: a a & a",
         "schema" : [
            "str",
            "between",
            [
               "a",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0118: between:  a & ab -> fail",
         "schema" : [
            "str",
            "between",
            [
               "a",
               "ab"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0119: xbetween: a  & ab",
         "schema" : [
            "str",
            "xbetween",
            [
               "",
               "ab"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:xbetween"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0120: xbetween: a  & a -> fail",
         "schema" : [
            "str",
            "xbetween",
            [
               "",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0121: xbetween: a a & a -> fail",
         "schema" : [
            "str",
            "xbetween",
            [
               "a",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : "",
         "name" : "str0122: xbetween:  a & ab -> fail",
         "schema" : [
            "str",
            "xbetween",
            [
               "a",
               "ab"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : "",
         "name" : "str0123: !between (nok)",
         "schema" : [
            "str",
            "!between",
            [
               "",
               ""
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : "",
         "name" : "str0124: !between (ok)",
         "schema" : [
            "str",
            "!between",
            [
               "a",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0125: between.op=not (nok)",
         "schema" : [
            "str",
            "between",
            [
               "",
               ""
            ],
            "between.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : "",
         "name" : "str0126: between.op=not (ok)",
         "schema" : [
            "str",
            "between",
            [
               "a",
               "a"
            ],
            "between.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0127: between& (no items)",
         "schema" : [
            "str",
            "between&",
            []
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0128: between& (ok)",
         "schema" : [
            "str",
            "between&",
            [
               [
                  "",
                  ""
               ],
               [
                  "",
                  ""
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0129: between& (nok + ok)",
         "schema" : [
            "str",
            "between&",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "",
                  ""
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0130: between& (ok + nok)",
         "schema" : [
            "str",
            "between&",
            [
               [
                  "",
                  ""
               ],
               [
                  "a",
                  "a"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0131: between& (nok + nok)",
         "schema" : [
            "str",
            "between&",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "a",
                  "a"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : "",
         "name" : "str0132: between.op=and (no items)",
         "schema" : [
            "str",
            "between",
            [],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0133: between.op=and (ok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0134: between.op=and (nok + ok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0135: between.op=and (ok + nok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0136: between.op=and (nok + nok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : "",
         "name" : "str0137: between| (no items)",
         "schema" : [
            "str",
            "between|",
            []
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0138: between| (ok)",
         "schema" : [
            "str",
            "between|",
            [
               [
                  "",
                  ""
               ],
               [
                  "",
                  ""
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0139: between| (nok + ok)",
         "schema" : [
            "str",
            "between|",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "",
                  ""
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0140: between| (ok + nok)",
         "schema" : [
            "str",
            "between|",
            [
               [
                  "",
                  ""
               ],
               [
                  "a",
                  "a"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0141: between| (nok + nok)",
         "schema" : [
            "str",
            "between|",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "a",
                  "a"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : "",
         "name" : "str0142: between.op=or (no items)",
         "schema" : [
            "str",
            "between",
            [],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0143: between.op=or (ok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0144: between.op=or (nok + ok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0145: between.op=or (ok + nok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0146: between.op=or (nok + nok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : "",
         "name" : "str0147: between.op=none (empty items)",
         "schema" : [
            "str",
            "between",
            [],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "name" : "str0148: between.op=none (nok + nok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0149: between.op=none (nok + ok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0150: between.op=none (ok + nok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : "",
         "name" : "str0151: between.op=none (ok + ok)",
         "schema" : [
            "str",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0152: len (ok)",
         "schema" : [
            "str",
            "len",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:len"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0153: len (nok)",
         "schema" : [
            "str",
            "len",
            3
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:len"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0154: min_len (ok)",
         "schema" : [
            "str",
            "min_len",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:min_len"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0155: min_len (nok)",
         "schema" : [
            "str",
            "min_len",
            3
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:min_len"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0156: max_len (ok)",
         "schema" : [
            "str",
            "min_len",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:max_len"
         ],
         "valid" : 1
      },
      {
         "input" : "abc",
         "name" : "str0157: max_len (nok)",
         "schema" : [
            "str",
            "max_len",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:max_len"
         ],
         "valid" : 0
      },
      {
         "input" : "a",
         "name" : "str0158: len_between (ok)",
         "schema" : [
            "str",
            "len_between",
            [
               1,
               3
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:len_between"
         ],
         "valid" : 1
      },
      {
         "input" : "abc",
         "name" : "str0159: len_between (nok)",
         "schema" : [
            "str",
            "len_between",
            [
               1,
               1
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:len_between"
         ],
         "valid" : 0
      },
      {
         "input" : "abc",
         "name" : "str0160: each_index (ok)",
         "schema" : [
            "str",
            "each_index",
            [
               "int",
               "max",
               2
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:each_index"
         ],
         "valid" : 1
      },
      {
         "input" : "abc",
         "name" : "str0161: each_index (nok)",
         "schema" : [
            "str",
            "each_index",
            [
               "int",
               "xmax",
               2
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:each_index"
         ],
         "valid" : 0
      },
      {
         "input" : "abc",
         "name" : "str0162: each_elem (ok)",
         "schema" : [
            "str",
            "each_elem",
            "str"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:each_elem"
         ],
         "valid" : 1
      },
      {
         "input" : "abc",
         "name" : "str0163: each_elem (nok)",
         "schema" : [
            "str",
            "each_elem",
            "float"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:each_elem"
         ],
         "valid" : 0
      },
      {
         "invalid_inputs" : [
            "aaaa"
         ],
         "name" : "str0164: check_each_index",
         "schema" : [
            "str",
            "check_each_index",
            "$_ <= 2"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:check_each_index"
         ],
         "valid_inputs" : [
            "",
            "a",
            "aa",
            "aaa"
         ]
      },
      {
         "invalid_inputs" : [
            [
               "A"
            ],
            [
               "a",
               "b"
            ]
         ],
         "name" : "str0165: check_each_elem",
         "schema" : [
            "str",
            "check_each_elem",
            "$_ eq \"a\""
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:check_each_elem"
         ],
         "valid_inputs" : [
            [],
            [
               "a"
            ]
         ]
      },
      {
         "invalid_inputs" : [
            "aa"
         ],
         "name" : "str0166: uniq=1",
         "schema" : [
            "str",
            "uniq",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:uniq"
         ],
         "valid_inputs" : [
            "",
            "a",
            "ab",
            "Aab"
         ]
      },
      {
         "invalid_inputs" : [
            "",
            "a",
            "ab",
            "Aab"
         ],
         "name" : "str0167: uniq=0",
         "schema" : [
            "str",
            "uniq",
            0
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:uniq"
         ],
         "valid_inputs" : [
            "aa"
         ]
      },
      {
         "invalid_inputs" : [
            "",
            "a",
            "ab",
            "Aab"
         ],
         "name" : "str0168: !uniq=1",
         "schema" : [
            "str",
            "!uniq",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:uniq",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid_inputs" : [
            "aa"
         ]
      },
      {
         "invalid_inputs" : [
            "",
            "bc",
            "A"
         ],
         "name" : "str0169: exists",
         "schema" : [
            "str",
            "is",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:exists"
         ],
         "valid_inputs" : [
            "a",
            "ba"
         ]
      },
      {
         "invalid_inputs" : [
            "",
            "A",
            "c"
         ],
         "name" : "str0170: has",
         "schema" : [
            "str",
            "has",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:has"
         ],
         "valid_inputs" : [
            "abc",
            "ac"
         ]
      },
      {
         "invalid_inputs" : [
            "abc",
            "ac"
         ],
         "name" : "str0171: has + op.not",
         "schema" : [
            "str",
            "!has",
            "a"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:has",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid_inputs" : [
            "",
            "A",
            "c"
         ]
      },
      {
         "invalid_inputs" : [
            "",
            "A",
            "c"
         ],
         "name" : "str0172: has + op.or",
         "schema" : [
            "str",
            "has|",
            [
               "a",
               "b"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:has",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid_inputs" : [
            "abc",
            "ac"
         ]
      },
      {
         "invalid_inputs" : [
            "ac",
            "",
            "A",
            "c"
         ],
         "name" : "str0173: has + op.and",
         "schema" : [
            "str",
            "has&",
            [
               "a",
               "b"
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:has",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid_inputs" : [
            "abc"
         ]
      },
      {
         "invalid_inputs" : [
            "",
            "a"
         ],
         "name" : "str0174: prop:len",
         "schema" : [
            "str",
            "prop",
            [
               "len",
               [
                  "int",
                  "is",
                  2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "prop:len"
         ],
         "valid_inputs" : [
            "aa"
         ]
      },
      {
         "invalid_inputs" : [
            "",
            "a",
            "aa"
         ],
         "name" : "str0175: prop:indices",
         "schema" : [
            "str",
            "prop",
            [
               "indices",
               [
                  "array",
                  "has",
                  2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "prop:indices"
         ],
         "valid_inputs" : [
            "aaa"
         ]
      },
      {
         "invalid_inputs" : [
            "",
            "Ab"
         ],
         "name" : "str0176: prop:elems",
         "schema" : [
            "str",
            "prop",
            [
               "elems",
               [
                  "array",
                  "has",
                  "a"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:str",
            "prop:elems"
         ],
         "valid_inputs" : [
            "ab"
         ]
      },
      {
         "input" : "a",
         "name" : "str0177: encoding: (ok)",
         "schema" : [
            "str",
            "encoding",
            "utf8"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:encoding"
         ],
         "valid" : 1
      },
      {
         "dies" : 1,
         "input" : "a",
         "name" : "str0178: encoding: (dies, unknown encoding)",
         "schema" : [
            "str",
            "encoding",
            "foo"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:encoding"
         ]
      },
      {
         "input" : "a",
         "name" : "str0179: match: (ok)",
         "schema" : [
            "str",
            "match",
            "[abc]"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:match"
         ],
         "valid" : 1
      },
      {
         "input" : "A",
         "name" : "str0180: match: (nok)",
         "schema" : [
            "str",
            "match",
            "[abc]"
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:match"
         ],
         "valid" : 0
      },
      {
         "dies" : 1,
         "input" : "a",
         "name" : "str0181: match: (dies, invalid regex)",
         "schema" : [
            "str",
            "match",
            "("
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:match"
         ]
      },
      {
         "input" : "a",
         "name" : "str0182: is_re: 1 (ok)",
         "schema" : [
            "str",
            "is_re",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is_re"
         ],
         "valid" : 1
      },
      {
         "input" : "a(",
         "name" : "str0183: is_re: 1 (nok)",
         "schema" : [
            "str",
            "is_re",
            1
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is_re"
         ],
         "valid" : 0
      },
      {
         "input" : "a(",
         "name" : "str0184: is_re: 0 (ok)",
         "schema" : [
            "str",
            "is_re",
            0
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is_re"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "str0185: is_re: 0 (nok)",
         "schema" : [
            "str",
            "is_re",
            0
         ],
         "tags" : [
            "type",
            "type:str",
            "clause:is_re"
         ],
         "valid" : 0
      }
   ],
   "version" : "v0.9.36 (generated by devscripts/gen-type-spectest on Thu Jun 11 14:24:01 2015)"
}
