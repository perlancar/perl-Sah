{
   "version" : "v0.9.34 (generated by devscripts/gen-type-spectest on Thu Apr 30 20:23:56 2015)",
   "tests" : [
      {
         "tags" : [
            "type",
            "type:cistr"
         ],
         "valid" : 1,
         "name" : "type check: must accept 0",
         "schema" : "cistr",
         "input" : 0
      },
      {
         "schema" : "cistr",
         "input" : 1.1,
         "name" : "type check: must accept 1.1",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr"
         ]
      },
      {
         "schema" : "cistr",
         "input" : "",
         "name" : "type check: must accept ",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr"
         ],
         "valid" : 1,
         "name" : "type check: must accept str\n",
         "input" : "str\n",
         "schema" : "cistr"
      },
      {
         "tags" : [
            "type",
            "type:cistr"
         ],
         "valid" : 0,
         "name" : "type check: must reject []",
         "schema" : "cistr",
         "input" : []
      },
      {
         "name" : "type check: must reject {}",
         "schema" : "cistr",
         "input" : {},
         "tags" : [
            "type",
            "type:cistr"
         ],
         "valid" : 0
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr"
         ],
         "schema" : "cistr",
         "input" : null,
         "name" : "must accept undefined value"
      },
      {
         "schema" : [
            "cistr",
            "defhash_v",
            1
         ],
         "input" : null,
         "name" : "defhash_v",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:defhash_v"
         ]
      },
      {
         "name" : "v",
         "input" : null,
         "schema" : [
            "cistr",
            "v",
            1
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:v"
         ],
         "valid" : 1
      },
      {
         "name" : "c",
         "input" : null,
         "schema" : [
            "cistr",
            "c.foo.bar",
            1
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:c"
         ],
         "valid" : 1
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:default_lang"
         ],
         "input" : null,
         "schema" : [
            "cistr",
            "default_lang",
            "id_ID"
         ],
         "name" : "default_lang"
      },
      {
         "name" : "name",
         "schema" : [
            "cistr",
            "name",
            "some name"
         ],
         "input" : null,
         "tags" : [
            "type",
            "type:cistr",
            "clause:name"
         ],
         "valid" : 1
      },
      {
         "name" : "summary",
         "input" : null,
         "schema" : [
            "cistr",
            "summary",
            "some summary"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:summary"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:description"
         ],
         "valid" : 1,
         "name" : "description",
         "schema" : [
            "cistr",
            "description",
            "some description and `markdown`"
         ],
         "input" : null
      },
      {
         "name" : "tags",
         "schema" : [
            "cistr",
            "tags",
            [
               "some",
               "tags"
            ]
         ],
         "input" : null,
         "tags" : [
            "type",
            "type:cistr",
            "clause:tags"
         ],
         "valid" : 1
      },
      {
         "name" : "req=0 must accept undefined value",
         "input" : null,
         "schema" : [
            "cistr",
            "req",
            0
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:req"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:req"
         ],
         "valid" : 0,
         "name" : "req=1 must reject undefined value",
         "schema" : [
            "cistr",
            "req",
            1
         ],
         "input" : null
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:forbidden"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "forbidden",
            0
         ],
         "name" : "forbidden=0 must accept defined value"
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:forbidden"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "forbidden",
            1
         ],
         "name" : "forbidden=1 must reject defined value"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:default"
         ],
         "input" : null,
         "schema" : [
            "cistr*",
            "default",
            "a"
         ],
         "name" : "default: must accept valid default a"
      },
      {
         "name" : "default: must reject invalid default []",
         "schema" : [
            "cistr*",
            "default",
            []
         ],
         "input" : null,
         "tags" : [
            "type",
            "type:cistr",
            "clause:default"
         ],
         "valid" : 0
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:clause"
         ],
         "name" : "clause (dies, unknown clause)",
         "input" : "a",
         "schema" : [
            "cistr*",
            "clause",
            [
               "foo",
               1
            ]
         ],
         "dies" : 1
      },
      {
         "name" : "clause (ok)",
         "input" : "a",
         "schema" : [
            "cistr*",
            "clause",
            [
               "match",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:clause"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:clause"
         ],
         "valid" : 0,
         "name" : "clause (ok) + clause nok = nok",
         "schema" : [
            "cistr*",
            "clause",
            [
               "match",
               "a"
            ],
            "len",
            2
         ],
         "input" : "a"
      },
      {
         "name" : "clause (nok)",
         "input" : "a",
         "schema" : [
            "cistr*",
            "clause",
            [
               "match",
               "b"
            ]
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:clause"
         ],
         "valid" : 0,
         "errors" : 1
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:clset"
         ],
         "input" : "a",
         "schema" : [
            "cistr*",
            "clset",
            {
               "foo" : 1
            }
         ],
         "dies" : 1,
         "name" : "clset (dies, unknown clause)"
      },
      {
         "name" : "clset (dies, unknown attr)",
         "input" : "a",
         "dies" : 1,
         "schema" : [
            "cistr*",
            "clset",
            {
               "min_len" : 1,
               "min_len.foo" : 1
            }
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:clset"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr"
         ],
         "input" : "a",
         "schema" : [
            "cistr*",
            "clset",
            {}
         ],
         "name" : "clset (empty = ok)"
      },
      {
         "schema" : [
            "cistr*",
            "clset",
            {
               "foo._bar" : 2,
               "_foo" : 1
            }
         ],
         "input" : "a",
         "name" : "clset (ignored clause/attr = ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:clset"
         ]
      },
      {
         "name" : "clset (ok + ok = ok)",
         "input" : "a",
         "schema" : [
            "cistr*",
            "clset",
            {
               "len" : 1,
               "match" : "a"
            }
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:clset"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:clset"
         ],
         "valid" : 0,
         "name" : "clset (ok) + clause nok = nok",
         "schema" : [
            "cistr*",
            "clset",
            {
               "match" : "a"
            },
            "len",
            2
         ],
         "input" : "a"
      },
      {
         "input" : "a",
         "schema" : [
            "cistr*",
            "clset",
            {
               "match" : "a",
               "len" : 2
            }
         ],
         "name" : "clset (ok + nok = nok)",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:clset"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:clset"
         ],
         "valid" : 0,
         "name" : "clset (nok + ok = nok)",
         "schema" : [
            "cistr*",
            "clset",
            {
               "len" : 1,
               "match" : "b"
            }
         ],
         "input" : "a"
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:clset"
         ],
         "input" : "a",
         "schema" : [
            "cistr*",
            "clset",
            {
               "len" : 2,
               "match" : "b"
            }
         ],
         "name" : "clset (nok + nok = nok)"
      },
      {
         "name" : "ok",
         "schema" : [
            "cistr",
            {
               "ok" : 1
            }
         ],
         "input" : null,
         "tags" : [
            "type",
            "type:cistr",
            "clause:ok"
         ],
         "valid" : 1
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:ok",
            "op",
            "op:not"
         ],
         "schema" : [
            "cistr",
            {
               "!ok" : 1
            }
         ],
         "input" : null,
         "name" : "ok + op not (nok)"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "attr",
            "attr:err_level"
         ],
         "schema" : [
            "cistr",
            "is",
            "a"
         ],
         "input" : "a",
         "name" : ".err_level=error (clause=is, ok)"
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "attr",
            "attr:err_level"
         ],
         "valid" : 0,
         "name" : ".err_level=error (clause=is, nok)",
         "input" : "a\n",
         "schema" : [
            "cistr",
            "is",
            "a"
         ]
      },
      {
         "name" : ".err_level=warn (clause=is, ok)",
         "schema" : [
            "cistr",
            "is",
            "a",
            "is.err_level",
            "warn"
         ],
         "input" : "a",
         "tags" : [
            "type",
            "type:cistr",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "attr",
            "attr:err_level"
         ],
         "input" : "a\n",
         "schema" : [
            "cistr*",
            "is",
            "a",
            "is.err_level",
            "warn"
         ],
         "warnings" : 1,
         "name" : ".err_level=warn (clause=is, nok)"
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            "a"
         ],
         "name" : "is: must accept same value",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is"
         ]
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            "B"
         ],
         "name" : "is: must reject different value",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is"
         ]
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "schema" : [
            "cistr",
            "!is",
            "a"
         ],
         "input" : "a",
         "name" : "!is (nok)"
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "!is (ok)",
         "schema" : [
            "cistr",
            "!is",
            "B"
         ],
         "input" : "a"
      },
      {
         "name" : "is.op=not (nok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            "a",
            "is.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "name" : "is.op=not (ok)",
         "schema" : [
            "cistr",
            "is",
            "B",
            "is.op",
            "not"
         ],
         "input" : "a",
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "schema" : [
            "cistr",
            "is&",
            []
         ],
         "input" : "a",
         "name" : "is& (no items)"
      },
      {
         "name" : "is& (ok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "is&",
            [
               "a",
               "a"
            ]
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "is&",
            [
               "B",
               "a"
            ]
         ],
         "name" : "is& (nok + ok)"
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "is&",
            [
               "a",
               "B"
            ]
         ],
         "name" : "is& (ok + nok)"
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0,
         "errors" : 1,
         "name" : "is& (nok + nok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "is&",
            [
               "B",
               "B"
            ]
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr"
         ],
         "valid" : 1,
         "name" : "is.op=and (no items)",
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            [],
            "is.op",
            "and"
         ]
      },
      {
         "name" : "is.op=and (ok)",
         "schema" : [
            "cistr",
            "is",
            [
               "a",
               "a"
            ],
            "is.op",
            "and"
         ],
         "input" : "a",
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "name" : "is.op=and (nok + ok)",
         "schema" : [
            "cistr",
            "is",
            [
               "B",
               "a"
            ],
            "is.op",
            "and"
         ],
         "input" : "a",
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:and"
         ],
         "errors" : 1,
         "valid" : 0
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            [
               "a",
               "B"
            ],
            "is.op",
            "and"
         ],
         "name" : "is.op=and (ok + nok)",
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:and"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0,
         "errors" : 1,
         "name" : "is.op=and (nok + nok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            [
               "B",
               "B"
            ],
            "is.op",
            "and"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "is|",
            []
         ],
         "name" : "is| (no items)"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "is|",
            [
               "a",
               "a"
            ]
         ],
         "name" : "is| (ok)"
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "is| (nok + ok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "is|",
            [
               "B",
               "a"
            ]
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "is| (ok + nok)",
         "schema" : [
            "cistr",
            "is|",
            [
               "a",
               "B"
            ]
         ],
         "input" : "a"
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "is|",
            [
               "B",
               "B"
            ]
         ],
         "name" : "is| (nok + nok)",
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ]
      },
      {
         "schema" : [
            "cistr",
            "is",
            [],
            "is.op",
            "or"
         ],
         "input" : "a",
         "name" : "is.op=or (no items)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:or"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:or"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            [
               "a",
               "a"
            ],
            "is.op",
            "or"
         ],
         "name" : "is.op=or (ok)"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:or"
         ],
         "schema" : [
            "cistr",
            "is",
            [
               "B",
               "a"
            ],
            "is.op",
            "or"
         ],
         "input" : "a",
         "name" : "is.op=or (nok + ok)"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:or"
         ],
         "schema" : [
            "cistr",
            "is",
            [
               "a",
               "B"
            ],
            "is.op",
            "or"
         ],
         "input" : "a",
         "name" : "is.op=or (ok + nok)"
      },
      {
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:or"
         ],
         "schema" : [
            "cistr",
            "is",
            [
               "B",
               "B"
            ],
            "is.op",
            "or"
         ],
         "input" : "a",
         "name" : "is.op=or (nok + nok)"
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            [],
            "is.op",
            "none"
         ],
         "name" : "is.op=none (empty items)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:none"
         ]
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            [
               "B",
               "B"
            ],
            "is.op",
            "none"
         ],
         "name" : "is.op=none (nok + nok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:none"
         ]
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:none"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            [
               "B",
               "a"
            ],
            "is.op",
            "none"
         ],
         "name" : "is.op=none (nok + ok)"
      },
      {
         "name" : "is.op=none (ok + nok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            [
               "a",
               "B"
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0,
         "errors" : 1
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is",
            "op",
            "op:none"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "is",
            [
               "a",
               "a"
            ],
            "is.op",
            "none"
         ],
         "name" : "is.op=none (ok + ok)"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in"
         ],
         "schema" : [
            "cistr",
            "in",
            [
               "a",
               "B"
            ]
         ],
         "input" : "a",
         "name" : "in: must accept valid choices"
      },
      {
         "schema" : [
            "cistr",
            "in",
            []
         ],
         "input" : "a",
         "name" : "in: must reject empty choices",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in"
         ]
      },
      {
         "schema" : [
            "cistr",
            "!in",
            [
               "a",
               "B"
            ]
         ],
         "input" : "a",
         "name" : "!in (nok)",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ]
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "!in",
            []
         ],
         "name" : "!in (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 0,
         "name" : "in.op=not (nok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "in",
            [
               "a",
               "B"
            ],
            "in.op",
            "not"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 1,
         "name" : "in.op=not (ok)",
         "schema" : [
            "cistr",
            "in",
            [],
            "in.op",
            "not"
         ],
         "input" : "a"
      },
      {
         "name" : "in& (no items)",
         "input" : "a",
         "schema" : [
            "cistr",
            "in&",
            []
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "name" : "in& (ok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "in&",
            [
               [
                  "a",
                  "B"
               ],
               [
                  "a",
                  "B"
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0,
         "errors" : 1,
         "name" : "in& (nok + ok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "in&",
            [
               [],
               [
                  "a",
                  "B"
               ]
            ]
         ]
      },
      {
         "name" : "in& (ok + nok)",
         "schema" : [
            "cistr",
            "in&",
            [
               [
                  "a",
                  "B"
               ],
               []
            ]
         ],
         "input" : "a",
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "errors" : 1,
         "valid" : 0
      },
      {
         "name" : "in& (nok + nok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "in&",
            [
               [],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0,
         "errors" : 1
      },
      {
         "schema" : [
            "cistr",
            "in",
            [],
            "in.op",
            "and"
         ],
         "input" : "a",
         "name" : "in.op=and (no items)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr"
         ]
      },
      {
         "schema" : [
            "cistr",
            "in",
            [
               [
                  "a",
                  "B"
               ],
               [
                  "a",
                  "B"
               ]
            ],
            "in.op",
            "and"
         ],
         "input" : "a",
         "name" : "in.op=and (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:and"
         ]
      },
      {
         "name" : "in.op=and (nok + ok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "in",
            [
               [],
               [
                  "a",
                  "B"
               ]
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0,
         "errors" : 1
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:and"
         ],
         "errors" : 1,
         "valid" : 0,
         "name" : "in.op=and (ok + nok)",
         "schema" : [
            "cistr",
            "in",
            [
               [
                  "a",
                  "B"
               ],
               []
            ],
            "in.op",
            "and"
         ],
         "input" : "a"
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:and"
         ],
         "errors" : 1,
         "valid" : 0,
         "name" : "in.op=and (nok + nok)",
         "schema" : [
            "cistr",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "and"
         ],
         "input" : "a"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "schema" : [
            "cistr",
            "in|",
            []
         ],
         "input" : "a",
         "name" : "in| (no items)"
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "in|",
            [
               [
                  "a",
                  "B"
               ],
               [
                  "a",
                  "B"
               ]
            ]
         ],
         "name" : "in| (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "in| (nok + ok)",
         "schema" : [
            "cistr",
            "in|",
            [
               [],
               [
                  "a",
                  "B"
               ]
            ]
         ],
         "input" : "a"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "schema" : [
            "cistr",
            "in|",
            [
               [
                  "a",
                  "B"
               ],
               []
            ]
         ],
         "input" : "a",
         "name" : "in| (ok + nok)"
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "in|",
            [
               [],
               []
            ]
         ],
         "name" : "in| (nok + nok)",
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1,
         "name" : "in.op=or (no items)",
         "input" : "a",
         "schema" : [
            "cistr",
            "in",
            [],
            "in.op",
            "or"
         ]
      },
      {
         "schema" : [
            "cistr",
            "in",
            [
               [
                  "a",
                  "B"
               ],
               [
                  "a",
                  "B"
               ]
            ],
            "in.op",
            "or"
         ],
         "input" : "a",
         "name" : "in.op=or (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:or"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1,
         "name" : "in.op=or (nok + ok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "in",
            [
               [],
               [
                  "a",
                  "B"
               ]
            ],
            "in.op",
            "or"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:or"
         ],
         "schema" : [
            "cistr",
            "in",
            [
               [
                  "a",
                  "B"
               ],
               []
            ],
            "in.op",
            "or"
         ],
         "input" : "a",
         "name" : "in.op=or (ok + nok)"
      },
      {
         "schema" : [
            "cistr",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "or"
         ],
         "input" : "a",
         "name" : "in.op=or (nok + nok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:or"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:none"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "in",
            [],
            "in.op",
            "none"
         ],
         "name" : "in.op=none (empty items)"
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "none"
         ],
         "name" : "in.op=none (nok + nok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:none"
         ]
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "in",
            [
               [],
               [
                  "a",
                  "B"
               ]
            ],
            "in.op",
            "none"
         ],
         "name" : "in.op=none (nok + ok)",
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:none"
         ]
      },
      {
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:none"
         ],
         "schema" : [
            "cistr",
            "in",
            [
               [
                  "a",
                  "B"
               ],
               []
            ],
            "in.op",
            "none"
         ],
         "input" : "a",
         "name" : "in.op=none (ok + nok)"
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0,
         "errors" : 1,
         "name" : "in.op=none (ok + ok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "in",
            [
               [
                  "a",
                  "B"
               ],
               [
                  "a",
                  "B"
               ]
            ],
            "in.op",
            "none"
         ]
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "min",
            ""
         ],
         "name" : "min: a ",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:min"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:min"
         ],
         "valid" : 1,
         "name" : "min: a a",
         "input" : "a",
         "schema" : [
            "cistr",
            "min",
            "a"
         ]
      },
      {
         "schema" : [
            "cistr",
            "min",
            "a"
         ],
         "input" : "",
         "name" : "min:  a -> fail",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:min"
         ]
      },
      {
         "name" : "xmin: a ",
         "input" : "a",
         "schema" : [
            "cistr",
            "xmin",
            ""
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:xmin"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "xmin",
            "a"
         ],
         "name" : "xmin: a a -> fail",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:xmin"
         ]
      },
      {
         "input" : "",
         "schema" : [
            "cistr",
            "xmin",
            "a"
         ],
         "name" : "xmin:  a -> fail",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:xmin"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:max"
         ],
         "valid" : 0,
         "name" : "max: a  -> fail",
         "input" : "a",
         "schema" : [
            "cistr",
            "max",
            ""
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:max"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "max",
            "a"
         ],
         "name" : "max: a a"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:max"
         ],
         "schema" : [
            "cistr",
            "max",
            "a"
         ],
         "input" : "",
         "name" : "max:  a"
      },
      {
         "name" : "xmax: a  -> fail",
         "schema" : [
            "cistr",
            "xmax",
            ""
         ],
         "input" : "a",
         "tags" : [
            "type",
            "type:cistr",
            "clause:xmax"
         ],
         "valid" : 0
      },
      {
         "schema" : [
            "cistr",
            "xmax",
            "a"
         ],
         "input" : "a",
         "name" : "xmax: a a -> fail",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:xmax"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:xmax"
         ],
         "valid" : 1,
         "name" : "xmax:  a",
         "schema" : [
            "cistr",
            "xmax",
            "a"
         ],
         "input" : ""
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "between",
            [
               "",
               "Ab"
            ]
         ],
         "name" : "between: a  & Ab",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between"
         ]
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "between",
            [
               "",
               "a"
            ]
         ],
         "name" : "between: a  & a",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between"
         ],
         "valid" : 1,
         "name" : "between: a a & a",
         "input" : "a",
         "schema" : [
            "cistr",
            "between",
            [
               "a",
               "a"
            ]
         ]
      },
      {
         "schema" : [
            "cistr",
            "between",
            [
               "a",
               "Ab"
            ]
         ],
         "input" : "",
         "name" : "between:  a & Ab -> fail",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between"
         ]
      },
      {
         "name" : "xbetween: a  & Ab",
         "schema" : [
            "cistr",
            "xbetween",
            [
               "",
               "Ab"
            ]
         ],
         "input" : "a",
         "tags" : [
            "type",
            "type:cistr",
            "clause:xbetween"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "xbetween",
            [
               "",
               "a"
            ]
         ],
         "name" : "xbetween: a  & a -> fail",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:xbetween"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:xbetween"
         ],
         "valid" : 0,
         "name" : "xbetween: a a & a -> fail",
         "input" : "a",
         "schema" : [
            "cistr",
            "xbetween",
            [
               "a",
               "a"
            ]
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:xbetween"
         ],
         "valid" : 0,
         "name" : "xbetween:  a & Ab -> fail",
         "input" : "",
         "schema" : [
            "cistr",
            "xbetween",
            [
               "a",
               "Ab"
            ]
         ]
      },
      {
         "name" : "!between (nok)",
         "input" : "",
         "schema" : [
            "cistr",
            "!between",
            [
               "",
               ""
            ]
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "!between (ok)",
         "schema" : [
            "cistr",
            "!between",
            [
               "a",
               "a"
            ]
         ],
         "input" : ""
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 0,
         "name" : "between.op=not (nok)",
         "schema" : [
            "cistr",
            "between",
            [
               "",
               ""
            ],
            "between.op",
            "not"
         ],
         "input" : ""
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 1,
         "name" : "between.op=not (ok)",
         "schema" : [
            "cistr",
            "between",
            [
               "a",
               "a"
            ],
            "between.op",
            "not"
         ],
         "input" : ""
      },
      {
         "name" : "between& (no items)",
         "schema" : [
            "cistr",
            "between&",
            []
         ],
         "input" : "",
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "schema" : [
            "cistr",
            "between&",
            [
               [
                  "",
                  ""
               ],
               [
                  "",
                  ""
               ]
            ]
         ],
         "name" : "between& (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "schema" : [
            "cistr",
            "between&",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "",
                  ""
               ]
            ]
         ],
         "input" : "",
         "name" : "between& (nok + ok)"
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "errors" : 1,
         "valid" : 0,
         "name" : "between& (ok + nok)",
         "schema" : [
            "cistr",
            "between&",
            [
               [
                  "",
                  ""
               ],
               [
                  "a",
                  "a"
               ]
            ]
         ],
         "input" : ""
      },
      {
         "schema" : [
            "cistr",
            "between&",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "a",
                  "a"
               ]
            ]
         ],
         "input" : "",
         "name" : "between& (nok + nok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "name" : "between.op=and (no items)",
         "schema" : [
            "cistr",
            "between",
            [],
            "between.op",
            "and"
         ],
         "input" : "",
         "tags" : [
            "type",
            "type:cistr"
         ],
         "valid" : 1
      },
      {
         "input" : "",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "and"
         ],
         "name" : "between.op=and (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:and"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0,
         "errors" : 1,
         "name" : "between.op=and (nok + ok)",
         "input" : "",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "and"
         ]
      },
      {
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:and"
         ],
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "and"
         ],
         "input" : "",
         "name" : "between.op=and (ok + nok)"
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:and"
         ],
         "input" : "",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "and"
         ],
         "name" : "between.op=and (nok + nok)"
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "between| (no items)",
         "input" : "",
         "schema" : [
            "cistr",
            "between|",
            []
         ]
      },
      {
         "schema" : [
            "cistr",
            "between|",
            [
               [
                  "",
                  ""
               ],
               [
                  "",
                  ""
               ]
            ]
         ],
         "input" : "",
         "name" : "between| (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ]
      },
      {
         "schema" : [
            "cistr",
            "between|",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "",
                  ""
               ]
            ]
         ],
         "input" : "",
         "name" : "between| (nok + ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "between| (ok + nok)",
         "schema" : [
            "cistr",
            "between|",
            [
               [
                  "",
                  ""
               ],
               [
                  "a",
                  "a"
               ]
            ]
         ],
         "input" : ""
      },
      {
         "input" : "",
         "schema" : [
            "cistr",
            "between|",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "a",
                  "a"
               ]
            ]
         ],
         "name" : "between| (nok + nok)",
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:or"
         ],
         "schema" : [
            "cistr",
            "between",
            [],
            "between.op",
            "or"
         ],
         "input" : "",
         "name" : "between.op=or (no items)"
      },
      {
         "name" : "between.op=or (ok)",
         "input" : "",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1,
         "name" : "between.op=or (nok + ok)",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "or"
         ],
         "input" : ""
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1,
         "name" : "between.op=or (ok + nok)",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "or"
         ],
         "input" : ""
      },
      {
         "name" : "between.op=or (nok + nok)",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "or"
         ],
         "input" : "",
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:or"
         ],
         "errors" : 1,
         "valid" : 0
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 1,
         "name" : "between.op=none (empty items)",
         "input" : "",
         "schema" : [
            "cistr",
            "between",
            [],
            "between.op",
            "none"
         ]
      },
      {
         "name" : "between.op=none (nok + nok)",
         "input" : "",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:none"
         ],
         "errors" : 1,
         "valid" : 0,
         "name" : "between.op=none (nok + ok)",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "a",
                  "a"
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "none"
         ],
         "input" : ""
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:none"
         ],
         "input" : "",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "a",
                  "a"
               ]
            ],
            "between.op",
            "none"
         ],
         "name" : "between.op=none (ok + nok)"
      },
      {
         "input" : "",
         "schema" : [
            "cistr",
            "between",
            [
               [
                  "",
                  ""
               ],
               [
                  "",
                  ""
               ]
            ],
            "between.op",
            "none"
         ],
         "name" : "between.op=none (ok + ok)",
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:between",
            "op",
            "op:none"
         ]
      },
      {
         "name" : "len (ok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "len",
            1
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:len"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:len"
         ],
         "valid" : 0,
         "name" : "len (nok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "len",
            3
         ]
      },
      {
         "input" : "a",
         "schema" : [
            "cistr",
            "min_len",
            1
         ],
         "name" : "min_len (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:min_len"
         ]
      },
      {
         "name" : "min_len (nok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "min_len",
            3
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:min_len"
         ],
         "valid" : 0
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:max_len"
         ],
         "valid" : 1,
         "name" : "max_len (ok)",
         "schema" : [
            "cistr",
            "min_len",
            1
         ],
         "input" : "a"
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:max_len"
         ],
         "valid" : 0,
         "name" : "max_len (nok)",
         "schema" : [
            "cistr",
            "max_len",
            1
         ],
         "input" : "abc"
      },
      {
         "name" : "len_between (ok)",
         "input" : "a",
         "schema" : [
            "cistr",
            "len_between",
            [
               1,
               3
            ]
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:len_between"
         ],
         "valid" : 1
      },
      {
         "schema" : [
            "cistr",
            "len_between",
            [
               1,
               1
            ]
         ],
         "input" : "abc",
         "name" : "len_between (nok)",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:len_between"
         ]
      },
      {
         "name" : "each_index (ok)",
         "input" : "abc",
         "schema" : [
            "cistr",
            "each_index",
            [
               "int",
               "max",
               2
            ]
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:each_index"
         ],
         "valid" : 1
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:each_index"
         ],
         "input" : "abc",
         "schema" : [
            "cistr",
            "each_index",
            [
               "int",
               "xmax",
               2
            ]
         ],
         "name" : "each_index (nok)"
      },
      {
         "name" : "each_elem (ok)",
         "schema" : [
            "cistr",
            "each_elem",
            "cistr"
         ],
         "input" : "abc",
         "tags" : [
            "type",
            "type:cistr",
            "clause:each_elem"
         ],
         "valid" : 1
      },
      {
         "input" : "abc",
         "schema" : [
            "cistr",
            "each_elem",
            "float"
         ],
         "name" : "each_elem (nok)",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:each_elem"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:check_each_index"
         ],
         "valid_inputs" : [
            "",
            "a",
            "aa",
            "aaa"
         ],
         "name" : "check_each_index",
         "invalid_inputs" : [
            "aaaa"
         ],
         "schema" : [
            "cistr",
            "check_each_index",
            "$_ <= 2"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:check_each_elem"
         ],
         "valid_inputs" : [
            [],
            [
               "a",
               "A"
            ]
         ],
         "name" : "check_each_elem",
         "invalid_inputs" : [
            [
               "a",
               "b"
            ]
         ],
         "schema" : [
            "cistr",
            "check_each_elem",
            "$_ eq \"a\""
         ]
      },
      {
         "name" : "uniq=1",
         "schema" : [
            "cistr",
            "uniq",
            1
         ],
         "invalid_inputs" : [
            "Aa"
         ],
         "valid_inputs" : [
            "",
            "a",
            "ab"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:uniq"
         ]
      },
      {
         "valid_inputs" : [
            "Aa"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:uniq"
         ],
         "invalid_inputs" : [
            "",
            "a",
            "ab"
         ],
         "schema" : [
            "cistr",
            "uniq",
            0
         ],
         "name" : "uniq=0"
      },
      {
         "valid_inputs" : [
            "Aa"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:uniq",
            "op",
            "op:not",
            "opshortcut"
         ],
         "name" : "!uniq=1",
         "schema" : [
            "cistr",
            "!uniq",
            1
         ],
         "invalid_inputs" : [
            "",
            "a",
            "ab"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:exists"
         ],
         "valid_inputs" : [
            "a",
            "ba",
            "bA"
         ],
         "invalid_inputs" : [
            "",
            "bc"
         ],
         "schema" : [
            "str",
            "is",
            "a"
         ],
         "name" : "exists"
      },
      {
         "name" : "has",
         "schema" : [
            "cistr",
            "has",
            "a"
         ],
         "invalid_inputs" : [
            "",
            "c"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:has"
         ],
         "valid_inputs" : [
            "abc",
            "Ac"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:has",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid_inputs" : [
            "",
            "c"
         ],
         "name" : "has + op.not",
         "schema" : [
            "cistr",
            "!has",
            "a"
         ],
         "invalid_inputs" : [
            "abc",
            "Ac"
         ]
      },
      {
         "invalid_inputs" : [
            "",
            "c"
         ],
         "schema" : [
            "cistr",
            "has|",
            [
               "a",
               "b"
            ]
         ],
         "name" : "has + op.or",
         "valid_inputs" : [
            "abc",
            "Ac"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:has",
            "op",
            "op:or",
            "opshortcut"
         ]
      },
      {
         "invalid_inputs" : [
            "Ac",
            "",
            "c"
         ],
         "schema" : [
            "cistr",
            "has&",
            [
               "a",
               "b"
            ]
         ],
         "name" : "has + op.and",
         "valid_inputs" : [
            "abc"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:has",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "prop:len"
         ],
         "valid_inputs" : [
            "aa"
         ],
         "name" : "prop:len",
         "invalid_inputs" : [
            "",
            "a"
         ],
         "schema" : [
            "cistr",
            "prop",
            [
               "len",
               [
                  "int",
                  "is",
                  2
               ]
            ]
         ]
      },
      {
         "name" : "prop:indices",
         "invalid_inputs" : [
            "",
            "a",
            "aa"
         ],
         "schema" : [
            "cistr",
            "prop",
            [
               "indices",
               [
                  "array",
                  "has",
                  2
               ]
            ]
         ],
         "valid_inputs" : [
            "aaa"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "prop:indices"
         ]
      },
      {
         "invalid_inputs" : [
            "",
            "b"
         ],
         "schema" : [
            "cistr",
            "prop",
            [
               "elems",
               [
                  "array",
                  "has",
                  "a"
               ]
            ]
         ],
         "name" : "prop:elems",
         "tags" : [
            "type",
            "type:cistr",
            "prop:elems"
         ],
         "valid_inputs" : [
            "Ab"
         ]
      },
      {
         "name" : "encoding: (ok)",
         "schema" : [
            "cistr",
            "encoding",
            "utf8"
         ],
         "input" : "a",
         "tags" : [
            "type",
            "type:cistr",
            "clause:encoding"
         ],
         "valid" : 1
      },
      {
         "name" : "encoding: (dies, unknown encoding)",
         "schema" : [
            "cistr",
            "encoding",
            "foo"
         ],
         "dies" : 1,
         "input" : "a",
         "tags" : [
            "type",
            "type:cistr",
            "clause:encoding"
         ]
      },
      {
         "schema" : [
            "cistr",
            "match",
            "[abc]"
         ],
         "input" : "A",
         "name" : "match: (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:match"
         ]
      },
      {
         "name" : "match: (nok)",
         "input" : "z",
         "schema" : [
            "cistr",
            "match",
            "[abc]"
         ],
         "tags" : [
            "type",
            "type:cistr",
            "clause:match"
         ],
         "valid" : 0
      },
      {
         "dies" : 1,
         "schema" : [
            "cistr",
            "match",
            "("
         ],
         "input" : "a",
         "name" : "match: (dies, invalid regex)",
         "tags" : [
            "type",
            "type:cistr",
            "clause:match"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is_re"
         ],
         "input" : "a",
         "schema" : [
            "cistr",
            "is_re",
            1
         ],
         "name" : "is_re: 1 (ok)"
      },
      {
         "schema" : [
            "cistr",
            "is_re",
            1
         ],
         "input" : "a(",
         "name" : "is_re: 1 (nok)",
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is_re"
         ]
      },
      {
         "tags" : [
            "type",
            "type:cistr",
            "clause:is_re"
         ],
         "valid" : 1,
         "name" : "is_re: 0 (ok)",
         "schema" : [
            "cistr",
            "is_re",
            0
         ],
         "input" : "a("
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:cistr",
            "clause:is_re"
         ],
         "schema" : [
            "cistr",
            "is_re",
            0
         ],
         "input" : "a",
         "name" : "is_re: 0 (nok)"
      }
   ]
}
