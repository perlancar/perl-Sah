{
   "tests" : [
      {
         "input" : -1.1,
         "name" : "num0001: type check: must accept -1.1",
         "schema" : "num",
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 1
      },
      {
         "input" : -1,
         "name" : "num0002: type check: must accept -1",
         "schema" : "num",
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 1
      },
      {
         "input" : 0,
         "name" : "num0003: type check: must accept 0",
         "schema" : "num",
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 1
      },
      {
         "input" : 1,
         "name" : "num0004: type check: must accept 1",
         "schema" : "num",
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0005: type check: must accept 1.1",
         "schema" : "num",
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "name" : "num0006: type check: must reject a",
         "schema" : "num",
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 0
      },
      {
         "input" : [],
         "name" : "num0007: type check: must reject []",
         "schema" : "num",
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 0
      },
      {
         "input" : {},
         "name" : "num0008: type check: must reject {}",
         "schema" : "num",
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "num0009: must accept undefined value",
         "schema" : "num",
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0010: defhash_v",
         "schema" : [
            "num",
            "defhash_v",
            1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:defhash_v"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0011: v",
         "schema" : [
            "num",
            "v",
            1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:v"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0012: c",
         "schema" : [
            "num",
            "c.foo.bar",
            1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:c"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0013: default_lang",
         "schema" : [
            "num",
            "default_lang",
            "id_ID"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:default_lang"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0014: name",
         "schema" : [
            "num",
            "name",
            "some name"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:name"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0015: summary",
         "schema" : [
            "num",
            "summary",
            "some summary"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:summary"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0016: description",
         "schema" : [
            "num",
            "description",
            "some description and `markdown`"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:description"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0017: tags",
         "schema" : [
            "num",
            "tags",
            [
               "some",
               "tags"
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:tags"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0018: req=0 must accept undefined value",
         "schema" : [
            "num",
            "req",
            0
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:req"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0019: req=1 must reject undefined value",
         "schema" : [
            "num",
            "req",
            1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:req"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0020: forbidden=0 must accept defined value",
         "schema" : [
            "num",
            "forbidden",
            0
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:forbidden"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0021: forbidden=1 must reject defined value",
         "schema" : [
            "num",
            "forbidden",
            1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:forbidden"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "num0022: default: must accept valid default 1.1",
         "schema" : [
            "num*",
            "default",
            1.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:default"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0023: default: must reject invalid default []",
         "schema" : [
            "num*",
            "default",
            []
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:default"
         ],
         "valid" : 0
      },
      {
         "dies" : 1,
         "input" : 1.1,
         "name" : "num0024: clause (dies, unknown clause)",
         "schema" : [
            "num*",
            "clause",
            [
               "foo",
               1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clause"
         ]
      },
      {
         "input" : 1.1,
         "name" : "num0025: clause (ok)",
         "schema" : [
            "num*",
            "clause",
            [
               "min",
               1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clause"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0026: clause (ok) + clause nok = nok",
         "schema" : [
            "num*",
            "clause",
            [
               "min",
               1
            ],
            "max",
            1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clause"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0027: clause (nok)",
         "schema" : [
            "num*",
            "clause",
            [
               "min",
               2
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clause"
         ],
         "valid" : 0
      },
      {
         "dies" : 1,
         "input" : 1.1,
         "name" : "num0028: clset (dies, unknown clause)",
         "schema" : [
            "num*",
            "clset",
            {
               "foo" : 1
            }
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clset"
         ]
      },
      {
         "dies" : 1,
         "input" : 1.1,
         "name" : "num0029: clset (dies, unknown attr)",
         "schema" : [
            "num*",
            "clset",
            {
               "min_len" : 1,
               "min_len.foo" : 1
            }
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clset"
         ]
      },
      {
         "input" : 1.1,
         "name" : "num0030: clset (empty = ok)",
         "schema" : [
            "num*",
            "clset",
            {}
         ],
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0031: clset (ignored clause/attr = ok)",
         "schema" : [
            "num*",
            "clset",
            {
               "_foo" : 1,
               "foo._bar" : 2
            }
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clset"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0032: clset (ok + ok = ok)",
         "schema" : [
            "num*",
            "clset",
            {
               "max" : 1.1,
               "min" : 1
            }
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clset"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0033: clset (ok) + clause nok = nok",
         "schema" : [
            "num*",
            "clset",
            {
               "min" : 1
            },
            "max",
            1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0034: clset (ok + nok = nok)",
         "schema" : [
            "num*",
            "clset",
            {
               "max" : 1,
               "min" : 1
            }
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0035: clset (nok + ok = nok)",
         "schema" : [
            "num*",
            "clset",
            {
               "max" : 1.1,
               "min" : 2
            }
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0036: clset (nok + nok = nok)",
         "schema" : [
            "num*",
            "clset",
            {
               "max" : 1,
               "min" : 2
            }
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:clset"
         ],
         "valid" : 0
      },
      {
         "input" : null,
         "name" : "num0037: ok",
         "schema" : [
            "num",
            {
               "ok" : 1
            }
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:ok"
         ],
         "valid" : 1
      },
      {
         "input" : null,
         "name" : "num0038: ok + op not (nok)",
         "schema" : [
            "num",
            {
               "!ok" : 1
            }
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:ok",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 0.1,
         "name" : "num0039: .err_level=error (clause=min, ok)",
         "schema" : [
            "num",
            "min",
            0
         ],
         "tags" : [
            "type",
            "type:num",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1
      },
      {
         "input" : -0.1,
         "name" : "num0040: .err_level=error (clause=min, nok)",
         "schema" : [
            "num",
            "min",
            0
         ],
         "tags" : [
            "type",
            "type:num",
            "attr",
            "attr:err_level"
         ],
         "valid" : 0
      },
      {
         "input" : 0.1,
         "name" : "num0041: .err_level=warn (clause=min, ok)",
         "schema" : [
            "num",
            "min",
            0,
            "min.err_level",
            "warn"
         ],
         "tags" : [
            "type",
            "type:num",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1
      },
      {
         "input" : -0.1,
         "name" : "num0042: .err_level=warn (clause=min, nok)",
         "schema" : [
            "num*",
            "min",
            0,
            "min.err_level",
            "warn"
         ],
         "tags" : [
            "type",
            "type:num",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1,
         "warnings" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0043: is: must accept same value",
         "schema" : [
            "num",
            "is",
            1.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0044: is: must reject different value",
         "schema" : [
            "num",
            "is",
            1.2
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0045: !is (nok)",
         "schema" : [
            "num",
            "!is",
            1.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0046: !is (ok)",
         "schema" : [
            "num",
            "!is",
            1.2
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0047: is.op=not (nok)",
         "schema" : [
            "num",
            "is",
            1.1,
            "is.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0048: is.op=not (ok)",
         "schema" : [
            "num",
            "is",
            1.2,
            "is.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0049: is& (no items)",
         "schema" : [
            "num",
            "is&",
            []
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0050: is& (ok)",
         "schema" : [
            "num",
            "is&",
            [
               1.1,
               1.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0051: is& (nok + ok)",
         "schema" : [
            "num",
            "is&",
            [
               1.2,
               1.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0052: is& (ok + nok)",
         "schema" : [
            "num",
            "is&",
            [
               1.1,
               1.2
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0053: is& (nok + nok)",
         "schema" : [
            "num",
            "is&",
            [
               1.2,
               1.2
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0054: is.op=and (no items)",
         "schema" : [
            "num",
            "is",
            [],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0055: is.op=and (ok)",
         "schema" : [
            "num",
            "is",
            [
               1.1,
               1.1
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0056: is.op=and (nok + ok)",
         "schema" : [
            "num",
            "is",
            [
               1.2,
               1.1
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0057: is.op=and (ok + nok)",
         "schema" : [
            "num",
            "is",
            [
               1.1,
               1.2
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0058: is.op=and (nok + nok)",
         "schema" : [
            "num",
            "is",
            [
               1.2,
               1.2
            ],
            "is.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0059: is| (no items)",
         "schema" : [
            "num",
            "is|",
            []
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0060: is| (ok)",
         "schema" : [
            "num",
            "is|",
            [
               1.1,
               1.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0061: is| (nok + ok)",
         "schema" : [
            "num",
            "is|",
            [
               1.2,
               1.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0062: is| (ok + nok)",
         "schema" : [
            "num",
            "is|",
            [
               1.1,
               1.2
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0063: is| (nok + nok)",
         "schema" : [
            "num",
            "is|",
            [
               1.2,
               1.2
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0064: is.op=or (no items)",
         "schema" : [
            "num",
            "is",
            [],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0065: is.op=or (ok)",
         "schema" : [
            "num",
            "is",
            [
               1.1,
               1.1
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0066: is.op=or (nok + ok)",
         "schema" : [
            "num",
            "is",
            [
               1.2,
               1.1
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0067: is.op=or (ok + nok)",
         "schema" : [
            "num",
            "is",
            [
               1.1,
               1.2
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0068: is.op=or (nok + nok)",
         "schema" : [
            "num",
            "is",
            [
               1.2,
               1.2
            ],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0069: is.op=none (empty items)",
         "schema" : [
            "num",
            "is",
            [],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0070: is.op=none (nok + nok)",
         "schema" : [
            "num",
            "is",
            [
               1.2,
               1.2
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0071: is.op=none (nok + ok)",
         "schema" : [
            "num",
            "is",
            [
               1.2,
               1.1
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0072: is.op=none (ok + nok)",
         "schema" : [
            "num",
            "is",
            [
               1.1,
               1.2
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0073: is.op=none (ok + ok)",
         "schema" : [
            "num",
            "is",
            [
               1.1,
               1.1
            ],
            "is.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:is",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0074: in: must accept valid choices",
         "schema" : [
            "num",
            "in",
            [
               1.1,
               1.2
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0075: in: must reject empty choices",
         "schema" : [
            "num",
            "in",
            []
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0076: !in (nok)",
         "schema" : [
            "num",
            "!in",
            [
               1.1,
               1.2
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0077: !in (ok)",
         "schema" : [
            "num",
            "!in",
            []
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0078: in.op=not (nok)",
         "schema" : [
            "num",
            "in",
            [
               1.1,
               1.2
            ],
            "in.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0079: in.op=not (ok)",
         "schema" : [
            "num",
            "in",
            [],
            "in.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0080: in& (no items)",
         "schema" : [
            "num",
            "in&",
            []
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0081: in& (ok)",
         "schema" : [
            "num",
            "in&",
            [
               [
                  1.1,
                  1.2
               ],
               [
                  1.1,
                  1.2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0082: in& (nok + ok)",
         "schema" : [
            "num",
            "in&",
            [
               [],
               [
                  1.1,
                  1.2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0083: in& (ok + nok)",
         "schema" : [
            "num",
            "in&",
            [
               [
                  1.1,
                  1.2
               ],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0084: in& (nok + nok)",
         "schema" : [
            "num",
            "in&",
            [
               [],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0085: in.op=and (no items)",
         "schema" : [
            "num",
            "in",
            [],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0086: in.op=and (ok)",
         "schema" : [
            "num",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0087: in.op=and (nok + ok)",
         "schema" : [
            "num",
            "in",
            [
               [],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0088: in.op=and (ok + nok)",
         "schema" : [
            "num",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               []
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0089: in.op=and (nok + nok)",
         "schema" : [
            "num",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0090: in| (no items)",
         "schema" : [
            "num",
            "in|",
            []
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0091: in| (ok)",
         "schema" : [
            "num",
            "in|",
            [
               [
                  1.1,
                  1.2
               ],
               [
                  1.1,
                  1.2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0092: in| (nok + ok)",
         "schema" : [
            "num",
            "in|",
            [
               [],
               [
                  1.1,
                  1.2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0093: in| (ok + nok)",
         "schema" : [
            "num",
            "in|",
            [
               [
                  1.1,
                  1.2
               ],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0094: in| (nok + nok)",
         "schema" : [
            "num",
            "in|",
            [
               [],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0095: in.op=or (no items)",
         "schema" : [
            "num",
            "in",
            [],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0096: in.op=or (ok)",
         "schema" : [
            "num",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0097: in.op=or (nok + ok)",
         "schema" : [
            "num",
            "in",
            [
               [],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0098: in.op=or (ok + nok)",
         "schema" : [
            "num",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               []
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0099: in.op=or (nok + nok)",
         "schema" : [
            "num",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "name" : "num0100: in.op=none (empty items)",
         "schema" : [
            "num",
            "in",
            [],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "name" : "num0101: in.op=none (nok + nok)",
         "schema" : [
            "num",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0102: in.op=none (nok + ok)",
         "schema" : [
            "num",
            "in",
            [
               [],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0103: in.op=none (ok + nok)",
         "schema" : [
            "num",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               []
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : 1.1,
         "name" : "num0104: in.op=none (ok + ok)",
         "schema" : [
            "num",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "input" : 2.1,
         "name" : "num0105: min: 2.1 -3.1",
         "schema" : [
            "num",
            "min",
            -3.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:min"
         ],
         "valid" : 1
      },
      {
         "input" : 2.1,
         "name" : "num0106: min: 2.1 2.1",
         "schema" : [
            "num",
            "min",
            2.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:min"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0107: min: -3.1 2.1 -> fail",
         "schema" : [
            "num",
            "min",
            2.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:min"
         ],
         "valid" : 0
      },
      {
         "input" : 2.1,
         "name" : "num0108: xmin: 2.1 -3.1",
         "schema" : [
            "num",
            "xmin",
            -3.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:xmin"
         ],
         "valid" : 1
      },
      {
         "input" : 2.1,
         "name" : "num0109: xmin: 2.1 2.1 -> fail",
         "schema" : [
            "num",
            "xmin",
            2.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:xmin"
         ],
         "valid" : 0
      },
      {
         "input" : -3.1,
         "name" : "num0110: xmin: -3.1 2.1 -> fail",
         "schema" : [
            "num",
            "xmin",
            2.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:xmin"
         ],
         "valid" : 0
      },
      {
         "input" : 2.1,
         "name" : "num0111: max: 2.1 -3.1 -> fail",
         "schema" : [
            "num",
            "max",
            -3.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:max"
         ],
         "valid" : 0
      },
      {
         "input" : 2.1,
         "name" : "num0112: max: 2.1 2.1",
         "schema" : [
            "num",
            "max",
            2.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:max"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0113: max: -3.1 2.1",
         "schema" : [
            "num",
            "max",
            2.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:max"
         ],
         "valid" : 1
      },
      {
         "input" : 2.1,
         "name" : "num0114: xmax: 2.1 -3.1 -> fail",
         "schema" : [
            "num",
            "xmax",
            -3.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:xmax"
         ],
         "valid" : 0
      },
      {
         "input" : 2.1,
         "name" : "num0115: xmax: 2.1 2.1 -> fail",
         "schema" : [
            "num",
            "xmax",
            2.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:xmax"
         ],
         "valid" : 0
      },
      {
         "input" : -3.1,
         "name" : "num0116: xmax: -3.1 2.1",
         "schema" : [
            "num",
            "xmax",
            2.1
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:xmax"
         ],
         "valid" : 1
      },
      {
         "input" : 2.1,
         "name" : "num0117: between: 2.1 -3.1 & 4.1",
         "schema" : [
            "num",
            "between",
            [
               -3.1,
               4.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : 2.1,
         "name" : "num0118: between: 2.1 -3.1 & 2.1",
         "schema" : [
            "num",
            "between",
            [
               -3.1,
               2.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : 2.1,
         "name" : "num0119: between: 2.1 2.1 & 2.1",
         "schema" : [
            "num",
            "between",
            [
               2.1,
               2.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0120: between: -3.1 2.1 & 4.1 -> fail",
         "schema" : [
            "num",
            "between",
            [
               2.1,
               4.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between"
         ],
         "valid" : 0
      },
      {
         "input" : 2.1,
         "name" : "num0121: xbetween: 2.1 -3.1 & 4.1",
         "schema" : [
            "num",
            "xbetween",
            [
               -3.1,
               4.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:xbetween"
         ],
         "valid" : 1
      },
      {
         "input" : 2.1,
         "name" : "num0122: xbetween: 2.1 -3.1 & 2.1 -> fail",
         "schema" : [
            "num",
            "xbetween",
            [
               -3.1,
               2.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : 2.1,
         "name" : "num0123: xbetween: 2.1 2.1 & 2.1 -> fail",
         "schema" : [
            "num",
            "xbetween",
            [
               2.1,
               2.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : -3.1,
         "name" : "num0124: xbetween: -3.1 2.1 & 4.1 -> fail",
         "schema" : [
            "num",
            "xbetween",
            [
               2.1,
               4.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:xbetween"
         ],
         "valid" : 0
      },
      {
         "input" : -3.1,
         "name" : "num0125: !between (nok)",
         "schema" : [
            "num",
            "!between",
            [
               -3.1,
               -3.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : -3.1,
         "name" : "num0126: !between (ok)",
         "schema" : [
            "num",
            "!between",
            [
               2.1,
               2.1
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0127: between.op=not (nok)",
         "schema" : [
            "num",
            "between",
            [
               -3.1,
               -3.1
            ],
            "between.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : -3.1,
         "name" : "num0128: between.op=not (ok)",
         "schema" : [
            "num",
            "between",
            [
               2.1,
               2.1
            ],
            "between.op",
            "not"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0129: between& (no items)",
         "schema" : [
            "num",
            "between&",
            []
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0130: between& (ok)",
         "schema" : [
            "num",
            "between&",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0131: between& (nok + ok)",
         "schema" : [
            "num",
            "between&",
            [
               [
                  2.1,
                  2.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0132: between& (ok + nok)",
         "schema" : [
            "num",
            "between&",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  2.1,
                  2.1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0133: between& (nok + nok)",
         "schema" : [
            "num",
            "between&",
            [
               [
                  2.1,
                  2.1
               ],
               [
                  2.1,
                  2.1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : -3.1,
         "name" : "num0134: between.op=and (no items)",
         "schema" : [
            "num",
            "between",
            [],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0135: between.op=and (ok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0136: between.op=and (nok + ok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  2.1,
                  2.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0137: between.op=and (ok + nok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  2.1,
                  2.1
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0138: between.op=and (nok + nok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  2.1,
                  2.1
               ],
               [
                  2.1,
                  2.1
               ]
            ],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0
      },
      {
         "input" : -3.1,
         "name" : "num0139: between| (no items)",
         "schema" : [
            "num",
            "between|",
            []
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0140: between| (ok)",
         "schema" : [
            "num",
            "between|",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0141: between| (nok + ok)",
         "schema" : [
            "num",
            "between|",
            [
               [
                  2.1,
                  2.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0142: between| (ok + nok)",
         "schema" : [
            "num",
            "between|",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  2.1,
                  2.1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0143: between| (nok + nok)",
         "schema" : [
            "num",
            "between|",
            [
               [
                  2.1,
                  2.1
               ],
               [
                  2.1,
                  2.1
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0
      },
      {
         "input" : -3.1,
         "name" : "num0144: between.op=or (no items)",
         "schema" : [
            "num",
            "between",
            [],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0145: between.op=or (ok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0146: between.op=or (nok + ok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  2.1,
                  2.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0147: between.op=or (ok + nok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  2.1,
                  2.1
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0148: between.op=or (nok + nok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  2.1,
                  2.1
               ],
               [
                  2.1,
                  2.1
               ]
            ],
            "between.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 0
      },
      {
         "input" : -3.1,
         "name" : "num0149: between.op=none (empty items)",
         "schema" : [
            "num",
            "between",
            [],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "name" : "num0150: between.op=none (nok + nok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  2.1,
                  2.1
               ],
               [
                  2.1,
                  2.1
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0151: between.op=none (nok + ok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  2.1,
                  2.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0152: between.op=none (ok + nok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  2.1,
                  2.1
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      },
      {
         "errors" : 1,
         "input" : -3.1,
         "name" : "num0153: between.op=none (ok + ok)",
         "schema" : [
            "num",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:num",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0
      }
   ],
   "version" : "v0.9.41 (generated by devscripts/gen-type-spectest on Sun Jun 12 14:49:05 2016)"
}
