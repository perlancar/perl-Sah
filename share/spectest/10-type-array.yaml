tests: 
  - 
    input: []

    name: "type check: must accept []"
    schema: array
    valid: 1
  - 
    input: 
      - 1
      - a
    name: "type check: must accept - 1\n- a"
    schema: array
    valid: 1
  - 
    input: 
      - []

    name: "type check: must accept - []"
    schema: array
    valid: 1
  - 
    input: 1
    name: "type check: must reject 1"
    schema: array
    valid: 0
  - 
    input: a
    name: "type check: must reject a"
    schema: array
    valid: 0
  - 
    input: {}

    name: "type check: must reject {}"
    schema: array
    valid: 0
  - 
    input: ~
    name: must accept undefined value
    schema: array
    valid: 1
  - 
    input: ~
    name: req=0 must accept undefined value
    schema: 
      - array
      - req
      - 0
    valid: 1
  - 
    input: ~
    name: req=1 must reject undefined value
    schema: 
      - array
      - req
      - 1
    valid: 0
  - 
    input: &1 []

    name: forbidden=0 must accept defined value
    schema: 
      - array
      - forbidden
      - 0
    valid: 1
  - 
    input: *1
    name: forbidden=1 must reject defined value
    schema: 
      - array
      - forbidden
      - 1
    valid: 0
  - 
    input: ~
    name: "default: must accept valid default []"
    schema: 
      - array*
      - default
      - []

    valid: 1
  - 
    input: ~
    name: "default: must reject invalid default a"
    schema: 
      - array*
      - default
      - a
    valid: 0
  - 
    input: &3 []

    name: .err_level=error (clause=is, ok)
    schema: 
      - array
      - is
      - &2 []

    valid: 1
  - 
    input: &4 
      - 0
    name: .err_level=error (clause=is, nok)
    schema: 
      - array
      - is
      - *2
    valid: 0
  - 
    input: *3
    name: .err_level=warn (clause=is, ok)
    schema: 
      - array
      - is
      - *2
      - is.err_level
      - warn
    valid: 1
  - 
    input: *4
    name: .err_level=warn (clause=is, nok)
    schema: 
      - array*
      - is
      - *2
      - is.err_level
      - warn
    valid: 1
    warnings: 1
  - 
    input: &5 
      - 1
    name: "is: must accept same value"
    schema: 
      - array
      - is
      - *5
    valid: 1
  - 
    input: *5
    name: "is: must reject different value"
    schema: 
      - array
      - is
      - &6 
        - 2
    valid: 0
  - 
    input: *5
    name: "!is: (nok)"
    schema: 
      - array
      - "!is"
      - *5
    valid: 0
  - 
    input: *5
    name: "!is: (ok)"
    schema: 
      - array
      - "!is"
      - *6
    valid: 1
  - 
    input: *5
    name: "is&: (no items)"
    schema: 
      - array
      - is&
      - []

    valid: 1
  - 
    input: *5
    name: "is&: (ok)"
    schema: 
      - array
      - is&
      - &7 
        - *5
        - *5
    valid: 1
  - 
    errors: 1
    input: *5
    name: "is&: (nok + ok)"
    schema: 
      - array
      - is&
      - 
        - *6
        - *5
    valid: 0
  - 
    errors: 1
    input: *5
    name: "is&: (ok + nok)"
    schema: 
      - array
      - is&
      - 
        - *5
        - *6
    valid: 0
  - 
    errors: 2
    input: *5
    name: "is&: (nok + nok)"
    schema: 
      - array
      - is&
      - 
        - *6
        - *6
    valid: 0
  - 
    input: *5
    name: "is|: (no items)"
    schema: 
      - array
      - is|
      - []

    valid: 1
  - 
    input: *5
    name: "is|: (ok)"
    schema: 
      - array
      - is|
      - *7
    valid: 1
  - 
    input: *5
    name: "is|: (nok + ok)"
    schema: 
      - array
      - is|
      - 
        - *6
        - *5
    valid: 1
  - 
    input: *5
    name: "is|: (ok + nok)"
    schema: 
      - array
      - is|
      - 
        - *5
        - *6
    valid: 1
  - 
    errors: 1
    input: *5
    name: "is|: (nok + nok)"
    schema: 
      - array
      - is|
      - 
        - *6
        - *6
    valid: 0
  - 
    input: *5
    name: is.min_ok (nok + nok)
    schema: 
      - array
      - is
      - 
        - *6
        - *6
      - is.is_multi
      - 1
      - is.min_ok
      - 1
    valid: 0
  - 
    input: *5
    name: is.min_ok (ok + nok)
    schema: 
      - array
      - is
      - 
        - *5
        - *6
      - is.is_multi
      - 1
      - is.max_ok
      - 1
    valid: 1
  - 
    input: *5
    name: is.min_ok (ok + ok)
    schema: 
      - array
      - is
      - 
        - *5
        - *5
      - is.is_multi
      - 1
      - is.min_ok
      - 1
    valid: 1
  - 
    input: *5
    name: is.max_ok (nok + nok)
    schema: 
      - array
      - is
      - 
        - *6
        - *6
      - is.is_multi
      - 1
      - is.max_ok
      - 1
    valid: 1
  - 
    input: *5
    name: is.max_ok (ok + nok)
    schema: 
      - array
      - is
      - 
        - *5
        - *6
      - is.is_multi
      - 1
      - is.max_ok
      - 1
    valid: 1
  - 
    input: *5
    name: is.max_ok (ok + ok)
    schema: 
      - array
      - is
      - 
        - *5
        - *5
      - is.is_multi
      - 1
      - is.max_ok
      - 1
    valid: 0
  - 
    input: *5
    name: is.min_nok (nok + nok)
    schema: 
      - array
      - is
      - 
        - *6
        - *6
      - is.is_multi
      - 1
      - is.min_nok
      - 1
    valid: 1
  - 
    input: *5
    name: is.min_nok (ok + nok)
    schema: 
      - array
      - is
      - 
        - *5
        - *6
      - is.is_multi
      - 1
      - is.min_nok
      - 1
    valid: 1
  - 
    input: *5
    name: is.min_nok (ok + ok)
    schema: 
      - array
      - is
      - 
        - *5
        - *5
      - is.is_multi
      - 1
      - is.min_nok
      - 1
    valid: 0
  - 
    input: *5
    name: is.max_nok (nok + nok)
    schema: 
      - array
      - is
      - 
        - *6
        - *6
      - is.is_multi
      - 1
      - is.max_nok
      - 1
    valid: 0
  - 
    input: *5
    name: is.max_nok (ok + nok)
    schema: 
      - array
      - is
      - 
        - *5
        - *6
      - is.is_multi
      - 1
      - is.max_nok
      - 1
    valid: 1
  - 
    input: *5
    name: is.max_nok (ok + ok)
    schema: 
      - array
      - is
      - 
        - *5
        - *5
      - is.is_multi
      - 1
      - is.max_nok
      - 1
    valid: 1
  - 
    input: *5
    name: "in: must accept valid choices"
    schema: 
      - array
      - in
      - &8 
        - *5
        - *6
    valid: 1
  - 
    input: *5
    name: "in: must reject empty choices"
    schema: 
      - array
      - in
      - []

    valid: 0
  - 
    input: *5
    name: "!in: (nok)"
    schema: 
      - array
      - "!in"
      - *8
    valid: 0
  - 
    input: *5
    name: "!in: (ok)"
    schema: 
      - array
      - "!in"
      - &9 []

    valid: 1
  - 
    input: *5
    name: "in&: (no items)"
    schema: 
      - array
      - in&
      - []

    valid: 1
  - 
    input: *5
    name: "in&: (ok)"
    schema: 
      - array
      - in&
      - &10 
        - *8
        - &12 
          - 
            - 1
          - 
            - 2
    valid: 1
  - 
    errors: 1
    input: *5
    name: "in&: (nok + ok)"
    schema: 
      - array
      - in&
      - 
        - *9
        - *8
    valid: 0
  - 
    errors: 1
    input: *5
    name: "in&: (ok + nok)"
    schema: 
      - array
      - in&
      - 
        - *8
        - *9
    valid: 0
  - 
    errors: 2
    input: *5
    name: "in&: (nok + nok)"
    schema: 
      - array
      - in&
      - 
        - *9
        - &11 []

    valid: 0
  - 
    input: *5
    name: "in|: (no items)"
    schema: 
      - array
      - in|
      - []

    valid: 1
  - 
    input: *5
    name: "in|: (ok)"
    schema: 
      - array
      - in|
      - *10
    valid: 1
  - 
    input: *5
    name: "in|: (nok + ok)"
    schema: 
      - array
      - in|
      - 
        - *9
        - *8
    valid: 1
  - 
    input: *5
    name: "in|: (ok + nok)"
    schema: 
      - array
      - in|
      - 
        - *8
        - *9
    valid: 1
  - 
    errors: 1
    input: *5
    name: "in|: (nok + nok)"
    schema: 
      - array
      - in|
      - 
        - *9
        - *11
    valid: 0
  - 
    input: *5
    name: in.min_ok (nok + nok)
    schema: 
      - array
      - in
      - 
        - *9
        - *11
      - in.is_multi
      - 1
      - in.min_ok
      - 1
    valid: 0
  - 
    input: *5
    name: in.min_ok (ok + nok)
    schema: 
      - array
      - in
      - 
        - *8
        - *11
      - in.is_multi
      - 1
      - in.max_ok
      - 1
    valid: 1
  - 
    input: *5
    name: in.min_ok (ok + ok)
    schema: 
      - array
      - in
      - 
        - *8
        - *12
      - in.is_multi
      - 1
      - in.min_ok
      - 1
    valid: 1
  - 
    input: *5
    name: in.max_ok (nok + nok)
    schema: 
      - array
      - in
      - 
        - *9
        - *11
      - in.is_multi
      - 1
      - in.max_ok
      - 1
    valid: 1
  - 
    input: *5
    name: in.max_ok (ok + nok)
    schema: 
      - array
      - in
      - 
        - *8
        - *11
      - in.is_multi
      - 1
      - in.max_ok
      - 1
    valid: 1
  - 
    input: *5
    name: in.max_ok (ok + ok)
    schema: 
      - array
      - in
      - 
        - *8
        - *12
      - in.is_multi
      - 1
      - in.max_ok
      - 1
    valid: 0
  - 
    input: *5
    name: in.min_nok (nok + nok)
    schema: 
      - array
      - in
      - 
        - *9
        - *11
      - in.is_multi
      - 1
      - in.min_nok
      - 1
    valid: 1
  - 
    input: *5
    name: in.min_nok (ok + nok)
    schema: 
      - array
      - in
      - 
        - *8
        - *11
      - in.is_multi
      - 1
      - in.min_nok
      - 1
    valid: 1
  - 
    input: *5
    name: in.min_nok (ok + ok)
    schema: 
      - array
      - in
      - 
        - *8
        - *12
      - in.is_multi
      - 1
      - in.min_nok
      - 1
    valid: 0
  - 
    input: *5
    name: in.max_nok (nok + nok)
    schema: 
      - array
      - in
      - 
        - *9
        - *11
      - in.is_multi
      - 1
      - in.max_nok
      - 1
    valid: 0
  - 
    input: *5
    name: in.max_nok (ok + nok)
    schema: 
      - array
      - in
      - 
        - *8
        - *11
      - in.is_multi
      - 1
      - in.max_nok
      - 1
    valid: 1
  - 
    input: *5
    name: in.max_nok (ok + ok)
    schema: 
      - array
      - in
      - 
        - *8
        - *12
      - in.is_multi
      - 1
      - in.max_nok
      - 1
    valid: 1
  - 
    input: &13 
      - 1
    name: len (ok)
    schema: 
      - array
      - len
      - 1
    valid: 1
  - 
    input: *13
    name: len (nok)
    schema: 
      - array
      - len
      - 2
    valid: 0
  - 
    input: *13
    name: min_len (ok)
    schema: 
      - array
      - min_len
      - 1
    valid: 1
  - 
    input: *13
    name: min_len (nok)
    schema: 
      - array
      - min_len
      - 2
    valid: 0
  - 
    input: *13
    name: max_len (ok)
    schema: 
      - array
      - min_len
      - 1
    valid: 1
  - 
    input: &14 
      - 1
      - '1.2'
    name: max_len (nok)
    schema: 
      - array
      - max_len
      - 1
    valid: 0
  - 
    input: *13
    name: len_between (ok)
    schema: 
      - array
      - len_between
      - 
        - 1
        - 2
    valid: 1
  - 
    input: *14
    name: len_between (nok)
    schema: 
      - array
      - len_between
      - 
        - 1
        - 1
    valid: 0
  - 
    input: *14
    name: each_index (ok)
    schema: 
      - array
      - each_index
      - 
        - int
        - max
        - 1
    valid: 1
  - 
    input: *14
    name: each_index (nok)
    schema: 
      - array
      - each_index
      - 
        - int
        - xmax
        - 1
    valid: 0
  - 
    input: *14
    name: each_elem (ok)
    schema: 
      - array
      - each_elem
      - float
    valid: 1
  - 
    input: *14
    name: each_elem (nok)
    schema: 
      - array
      - each_elem
      - int
    valid: 0
  - 
    input: 
      - ~
      - 1
    name: elems (nok, first elem required)
    schema: &15 
      - array
      - 
        elems: 
          - int*
          - 
            - float
            - default
            - 2
    valid: 0
  - 
    input: 
      - 1
    name: elems (ok, missing elem set to undef)
    schema: *15
    valid: 1
  - 
    input: 
      - 1
      - ~
    name: elems (ok, second elem optional)
    schema: *15
    valid: 1
  - 
    input: 
      - 1
      - '1.1'
    name: elems (ok 2)
    schema: *15
    valid: 1
  - 
    input: 
      - 1
      - '1.1'
      - ~
    name: elems (ok, extra elems ignored)
    schema: *15
    valid: 1
  - 
    input: 
      - 1
      - '1.1'
      - foo
    name: elems (ok, extra elems ignored 2)
    schema: *15
    valid: 1
  - 
    input: 
      - 1
    name: elems (ok, create_default=0)
    output: 
      - 1
    schema: &16 
      - array
      - 
        elems: 
          - int
          - 
            - int
            - default
            - 2
        elems.create_default: 0
    valid: 1
  - 
    input: 
      - 1
      - ~
    name: elems (ok 2, create_default=0)
    output: 
      - 1
      - 2
    schema: *16
    valid: 1
version: v0.9.17 (generated by devscripts/gen-type-spectest on Tue Nov 20 09:17:04 2012)
