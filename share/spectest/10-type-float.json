{
   "tests" : [
      {
         "name" : "type check: must accept -1.1",
         "schema" : "float",
         "input" : -1.1,
         "tags" : [
            "type",
            "type:float"
         ],
         "valid" : 1
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float"
         ],
         "schema" : "float",
         "input" : -1,
         "name" : "type check: must accept -1"
      },
      {
         "schema" : "float",
         "input" : 0,
         "name" : "type check: must accept 0",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float"
         ],
         "schema" : "float",
         "input" : 1,
         "name" : "type check: must accept 1"
      },
      {
         "name" : "type check: must accept 1.1",
         "input" : 1.1,
         "schema" : "float",
         "tags" : [
            "type",
            "type:float"
         ],
         "valid" : 1
      },
      {
         "input" : "a",
         "schema" : "float",
         "name" : "type check: must reject a",
         "valid" : 0,
         "tags" : [
            "type",
            "type:float"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float"
         ],
         "valid" : 0,
         "name" : "type check: must reject []",
         "input" : [],
         "schema" : "float"
      },
      {
         "tags" : [
            "type",
            "type:float"
         ],
         "valid" : 0,
         "name" : "type check: must reject {}",
         "input" : {},
         "schema" : "float"
      },
      {
         "tags" : [
            "type",
            "type:float"
         ],
         "valid" : 1,
         "name" : "must accept undefined value",
         "input" : null,
         "schema" : "float"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:defhash_v"
         ],
         "schema" : [
            "float",
            "defhash_v",
            1
         ],
         "input" : null,
         "name" : "defhash_v"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:v"
         ],
         "input" : null,
         "schema" : [
            "float",
            "v",
            1
         ],
         "name" : "v"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:c"
         ],
         "schema" : [
            "float",
            "c.foo.bar",
            1
         ],
         "input" : null,
         "name" : "c"
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:default_lang"
         ],
         "valid" : 1,
         "name" : "default_lang",
         "input" : null,
         "schema" : [
            "float",
            "default_lang",
            "id_ID"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:name"
         ],
         "input" : null,
         "schema" : [
            "float",
            "name",
            "some name"
         ],
         "name" : "name"
      },
      {
         "schema" : [
            "float",
            "summary",
            "some summary"
         ],
         "input" : null,
         "name" : "summary",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:summary"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:description"
         ],
         "valid" : 1,
         "name" : "description",
         "input" : null,
         "schema" : [
            "float",
            "description",
            "some description and `markdown`"
         ]
      },
      {
         "input" : null,
         "schema" : [
            "float",
            "tags",
            [
               "some",
               "tags"
            ]
         ],
         "name" : "tags",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:tags"
         ]
      },
      {
         "schema" : [
            "float",
            "req",
            0
         ],
         "input" : null,
         "name" : "req=0 must accept undefined value",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:req"
         ]
      },
      {
         "name" : "req=1 must reject undefined value",
         "input" : null,
         "schema" : [
            "float",
            "req",
            1
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:req"
         ],
         "valid" : 0
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:forbidden"
         ],
         "valid" : 1,
         "name" : "forbidden=0 must accept defined value",
         "schema" : [
            "float",
            "forbidden",
            0
         ],
         "input" : 1.1
      },
      {
         "name" : "forbidden=1 must reject defined value",
         "schema" : [
            "float",
            "forbidden",
            1
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:forbidden"
         ],
         "valid" : 0
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:default"
         ],
         "valid" : 1,
         "name" : "default: must accept valid default 1.1",
         "schema" : [
            "float*",
            "default",
            1.1
         ],
         "input" : null
      },
      {
         "schema" : [
            "float*",
            "default",
            []
         ],
         "input" : null,
         "name" : "default: must reject invalid default []",
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:default"
         ]
      },
      {
         "dies" : 1,
         "schema" : [
            "float*",
            "clause",
            [
               "foo",
               1
            ]
         ],
         "input" : 1.1,
         "name" : "clause (dies, unknown clause)",
         "tags" : [
            "type",
            "type:float",
            "clause:clause"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:clause"
         ],
         "valid" : 1,
         "name" : "clause (ok)",
         "input" : 1.1,
         "schema" : [
            "float*",
            "clause",
            [
               "min",
               1
            ]
         ]
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:clause"
         ],
         "schema" : [
            "float*",
            "clause",
            [
               "min",
               1
            ],
            "max",
            1
         ],
         "input" : 1.1,
         "name" : "clause (ok) + clause nok = nok"
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:clause"
         ],
         "errors" : 1,
         "valid" : 0,
         "name" : "clause (nok)",
         "schema" : [
            "float*",
            "clause",
            [
               "min",
               2
            ]
         ],
         "input" : 1.1
      },
      {
         "name" : "clset (dies, unknown clause)",
         "input" : 1.1,
         "schema" : [
            "float*",
            "clset",
            {
               "foo" : 1
            }
         ],
         "dies" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:clset"
         ]
      },
      {
         "name" : "clset (dies, unknown attr)",
         "input" : 1.1,
         "dies" : 1,
         "schema" : [
            "float*",
            "clset",
            {
               "min_len.foo" : 1,
               "min_len" : 1
            }
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:clset"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float"
         ],
         "input" : 1.1,
         "schema" : [
            "float*",
            "clset",
            {}
         ],
         "name" : "clset (empty = ok)"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:clset"
         ],
         "schema" : [
            "float*",
            "clset",
            {
               "_foo" : 1,
               "foo._bar" : 2
            }
         ],
         "input" : 1.1,
         "name" : "clset (ignored clause/attr = ok)"
      },
      {
         "name" : "clset (ok + ok = ok)",
         "schema" : [
            "float*",
            "clset",
            {
               "min" : 1,
               "max" : 1.1
            }
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:clset"
         ],
         "valid" : 1
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:clset"
         ],
         "input" : 1.1,
         "schema" : [
            "float*",
            "clset",
            {
               "min" : 1
            },
            "max",
            1
         ],
         "name" : "clset (ok) + clause nok = nok"
      },
      {
         "schema" : [
            "float*",
            "clset",
            {
               "min" : 1,
               "max" : 1
            }
         ],
         "input" : 1.1,
         "name" : "clset (ok + nok = nok)",
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:clset"
         ]
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:clset"
         ],
         "schema" : [
            "float*",
            "clset",
            {
               "max" : 1.1,
               "min" : 2
            }
         ],
         "input" : 1.1,
         "name" : "clset (nok + ok = nok)"
      },
      {
         "schema" : [
            "float*",
            "clset",
            {
               "max" : 1,
               "min" : 2
            }
         ],
         "input" : 1.1,
         "name" : "clset (nok + nok = nok)",
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:clset"
         ]
      },
      {
         "name" : "ok",
         "input" : null,
         "schema" : [
            "float",
            {
               "ok" : 1
            }
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:ok"
         ],
         "valid" : 1
      },
      {
         "name" : "ok + op not (nok)",
         "schema" : [
            "float",
            {
               "!ok" : 1
            }
         ],
         "input" : null,
         "tags" : [
            "type",
            "type:float",
            "clause:ok",
            "op",
            "op:not"
         ],
         "valid" : 0
      },
      {
         "input" : 0.1,
         "schema" : [
            "float",
            "min",
            0
         ],
         "name" : ".err_level=error (clause=min, ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "attr",
            "attr:err_level"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "attr",
            "attr:err_level"
         ],
         "valid" : 0,
         "name" : ".err_level=error (clause=min, nok)",
         "input" : -0.1,
         "schema" : [
            "float",
            "min",
            0
         ]
      },
      {
         "name" : ".err_level=warn (clause=min, ok)",
         "input" : 0.1,
         "schema" : [
            "float",
            "min",
            0,
            "min.err_level",
            "warn"
         ],
         "tags" : [
            "type",
            "type:float",
            "attr",
            "attr:err_level"
         ],
         "valid" : 1
      },
      {
         "input" : -0.1,
         "schema" : [
            "float*",
            "min",
            0,
            "min.err_level",
            "warn"
         ],
         "warnings" : 1,
         "name" : ".err_level=warn (clause=min, nok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "attr",
            "attr:err_level"
         ]
      },
      {
         "name" : "is: must accept same value",
         "input" : 1.1,
         "schema" : [
            "float",
            "is",
            1.1
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:is"
         ],
         "valid" : 1
      },
      {
         "name" : "is: must reject different value",
         "schema" : [
            "float",
            "is",
            1.2
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:is"
         ],
         "valid" : 0
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 0,
         "name" : "!is (nok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "!is",
            1.1
         ]
      },
      {
         "input" : 1.1,
         "schema" : [
            "float",
            "!is",
            1.2
         ],
         "name" : "!is (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:not",
            "opshortcut"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:not"
         ],
         "valid" : 0,
         "name" : "is.op=not (nok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "is",
            1.1,
            "is.op",
            "not"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:not"
         ],
         "input" : 1.1,
         "schema" : [
            "float",
            "is",
            1.2,
            "is.op",
            "not"
         ],
         "name" : "is.op=not (ok)"
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "is& (no items)",
         "schema" : [
            "float",
            "is&",
            []
         ],
         "input" : 1.1
      },
      {
         "input" : 1.1,
         "schema" : [
            "float",
            "is&",
            [
               1.1,
               1.1
            ]
         ],
         "name" : "is& (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "schema" : [
            "float",
            "is&",
            [
               1.2,
               1.1
            ]
         ],
         "input" : 1.1,
         "name" : "is& (nok + ok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "schema" : [
            "float",
            "is&",
            [
               1.1,
               1.2
            ]
         ],
         "input" : 1.1,
         "name" : "is& (ok + nok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "schema" : [
            "float",
            "is&",
            [
               1.2,
               1.2
            ]
         ],
         "input" : 1.1,
         "name" : "is& (nok + nok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float"
         ],
         "schema" : [
            "float",
            "is",
            [],
            "is.op",
            "and"
         ],
         "input" : 1.1,
         "name" : "is.op=and (no items)"
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 1,
         "name" : "is.op=and (ok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "is",
            [
               1.1,
               1.1
            ],
            "is.op",
            "and"
         ]
      },
      {
         "name" : "is.op=and (nok + ok)",
         "schema" : [
            "float",
            "is",
            [
               1.2,
               1.1
            ],
            "is.op",
            "and"
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:and"
         ],
         "errors" : 1,
         "valid" : 0
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:and"
         ],
         "valid" : 0,
         "errors" : 1,
         "name" : "is.op=and (ok + nok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "is",
            [
               1.1,
               1.2
            ],
            "is.op",
            "and"
         ]
      },
      {
         "name" : "is.op=and (nok + nok)",
         "schema" : [
            "float",
            "is",
            [
               1.2,
               1.2
            ],
            "is.op",
            "and"
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:and"
         ],
         "errors" : 1,
         "valid" : 0
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "is| (no items)",
         "input" : 1.1,
         "schema" : [
            "float",
            "is|",
            []
         ]
      },
      {
         "name" : "is| (ok)",
         "schema" : [
            "float",
            "is|",
            [
               1.1,
               1.1
            ]
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "name" : "is| (nok + ok)",
         "schema" : [
            "float",
            "is|",
            [
               1.2,
               1.1
            ]
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "name" : "is| (ok + nok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "is|",
            [
               1.1,
               1.2
            ]
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "name" : "is| (nok + nok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "is|",
            [
               1.2,
               1.2
            ]
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 0,
         "errors" : 1
      },
      {
         "name" : "is.op=or (no items)",
         "input" : 1.1,
         "schema" : [
            "float",
            "is",
            [],
            "is.op",
            "or"
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : 1.1,
         "schema" : [
            "float",
            "is",
            [
               1.1,
               1.1
            ],
            "is.op",
            "or"
         ],
         "name" : "is.op=or (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:or"
         ]
      },
      {
         "schema" : [
            "float",
            "is",
            [
               1.2,
               1.1
            ],
            "is.op",
            "or"
         ],
         "input" : 1.1,
         "name" : "is.op=or (nok + ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:or"
         ]
      },
      {
         "name" : "is.op=or (ok + nok)",
         "schema" : [
            "float",
            "is",
            [
               1.1,
               1.2
            ],
            "is.op",
            "or"
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "schema" : [
            "float",
            "is",
            [
               1.2,
               1.2
            ],
            "is.op",
            "or"
         ],
         "input" : 1.1,
         "name" : "is.op=or (nok + nok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:or"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:none"
         ],
         "schema" : [
            "float",
            "is",
            [],
            "is.op",
            "none"
         ],
         "input" : 1.1,
         "name" : "is.op=none (empty items)"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:none"
         ],
         "schema" : [
            "float",
            "is",
            [
               1.2,
               1.2
            ],
            "is.op",
            "none"
         ],
         "input" : 1.1,
         "name" : "is.op=none (nok + nok)"
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:none"
         ],
         "input" : 1.1,
         "schema" : [
            "float",
            "is",
            [
               1.2,
               1.1
            ],
            "is.op",
            "none"
         ],
         "name" : "is.op=none (nok + ok)"
      },
      {
         "schema" : [
            "float",
            "is",
            [
               1.1,
               1.2
            ],
            "is.op",
            "none"
         ],
         "input" : 1.1,
         "name" : "is.op=none (ok + nok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:none"
         ]
      },
      {
         "name" : "is.op=none (ok + ok)",
         "schema" : [
            "float",
            "is",
            [
               1.1,
               1.1
            ],
            "is.op",
            "none"
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:is",
            "op",
            "op:none"
         ],
         "errors" : 1,
         "valid" : 0
      },
      {
         "name" : "in: must accept valid choices",
         "schema" : [
            "float",
            "in",
            [
               1.1,
               1.2
            ]
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:in"
         ],
         "valid" : 1
      },
      {
         "name" : "in: must reject empty choices",
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            []
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:in"
         ],
         "valid" : 0
      },
      {
         "input" : 1.1,
         "schema" : [
            "float",
            "!in",
            [
               1.1,
               1.2
            ]
         ],
         "name" : "!in (nok)",
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:not",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "!in (ok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "!in",
            []
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:not"
         ],
         "valid" : 0,
         "name" : "in.op=not (nok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            [
               1.1,
               1.2
            ],
            "in.op",
            "not"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:not"
         ],
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            [],
            "in.op",
            "not"
         ],
         "name" : "in.op=not (ok)"
      },
      {
         "name" : "in& (no items)",
         "input" : 1.1,
         "schema" : [
            "float",
            "in&",
            []
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "in& (ok)",
         "schema" : [
            "float",
            "in&",
            [
               [
                  1.1,
                  1.2
               ],
               [
                  1.1,
                  1.2
               ]
            ]
         ],
         "input" : 1.1
      },
      {
         "name" : "in& (nok + ok)",
         "schema" : [
            "float",
            "in&",
            [
               [],
               [
                  1.1,
                  1.2
               ]
            ]
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "errors" : 1,
         "valid" : 0
      },
      {
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "schema" : [
            "float",
            "in&",
            [
               [
                  1.1,
                  1.2
               ],
               []
            ]
         ],
         "input" : 1.1,
         "name" : "in& (ok + nok)"
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:and",
            "opshortcut"
         ],
         "errors" : 1,
         "valid" : 0,
         "name" : "in& (nok + nok)",
         "schema" : [
            "float",
            "in&",
            [
               [],
               []
            ]
         ],
         "input" : 1.1
      },
      {
         "name" : "in.op=and (no items)",
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            [],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:float"
         ],
         "valid" : 1
      },
      {
         "name" : "in.op=and (ok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 1
      },
      {
         "name" : "in.op=and (nok + ok)",
         "schema" : [
            "float",
            "in",
            [
               [],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "and"
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:and"
         ],
         "errors" : 1,
         "valid" : 0
      },
      {
         "schema" : [
            "float",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               []
            ],
            "in.op",
            "and"
         ],
         "input" : 1.1,
         "name" : "in.op=and (ok + nok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:and"
         ]
      },
      {
         "name" : "in.op=and (nok + nok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:and"
         ],
         "valid" : 0,
         "errors" : 1
      },
      {
         "name" : "in| (no items)",
         "schema" : [
            "float",
            "in|",
            []
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "name" : "in| (ok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "in|",
            [
               [
                  1.1,
                  1.2
               ],
               [
                  1.1,
                  1.2
               ]
            ]
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "in| (nok + ok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "in|",
            [
               [],
               [
                  1.1,
                  1.2
               ]
            ]
         ]
      },
      {
         "name" : "in| (ok + nok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "in|",
            [
               [
                  1.1,
                  1.2
               ],
               []
            ]
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "name" : "in| (nok + nok)",
         "schema" : [
            "float",
            "in|",
            [
               [],
               []
            ]
         ],
         "input" : 1.1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:or",
            "opshortcut"
         ],
         "errors" : 1,
         "valid" : 0
      },
      {
         "schema" : [
            "float",
            "in",
            [],
            "in.op",
            "or"
         ],
         "input" : 1.1,
         "name" : "in.op=or (no items)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:or"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1,
         "name" : "in.op=or (ok)",
         "schema" : [
            "float",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "or"
         ],
         "input" : 1.1
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:or"
         ],
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            [
               [],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "or"
         ],
         "name" : "in.op=or (nok + ok)"
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:or"
         ],
         "valid" : 1,
         "name" : "in.op=or (ok + nok)",
         "schema" : [
            "float",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               []
            ],
            "in.op",
            "or"
         ],
         "input" : 1.1
      },
      {
         "schema" : [
            "float",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "or"
         ],
         "input" : 1.1,
         "name" : "in.op=or (nok + nok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:or"
         ]
      },
      {
         "schema" : [
            "float",
            "in",
            [],
            "in.op",
            "none"
         ],
         "input" : 1.1,
         "name" : "in.op=none (empty items)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:none"
         ]
      },
      {
         "name" : "in.op=none (nok + nok)",
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            [
               [],
               []
            ],
            "in.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:none"
         ],
         "valid" : 1
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:none"
         ],
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            [
               [],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "none"
         ],
         "name" : "in.op=none (nok + ok)"
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:none"
         ],
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               []
            ],
            "in.op",
            "none"
         ],
         "name" : "in.op=none (ok + nok)"
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:in",
            "op",
            "op:none"
         ],
         "input" : 1.1,
         "schema" : [
            "float",
            "in",
            [
               [
                  1.1,
                  1.2
               ],
               [
                  1.1,
                  1.2
               ]
            ],
            "in.op",
            "none"
         ],
         "name" : "in.op=none (ok + ok)"
      },
      {
         "name" : "min: 2.1 -3.1",
         "input" : 2.1,
         "schema" : [
            "float",
            "min",
            -3.1
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:min"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:min"
         ],
         "valid" : 1,
         "name" : "min: 2.1 2.1",
         "input" : 2.1,
         "schema" : [
            "float",
            "min",
            2.1
         ]
      },
      {
         "input" : -3.1,
         "schema" : [
            "float",
            "min",
            2.1
         ],
         "name" : "min: -3.1 2.1 -> fail",
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:min"
         ]
      },
      {
         "schema" : [
            "float",
            "xmin",
            -3.1
         ],
         "input" : 2.1,
         "name" : "xmin: 2.1 -3.1",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:xmin"
         ]
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:xmin"
         ],
         "schema" : [
            "float",
            "xmin",
            2.1
         ],
         "input" : 2.1,
         "name" : "xmin: 2.1 2.1 -> fail"
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:xmin"
         ],
         "input" : -3.1,
         "schema" : [
            "float",
            "xmin",
            2.1
         ],
         "name" : "xmin: -3.1 2.1 -> fail"
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:max"
         ],
         "valid" : 0,
         "name" : "max: 2.1 -3.1 -> fail",
         "schema" : [
            "float",
            "max",
            -3.1
         ],
         "input" : 2.1
      },
      {
         "name" : "max: 2.1 2.1",
         "input" : 2.1,
         "schema" : [
            "float",
            "max",
            2.1
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:max"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:max"
         ],
         "valid" : 1,
         "name" : "max: -3.1 2.1",
         "input" : -3.1,
         "schema" : [
            "float",
            "max",
            2.1
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:xmax"
         ],
         "valid" : 0,
         "name" : "xmax: 2.1 -3.1 -> fail",
         "input" : 2.1,
         "schema" : [
            "float",
            "xmax",
            -3.1
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:xmax"
         ],
         "valid" : 0,
         "name" : "xmax: 2.1 2.1 -> fail",
         "schema" : [
            "float",
            "xmax",
            2.1
         ],
         "input" : 2.1
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:xmax"
         ],
         "input" : -3.1,
         "schema" : [
            "float",
            "xmax",
            2.1
         ],
         "name" : "xmax: -3.1 2.1"
      },
      {
         "name" : "between: 2.1 -3.1 & 4.1",
         "input" : 2.1,
         "schema" : [
            "float",
            "between",
            [
               -3.1,
               4.1
            ]
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between"
         ],
         "schema" : [
            "float",
            "between",
            [
               -3.1,
               2.1
            ]
         ],
         "input" : 2.1,
         "name" : "between: 2.1 -3.1 & 2.1"
      },
      {
         "name" : "between: 2.1 2.1 & 2.1",
         "schema" : [
            "float",
            "between",
            [
               2.1,
               2.1
            ]
         ],
         "input" : 2.1,
         "tags" : [
            "type",
            "type:float",
            "clause:between"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "schema" : [
            "float",
            "between",
            [
               2.1,
               4.1
            ]
         ],
         "name" : "between: -3.1 2.1 & 4.1 -> fail",
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:between"
         ]
      },
      {
         "name" : "xbetween: 2.1 -3.1 & 4.1",
         "schema" : [
            "float",
            "xbetween",
            [
               -3.1,
               4.1
            ]
         ],
         "input" : "2.1",
         "tags" : [
            "type",
            "type:float",
            "clause:xbetween"
         ],
         "valid" : 1
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:xbetween"
         ],
         "valid" : 0,
         "name" : "xbetween: 2.1 -3.1 & 2.1 -> fail",
         "schema" : [
            "float",
            "xbetween",
            [
               -3.1,
               "2.1"
            ]
         ],
         "input" : "2.1"
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:xbetween"
         ],
         "valid" : 0,
         "name" : "xbetween: 2.1 2.1 & 2.1 -> fail",
         "input" : "2.1",
         "schema" : [
            "float",
            "xbetween",
            [
               "2.1",
               "2.1"
            ]
         ]
      },
      {
         "schema" : [
            "float",
            "xbetween",
            [
               "2.1",
               "4.1"
            ]
         ],
         "input" : -3.1,
         "name" : "xbetween: -3.1 2.1 & 4.1 -> fail",
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:xbetween"
         ]
      },
      {
         "schema" : [
            "float",
            "!between",
            [
               -3.1,
               -3.1
            ]
         ],
         "input" : -3.1,
         "name" : "!between (nok)",
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:not",
            "opshortcut"
         ],
         "schema" : [
            "float",
            "!between",
            [
               "2.1",
               "2.1"
            ]
         ],
         "input" : -3.1,
         "name" : "!between (ok)"
      },
      {
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:not"
         ],
         "schema" : [
            "float",
            "between",
            [
               -3.1,
               -3.1
            ],
            "between.op",
            "not"
         ],
         "input" : -3.1,
         "name" : "between.op=not (nok)"
      },
      {
         "name" : "between.op=not (ok)",
         "schema" : [
            "float",
            "between",
            [
               "2.1",
               "2.1"
            ],
            "between.op",
            "not"
         ],
         "input" : -3.1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:not"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "schema" : [
            "float",
            "between&",
            []
         ],
         "name" : "between& (no items)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "name" : "between& (ok)",
         "schema" : [
            "float",
            "between&",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ]
         ],
         "input" : -3.1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 1
      },
      {
         "schema" : [
            "float",
            "between&",
            [
               [
                  "2.1",
                  "2.1"
               ],
               [
                  -3.1,
                  -3.1
               ]
            ]
         ],
         "input" : -3.1,
         "name" : "between& (nok + ok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ],
         "valid" : 0,
         "errors" : 1,
         "name" : "between& (ok + nok)",
         "input" : -3.1,
         "schema" : [
            "float",
            "between&",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  "2.1",
                  "2.1"
               ]
            ]
         ]
      },
      {
         "input" : -3.1,
         "schema" : [
            "float",
            "between&",
            [
               [
                  "2.1",
                  "2.1"
               ],
               [
                  "2.1",
                  "2.1"
               ]
            ]
         ],
         "name" : "between& (nok + nok)",
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:and",
            "opshortcut"
         ]
      },
      {
         "name" : "between.op=and (no items)",
         "input" : -3.1,
         "schema" : [
            "float",
            "between",
            [],
            "between.op",
            "and"
         ],
         "tags" : [
            "type",
            "type:float"
         ],
         "valid" : 1
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:and"
         ],
         "schema" : [
            "float",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "and"
         ],
         "input" : -3.1,
         "name" : "between.op=and (ok)"
      },
      {
         "schema" : [
            "float",
            "between",
            [
               [
                  "2.1",
                  "2.1"
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "and"
         ],
         "input" : -3.1,
         "name" : "between.op=and (nok + ok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:and"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0,
         "errors" : 1,
         "name" : "between.op=and (ok + nok)",
         "input" : -3.1,
         "schema" : [
            "float",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  "2.1",
                  "2.1"
               ]
            ],
            "between.op",
            "and"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:and"
         ],
         "valid" : 0,
         "errors" : 1,
         "name" : "between.op=and (nok + nok)",
         "input" : -3.1,
         "schema" : [
            "float",
            "between",
            [
               [
                  "2.1",
                  "2.1"
               ],
               [
                  "2.1",
                  "2.1"
               ]
            ],
            "between.op",
            "and"
         ]
      },
      {
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "valid" : 1,
         "name" : "between| (no items)",
         "schema" : [
            "float",
            "between|",
            []
         ],
         "input" : -3.1
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "schema" : [
            "float",
            "between|",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ]
         ],
         "input" : -3.1,
         "name" : "between| (ok)"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "input" : -3.1,
         "schema" : [
            "float",
            "between|",
            [
               [
                  "2.1",
                  "2.1"
               ],
               [
                  -3.1,
                  -3.1
               ]
            ]
         ],
         "name" : "between| (nok + ok)"
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "input" : -3.1,
         "schema" : [
            "float",
            "between|",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  "2.1",
                  "2.1"
               ]
            ]
         ],
         "name" : "between| (ok + nok)"
      },
      {
         "valid" : 0,
         "errors" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:or",
            "opshortcut"
         ],
         "input" : -3.1,
         "schema" : [
            "float",
            "between|",
            [
               [
                  "2.1",
                  "2.1"
               ],
               [
                  "2.1",
                  "2.1"
               ]
            ]
         ],
         "name" : "between| (nok + nok)"
      },
      {
         "name" : "between.op=or (no items)",
         "schema" : [
            "float",
            "between",
            [],
            "between.op",
            "or"
         ],
         "input" : -3.1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:or"
         ],
         "valid" : 1
      },
      {
         "input" : -3.1,
         "schema" : [
            "float",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "or"
         ],
         "name" : "between.op=or (ok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:or"
         ]
      },
      {
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:or"
         ],
         "input" : -3.1,
         "schema" : [
            "float",
            "between",
            [
               [
                  "2.1",
                  "2.1"
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "or"
         ],
         "name" : "between.op=or (nok + ok)"
      },
      {
         "input" : -3.1,
         "schema" : [
            "float",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  "2.1",
                  "2.1"
               ]
            ],
            "between.op",
            "or"
         ],
         "name" : "between.op=or (ok + nok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:or"
         ]
      },
      {
         "schema" : [
            "float",
            "between",
            [
               [
                  "2.1",
                  "2.1"
               ],
               [
                  "2.1",
                  "2.1"
               ]
            ],
            "between.op",
            "or"
         ],
         "input" : -3.1,
         "name" : "between.op=or (nok + nok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:or"
         ]
      },
      {
         "input" : -3.1,
         "schema" : [
            "float",
            "between",
            [],
            "between.op",
            "none"
         ],
         "name" : "between.op=none (empty items)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:none"
         ]
      },
      {
         "schema" : [
            "float",
            "between",
            [
               [
                  "2.1",
                  "2.1"
               ],
               [
                  "2.1",
                  "2.1"
               ]
            ],
            "between.op",
            "none"
         ],
         "input" : -3.1,
         "name" : "between.op=none (nok + nok)",
         "valid" : 1,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:none"
         ]
      },
      {
         "schema" : [
            "float",
            "between",
            [
               [
                  "2.1",
                  "2.1"
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "none"
         ],
         "input" : -3.1,
         "name" : "between.op=none (nok + ok)",
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:none"
         ]
      },
      {
         "name" : "between.op=none (ok + nok)",
         "input" : -3.1,
         "schema" : [
            "float",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  "2.1",
                  "2.1"
               ]
            ],
            "between.op",
            "none"
         ],
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:none"
         ],
         "valid" : 0,
         "errors" : 1
      },
      {
         "errors" : 1,
         "valid" : 0,
         "tags" : [
            "type",
            "type:float",
            "clause:between",
            "op",
            "op:none"
         ],
         "schema" : [
            "float",
            "between",
            [
               [
                  -3.1,
                  -3.1
               ],
               [
                  -3.1,
                  -3.1
               ]
            ],
            "between.op",
            "none"
         ],
         "input" : -3.1,
         "name" : "between.op=none (ok + ok)"
      }
   ],
   "version" : "v0.9.34 (generated by devscripts/gen-type-spectest on Thu Apr 30 20:23:56 2015)"
}
