tests: 
  - 
    input: {}

    name: "type check: must accept {}"
    schema: hash
    valid: 1
  - 
    input: 
      a: 1
    name: "type check: must accept a: 1"
    schema: hash
    valid: 1
  - 
    input: 
      "": []

    name: "type check: must accept \"\": []"
    schema: hash
    valid: 1
  - 
    input: 1
    name: "type check: must reject 1"
    schema: hash
    valid: 0
  - 
    input: a
    name: "type check: must reject a"
    schema: hash
    valid: 0
  - 
    input: []

    name: "type check: must reject []"
    schema: hash
    valid: 0
  - 
    input: ~
    name: must accept undefined value
    schema: hash
    valid: 1
  - 
    input: ~
    name: req=0 must accept undefined value
    schema: 
      - hash
      - req
      - 0
    valid: 1
  - 
    input: ~
    name: req=1 must reject undefined value
    schema: 
      - hash
      - req
      - 1
    valid: 0
  - 
    input: &1 {}

    name: forbidden=0 must accept defined value
    schema: 
      - hash
      - forbidden
      - 0
    valid: 1
  - 
    input: *1
    name: forbidden=1 must reject defined value
    schema: 
      - hash
      - forbidden
      - 1
    valid: 0
  - 
    input: ~
    name: "default: must accept valid default {}"
    schema: 
      - hash*
      - default
      - {}

    valid: 1
  - 
    input: ~
    name: "default: must reject invalid default a"
    schema: 
      - hash*
      - default
      - a
    valid: 0
  - 
    input: &3 
      a: 0
    name: .err_level=error (clause=is, ok)
    schema: 
      - hash
      - is
      - &2 
        a: 0
    valid: 1
  - 
    input: &4 
      a: 1
    name: .err_level=error (clause=is, nok)
    schema: 
      - hash
      - is
      - *2
    valid: 0
  - 
    input: *3
    name: .err_level=warn (clause=is, ok)
    schema: 
      - hash
      - is
      - *2
      - is.err_level
      - warn
    valid: 1
  - 
    input: *4
    name: .err_level=warn (clause=is, nok)
    schema: 
      - hash*
      - is
      - *2
      - is.err_level
      - warn
    valid: 1
    warnings: 1
  - 
    input: &5 {}

    name: "is: must accept same value"
    schema: 
      - hash
      - is
      - *5
    valid: 1
  - 
    input: *5
    name: "is: must reject different value"
    schema: 
      - hash
      - is
      - &6 
        a: 1
    valid: 0
  - 
    input: *5
    name: "!is (nok)"
    schema: 
      - hash
      - "!is"
      - *5
    valid: 0
  - 
    input: *5
    name: "!is (ok)"
    schema: 
      - hash
      - "!is"
      - *6
    valid: 1
  - 
    input: *5
    name: is.op=not (nok)
    schema: 
      - hash
      - is
      - *5
      - is.op
      - not
    valid: 0
  - 
    input: *5
    name: is.op=not (ok)
    schema: 
      - hash
      - is
      - *6
      - is.op
      - not
    valid: 1
  - 
    input: *5
    name: is& (no items)
    schema: 
      - hash
      - is&
      - []

    valid: 1
  - 
    input: *5
    name: is& (ok)
    schema: 
      - hash
      - is&
      - &7 
        - *5
        - *5
    valid: 1
  - 
    errors: 1
    input: *5
    name: is& (nok + ok)
    schema: 
      - hash
      - is&
      - 
        - *6
        - *5
    valid: 0
  - 
    errors: 1
    input: *5
    name: is& (ok + nok)
    schema: 
      - hash
      - is&
      - 
        - *5
        - *6
    valid: 0
  - 
    errors: 2
    input: *5
    name: is& (nok + nok)
    schema: 
      - hash
      - is&
      - 
        - *6
        - *6
    valid: 0
  - 
    input: *5
    name: is.op=and (no items)
    schema: 
      - hash
      - is
      - []

      - is.op
      - and
    valid: 1
  - 
    input: *5
    name: is.op=and (ok)
    schema: 
      - hash
      - is
      - *7
      - is.op
      - and
    valid: 1
  - 
    errors: 1
    input: *5
    name: is.op=and (nok + ok)
    schema: 
      - hash
      - is
      - 
        - *6
        - *5
      - is.op
      - and
    valid: 0
  - 
    errors: 1
    input: *5
    name: is.op=and (ok + nok)
    schema: 
      - hash
      - is
      - 
        - *5
        - *6
      - is.op
      - and
    valid: 0
  - 
    errors: 2
    input: *5
    name: is.op=and (nok + nok)
    schema: 
      - hash
      - is
      - 
        - *6
        - *6
      - is.op
      - and
    valid: 0
  - 
    input: *5
    name: is| (no items)
    schema: 
      - hash
      - is|
      - []

    valid: 1
  - 
    input: *5
    name: is| (ok)
    schema: 
      - hash
      - is|
      - *7
    valid: 1
  - 
    input: *5
    name: is| (nok + ok)
    schema: 
      - hash
      - is|
      - 
        - *6
        - *5
    valid: 1
  - 
    input: *5
    name: is| (ok + nok)
    schema: 
      - hash
      - is|
      - 
        - *5
        - *6
    valid: 1
  - 
    errors: 1
    input: *5
    name: is| (nok + nok)
    schema: 
      - hash
      - is|
      - 
        - *6
        - *6
    valid: 0
  - 
    input: *5
    name: is.op=or (no items)
    schema: 
      - hash
      - is
      - []

      - is.op
      - or
    valid: 1
  - 
    input: *5
    name: is.op=or (ok)
    schema: 
      - hash
      - is
      - *7
      - is.op
      - or
    valid: 1
  - 
    input: *5
    name: is.op=or (nok + ok)
    schema: 
      - hash
      - is
      - 
        - *6
        - *5
      - is.op
      - or
    valid: 1
  - 
    input: *5
    name: is.op=or (ok + nok)
    schema: 
      - hash
      - is
      - 
        - *5
        - *6
      - is.op
      - or
    valid: 1
  - 
    errors: 1
    input: *5
    name: is.op=or (nok + nok)
    schema: 
      - hash
      - is
      - 
        - *6
        - *6
      - is.op
      - or
    valid: 0
  - 
    input: *5
    name: is.op=none (empty items)
    schema: 
      - hash
      - is
      - []

      - is.op
      - none
    valid: 1
  - 
    input: *5
    name: is.op=none (nok + nok)
    schema: 
      - hash
      - is
      - 
        - *6
        - *6
      - is.op
      - none
    valid: 1
  - 
    errors: 1
    input: *5
    name: is.op=none (nok + ok)
    schema: 
      - hash
      - is
      - 
        - *6
        - *5
      - is.op
      - none
    valid: 0
  - 
    errors: 1
    input: *5
    name: is.op=none (ok + nok)
    schema: 
      - hash
      - is
      - 
        - *5
        - *6
      - is.op
      - none
    valid: 0
  - 
    errors: 2
    input: *5
    name: is.op=none (ok + ok)
    schema: 
      - hash
      - is
      - *7
      - is.op
      - none
    valid: 0
  - 
    input: *5
    name: "in: must accept valid choices"
    schema: 
      - hash
      - in
      - &8 
        - *5
        - *6
    valid: 1
  - 
    input: *5
    name: "in: must reject empty choices"
    schema: 
      - hash
      - in
      - []

    valid: 0
  - 
    input: *5
    name: "!in (nok)"
    schema: 
      - hash
      - "!in"
      - *8
    valid: 0
  - 
    input: *5
    name: "!in (ok)"
    schema: 
      - hash
      - "!in"
      - &9 []

    valid: 1
  - 
    input: *5
    name: in.op=not (nok)
    schema: 
      - hash
      - in
      - *8
      - in.op
      - not
    valid: 0
  - 
    input: *5
    name: in.op=not (ok)
    schema: 
      - hash
      - in
      - *9
      - in.op
      - not
    valid: 1
  - 
    input: *5
    name: in& (no items)
    schema: 
      - hash
      - in&
      - []

    valid: 1
  - 
    input: *5
    name: in& (ok)
    schema: 
      - hash
      - in&
      - &10 
        - *8
        - 
          - {}

          - 
            a: 1
    valid: 1
  - 
    errors: 1
    input: *5
    name: in& (nok + ok)
    schema: 
      - hash
      - in&
      - 
        - *9
        - *8
    valid: 0
  - 
    errors: 1
    input: *5
    name: in& (ok + nok)
    schema: 
      - hash
      - in&
      - 
        - *8
        - *9
    valid: 0
  - 
    errors: 2
    input: *5
    name: in& (nok + nok)
    schema: 
      - hash
      - in&
      - 
        - *9
        - &11 []

    valid: 0
  - 
    input: *5
    name: in.op=and (no items)
    schema: 
      - hash
      - in
      - []

      - in.op
      - and
    valid: 1
  - 
    input: *5
    name: in.op=and (ok)
    schema: 
      - hash
      - in
      - *10
      - in.op
      - and
    valid: 1
  - 
    errors: 1
    input: *5
    name: in.op=and (nok + ok)
    schema: 
      - hash
      - in
      - 
        - *9
        - *8
      - in.op
      - and
    valid: 0
  - 
    errors: 1
    input: *5
    name: in.op=and (ok + nok)
    schema: 
      - hash
      - in
      - 
        - *8
        - *9
      - in.op
      - and
    valid: 0
  - 
    errors: 2
    input: *5
    name: in.op=and (nok + nok)
    schema: 
      - hash
      - in
      - 
        - *9
        - *11
      - in.op
      - and
    valid: 0
  - 
    input: *5
    name: in| (no items)
    schema: 
      - hash
      - in|
      - []

    valid: 1
  - 
    input: *5
    name: in| (ok)
    schema: 
      - hash
      - in|
      - *10
    valid: 1
  - 
    input: *5
    name: in| (nok + ok)
    schema: 
      - hash
      - in|
      - 
        - *9
        - *8
    valid: 1
  - 
    input: *5
    name: in| (ok + nok)
    schema: 
      - hash
      - in|
      - 
        - *8
        - *9
    valid: 1
  - 
    errors: 1
    input: *5
    name: in| (nok + nok)
    schema: 
      - hash
      - in|
      - 
        - *9
        - *11
    valid: 0
  - 
    input: *5
    name: in.op=or (no items)
    schema: 
      - hash
      - in
      - []

      - in.op
      - or
    valid: 1
  - 
    input: *5
    name: in.op=or (ok)
    schema: 
      - hash
      - in
      - *10
      - in.op
      - or
    valid: 1
  - 
    input: *5
    name: in.op=or (nok + ok)
    schema: 
      - hash
      - in
      - 
        - *9
        - *8
      - in.op
      - or
    valid: 1
  - 
    input: *5
    name: in.op=or (ok + nok)
    schema: 
      - hash
      - in
      - 
        - *8
        - *9
      - in.op
      - or
    valid: 1
  - 
    errors: 1
    input: *5
    name: in.op=or (nok + nok)
    schema: 
      - hash
      - in
      - 
        - *9
        - *11
      - in.op
      - or
    valid: 0
  - 
    input: *5
    name: in.op=none (empty items)
    schema: 
      - hash
      - in
      - []

      - in.op
      - none
    valid: 1
  - 
    input: *5
    name: in.op=none (nok + nok)
    schema: 
      - hash
      - in
      - 
        - *9
        - *11
      - in.op
      - none
    valid: 1
  - 
    errors: 1
    input: *5
    name: in.op=none (nok + ok)
    schema: 
      - hash
      - in
      - 
        - *9
        - *8
      - in.op
      - none
    valid: 0
  - 
    errors: 1
    input: *5
    name: in.op=none (ok + nok)
    schema: 
      - hash
      - in
      - 
        - *8
        - *9
      - in.op
      - none
    valid: 0
  - 
    errors: 2
    input: *5
    name: in.op=none (ok + ok)
    schema: 
      - hash
      - in
      - *10
      - in.op
      - none
    valid: 0
  - 
    input: &12 
      a: 1
    name: len (ok)
    schema: 
      - hash
      - len
      - 1
    valid: 1
  - 
    input: *12
    name: len (nok)
    schema: 
      - hash
      - len
      - 2
    valid: 0
  - 
    input: *12
    name: min_len (ok)
    schema: 
      - hash
      - min_len
      - 1
    valid: 1
  - 
    input: *12
    name: min_len (nok)
    schema: 
      - hash
      - min_len
      - 2
    valid: 0
  - 
    input: *12
    name: max_len (ok)
    schema: 
      - hash
      - min_len
      - 1
    valid: 1
  - 
    input: &13 
      a: 1
      b: '1.1'
    name: max_len (nok)
    schema: 
      - hash
      - max_len
      - 1
    valid: 0
  - 
    input: *12
    name: len_between (ok)
    schema: 
      - hash
      - len_between
      - 
        - 1
        - 2
    valid: 1
  - 
    input: *13
    name: len_between (nok)
    schema: 
      - hash
      - len_between
      - 
        - 1
        - 1
    valid: 0
  - 
    input: *13
    name: each_index (ok)
    schema: 
      - hash
      - each_index
      - 
        - str
        - len
        - 1
    valid: 1
  - 
    input: *13
    name: each_index (nok)
    schema: 
      - hash
      - each_index
      - 
        - str
        - len
        - 2
    valid: 0
  - 
    input: *13
    name: each_elem (ok)
    schema: 
      - hash
      - each_elem
      - float
    valid: 1
  - 
    input: *13
    name: each_elem (nok)
    schema: 
      - hash
      - each_elem
      - int
    valid: 0
  - 
    input: {}

    name: "keys: (ok, empty)"
    schema: &14 
      - hash
      - 
        keys: 
          a: int
          b: float*
    valid: 1
  - 
    input: 
      a: ~
    name: "keys: (ok, only a, a valid 1)"
    schema: *14
    valid: 1
  - 
    input: 
      a: 1
    name: "keys: (ok, only a, a valid 2)"
    schema: *14
    valid: 1
  - 
    input: 
      a: '1.1'
    name: "keys: (nok, only a, a invalid)"
    schema: *14
    valid: 0
  - 
    input: 
      a: 1
    name: "keys: (ok, only a, valid 2)"
    schema: *14
    valid: 1
  - 
    input: 
      a: 1
      b: '1.1'
    name: "keys: (ok, a & b, valid)"
    schema: *14
    valid: 1
  - 
    input: 
      a: 1
      b: ~
    name: "keys: (nok, a & b, b invalid)"
    schema: *14
    valid: 0
  - 
    input: 
      a: '1.1'
      b: '1.1'
    name: "keys: (nok, a & b, a invalid)"
    schema: *14
    valid: 0
  - 
    input: 
      a: '1.1'
      b: ~
    name: "keys: (nok, a & b, a & b invalid)"
    schema: *14
    valid: 0
  - 
    input: 
      a: 1
      b: '1.1'
      c: 1
    name: "keys: (nok, extra)"
    schema: *14
    valid: 0
  - 
    input: 
      a: 1
      b: '1.1'
      c: 1
    name: "keys: (ok, extra, restrict=0)"
    schema: *14
    valid: 0
  - 
    input: {}

    name: keys (create_default=1) 1
    output: 
      b: 2
    schema: &15 
      - hash
      - 
        keys: 
          a: int
          b: 
            - int
            - default
            - 2
    valid: 1
  - 
    input: 
      b: ~
    name: keys (create_default=1) 2
    output: 
      b: 2
    schema: *15
    valid: 1
  - 
    input: {}

    name: keys (create_default=0) 1
    output: {}

    schema: &16 
      - hash
      - 
        keys: 
          a: int
          b: 
            - int
            - default
            - 2
        keys.create_default: 0
    valid: 1
  - 
    input: 
      b: ~
    name: keys (create_default=0) 2
    output: 
      b: 2
    schema: *16
    valid: 1
version: v0.9.20 (generated by devscripts/gen-type-spectest on Tue Nov 27 10:35:10 2012)
